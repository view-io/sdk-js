{
  "docs": [
    {
      "comment": "/**\r\n   * Constructs a new ViewAssistantSdk.\r\n   * @alias module:base/ViewAssistantSdk\r\n   * @class\r\n   * @param {string} tenantGuid\r\n   * @param {string} accessKey\r\n   * @param {string} endpoint\r\n   */",
      "meta": {
        "range": [
          591,
          687
        ],
        "filename": "ViewAssistantSdk.js",
        "lineno": 17,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Assistant",
        "code": {
          "id": "astnode100000031",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new ViewAssistantSdk.",
      "alias": "module:base/ViewAssistantSdk",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "endpoint"
        }
      ],
      "name": "module:base/ViewAssistantSdk",
      "longname": "module:base/ViewAssistantSdk",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * AssistantRagRequest request.\r\n   *\r\n   * @param {Object} ragRequest - Information about the RAG request.\r\n   * @param {string} ragRequest.PromptPrefix - The prompt prefix for the assistant.\r\n   * @param {string} ragRequest.Question - The question being asked.\r\n   * @param {number} ragRequest.MaxResults - The maximum number of documents to retrieve (between 1 and 100).\r\n   * @param {number} ragRequest.Temperature - The temperature value between 0 and 1.\r\n   * @param {number} ragRequest.TopP - The top P value for sampling (between 0 and 1).\r\n   * @param {number} ragRequest.MaxTokens - The maximum number of tokens to generate (between 1 and 16384).\r\n   * @param {string} ragRequest.GenerationModel - The generation model and tag (default: 'llama3.1:latest').\r\n   * @param {string} ragRequest.GenerationProvider - The generation provider (default: 'ollama').\r\n   * @param {string} ragRequest.OllamaHostname - The hostname for the Ollama service (default: 'localhost').\r\n   * @param {number} ragRequest.OllamaPort - The TCP port for the Ollama service (default: 11434).\r\n   * @param {string} ragRequest.VectorDatabaseHostname - The hostname for the vector database (default: 'localhost').\r\n   * @param {number} ragRequest.VectorDatabasePort - The port for the vector database (default: 5432).\r\n   * @param {string} ragRequest.VectorDatabaseName - The name of the vector database (default: 'vectors').\r\n   * @param {string} ragRequest.VectorDatabaseUser - The user for the vector database (default: 'postgres').\r\n   * @param {string} ragRequest.VectorDatabasePassword - The password for the vector database.\r\n   * @param {boolean} ragRequest.Stream - Whether streaming is enabled (default: true).\r\n   * @param {boolean} ragRequest.ContextSort - Whether contextual sorting is enabled (default: true).\r\n   * @param {number} ragRequest.ContextScope - The number of neighboring data elements to retrieve (between 1 and 16).\r\n   * @param {boolean} ragRequest.Rerank - Whether re-ranking is enabled (default: true).\r\n   * @param {number} ragRequest.RerankTopK - The number of top chunks or documents to re-rank (between 1 and 16).\r\n   * @param {function} onToken - Callback to handle tokens as they are emitted.\r\n   * @param {AbortSignal} cancelToken - Optional. The cancellation token to cancel the request if needed.\r\n   */",
      "meta": {
        "range": [
          3158,
          4328
        ],
        "filename": "ViewAssistantSdk.js",
        "lineno": 54,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Assistant",
        "code": {
          "id": "astnode100000044",
          "name": "processRag",
          "type": "MethodDefinition",
          "paramnames": [
            "ragRequest",
            "onToken",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "AssistantRagRequest request.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the RAG request.",
          "name": "ragRequest"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The prompt prefix for the assistant.",
          "name": "ragRequest.PromptPrefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The question being asked.",
          "name": "ragRequest.Question"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The maximum number of documents to retrieve (between 1 and 100).",
          "name": "ragRequest.MaxResults"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The temperature value between 0 and 1.",
          "name": "ragRequest.Temperature"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The top P value for sampling (between 0 and 1).",
          "name": "ragRequest.TopP"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The maximum number of tokens to generate (between 1 and 16384).",
          "name": "ragRequest.MaxTokens"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The generation model and tag (default: 'llama3.1:latest').",
          "name": "ragRequest.GenerationModel"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The generation provider (default: 'ollama').",
          "name": "ragRequest.GenerationProvider"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The hostname for the Ollama service (default: 'localhost').",
          "name": "ragRequest.OllamaHostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The TCP port for the Ollama service (default: 11434).",
          "name": "ragRequest.OllamaPort"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The hostname for the vector database (default: 'localhost').",
          "name": "ragRequest.VectorDatabaseHostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The port for the vector database (default: 5432).",
          "name": "ragRequest.VectorDatabasePort"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The name of the vector database (default: 'vectors').",
          "name": "ragRequest.VectorDatabaseName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The user for the vector database (default: 'postgres').",
          "name": "ragRequest.VectorDatabaseUser"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The password for the vector database.",
          "name": "ragRequest.VectorDatabasePassword"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether streaming is enabled (default: true).",
          "name": "ragRequest.Stream"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether contextual sorting is enabled (default: true).",
          "name": "ragRequest.ContextSort"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The number of neighboring data elements to retrieve (between 1 and 16).",
          "name": "ragRequest.ContextScope"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether re-ranking is enabled (default: true).",
          "name": "ragRequest.Rerank"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The number of top chunks or documents to re-rank (between 1 and 16).",
          "name": "ragRequest.RerankTopK"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "Callback to handle tokens as they are emitted.",
          "name": "onToken"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "description": "Optional. The cancellation token to cancel the request if needed.",
          "name": "cancelToken"
        }
      ],
      "name": "processRag",
      "longname": "processRag",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Process a chat request.\r\n   *\r\n   * @param {Object} chatRequest - Information about the assistant chat request.\r\n   * @param {string} chatRequest.Question - The question being asked.\r\n   * @param {number} chatRequest.Temperature - The temperature value between 0 and 1.\r\n   * @param {number} chatRequest.MaxTokens - The maximum number of tokens to generate (between 1 and 16384).\r\n   * @param {string} chatRequest.GenerationModel - The model tag for generation (default: 'llama3.1:latest').\r\n   * @param {string} chatRequest.GenerationProvider - The provider for generation (default: 'ollama').\r\n   * @param {string} chatRequest.OllamaHostname - The hostname for Ollama (default: 'localhost').\r\n   * @param {number} chatRequest.OllamaPort - The port for Ollama (default: 11434).\r\n   * @param {boolean} chatRequest.Stream - Whether streaming is enabled (default: true).*\r\n   * @param {function} onToken - Callback to handle tokens as they are emitted.\r\n   * @param {AbortSignal} cancelToken - Optional. The cancellation token to cancel the request if needed.\r\n   */",
      "meta": {
        "range": [
          5412,
          6548
        ],
        "filename": "ViewAssistantSdk.js",
        "lineno": 103,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Assistant",
        "code": {
          "id": "astnode100000201",
          "name": "processChat",
          "type": "MethodDefinition",
          "paramnames": [
            "chatRequest",
            "onToken",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process a chat request.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the assistant chat request.",
          "name": "chatRequest"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The question being asked.",
          "name": "chatRequest.Question"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The temperature value between 0 and 1.",
          "name": "chatRequest.Temperature"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The maximum number of tokens to generate (between 1 and 16384).",
          "name": "chatRequest.MaxTokens"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The model tag for generation (default: 'llama3.1:latest').",
          "name": "chatRequest.GenerationModel"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The provider for generation (default: 'ollama').",
          "name": "chatRequest.GenerationProvider"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The hostname for Ollama (default: 'localhost').",
          "name": "chatRequest.OllamaHostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The port for Ollama (default: 11434).",
          "name": "chatRequest.OllamaPort"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether streaming is enabled (default: true).*",
          "name": "chatRequest.Stream"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "Callback to handle tokens as they are emitted.",
          "name": "onToken"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "description": "Optional. The cancellation token to cancel the request if needed.",
          "name": "cancelToken"
        }
      ],
      "name": "processChat",
      "longname": "processChat",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Create a writable stream to parse SSE data.\r\n   * @param {function} onToken - Callback to handle tokens as they are emitted.\r\n   * @returns {Writable} - A writable stream for parsing.\r\n   */",
      "meta": {
        "range": [
          6756,
          7386
        ],
        "filename": "ViewAssistantSdk.js",
        "lineno": 139,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Assistant",
        "code": {
          "id": "astnode100000356",
          "name": "_createStreamParser",
          "type": "MethodDefinition",
          "paramnames": [
            "onToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create a writable stream to parse SSE data.",
      "params": [
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "Callback to handle tokens as they are emitted.",
          "name": "onToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Writable"
            ]
          },
          "description": "- A writable stream for parsing."
        }
      ],
      "name": "_createStreamParser",
      "longname": "_createStreamParser",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Extract a token from JSON string.\r\n   * @param {string} json - The JSON string.\r\n   * @returns {string|null} - The extracted token or null if not found.\r\n   */",
      "meta": {
        "range": [
          7565,
          7722
        ],
        "filename": "ViewAssistantSdk.js",
        "lineno": 166,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Assistant",
        "code": {
          "id": "astnode100000437",
          "name": "_extractToken",
          "type": "MethodDefinition",
          "paramnames": [
            "json"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Extract a token from JSON string.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The JSON string.",
          "name": "json"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "- The extracted token or null if not found."
        }
      ],
      "name": "_extractToken",
      "longname": "_extractToken",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   *Retrieve a model.\r\n   *\r\n   * @param {Object} model - Information about the assistant chat request.\r\n   * @param {string} model.ModelName - The question being asked.\r\n   * @param {number} model.OllamaHostname - The temperature value between 0 and 1.\r\n   * @param {number} model.OllamaPort - The maximum number of tokens to generate (between 1 and 16384).\r\n   * @param {function} onToken - Callback to handle tokens as they are emitted.\r\n   * @param {AbortSignal} cancelToken - Optional. The cancellation token to cancel the request if needed.\r\n   */",
      "meta": {
        "range": [
          8290,
          9405
        ],
        "filename": "ViewAssistantSdk.js",
        "lineno": 185,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Assistant",
        "code": {
          "id": "astnode100000461",
          "name": "retrieveModel",
          "type": "MethodDefinition",
          "paramnames": [
            "model",
            "onToken",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Retrieve a model.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the assistant chat request.",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The question being asked.",
          "name": "model.ModelName"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The temperature value between 0 and 1.",
          "name": "model.OllamaHostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The maximum number of tokens to generate (between 1 and 16384).",
          "name": "model.OllamaPort"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "Callback to handle tokens as they are emitted.",
          "name": "onToken"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "description": "Optional. The cancellation token to cancel the request if needed.",
          "name": "cancelToken"
        }
      ],
      "name": "retrieveModel",
      "longname": "retrieveModel",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   *Delete a model.\r\n   *\r\n   * @param {Object} model - Information about the assistant chat request.\r\n   * @param {string} model.ModelName - The name of the model.\r\n   * @param {number} model.OllamaHostname - The temperature value between 0 and 1.\r\n   * @param {number} model.OllamaPort - The maximum number of tokens to generate (between 1 and 16384).\r\n   * @param {function} onToken - Callback to handle tokens as they are emitted.\r\n   * @param {AbortSignal} cancelToken - Optional. The cancellation token to cancel the request if needed.\r\n   */",
      "meta": {
        "range": [
          9968,
          11081
        ],
        "filename": "ViewAssistantSdk.js",
        "lineno": 227,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Assistant",
        "code": {
          "id": "astnode100000616",
          "name": "deleteModel",
          "type": "MethodDefinition",
          "paramnames": [
            "model",
            "onToken",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a model.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the assistant chat request.",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The name of the model.",
          "name": "model.ModelName"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The temperature value between 0 and 1.",
          "name": "model.OllamaHostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The maximum number of tokens to generate (between 1 and 16384).",
          "name": "model.OllamaPort"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "Callback to handle tokens as they are emitted.",
          "name": "onToken"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "description": "Optional. The cancellation token to cancel the request if needed.",
          "name": "cancelToken"
        }
      ],
      "name": "deleteModel",
      "longname": "deleteModel",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   *Retrieve model list.\r\n   *\r\n   * @param {Object} model - Information about the assistant chat request.\r\n   * @param {number} model.OllamaHostname - The temperature value between 0 and 1.\r\n   * @param {number} model.OllamaPort - The maximum number of tokens to generate (between 1 and 16384).\r\n   * @param {function} onToken - Callback to handle tokens as they are emitted.\r\n   * @param {AbortSignal} cancelToken - Optional. The cancellation token to cancel the request if needed.\r\n   */",
      "meta": {
        "range": [
          11586,
          12705
        ],
        "filename": "ViewAssistantSdk.js",
        "lineno": 268,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Assistant",
        "code": {
          "id": "astnode100000771",
          "name": "retrieveModelList",
          "type": "MethodDefinition",
          "paramnames": [
            "model",
            "onToken",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Retrieve model list.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the assistant chat request.",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The temperature value between 0 and 1.",
          "name": "model.OllamaHostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The maximum number of tokens to generate (between 1 and 16384).",
          "name": "model.OllamaPort"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "Callback to handle tokens as they are emitted.",
          "name": "onToken"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "description": "Optional. The cancellation token to cancel the request if needed.",
          "name": "cancelToken"
        }
      ],
      "name": "retrieveModelList",
      "longname": "retrieveModelList",
      "kind": "function",
      "scope": "global"
    },
    {
      "comment": "/**\r\n * Crawler service.\r\n * @module base/ViewCrawlerSdk\r\n * @version 0.1.0\r\n */",
      "meta": {
        "filename": "ViewCrawlerSdk.js",
        "lineno": 11,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {}
      },
      "description": "Crawler service.",
      "kind": "module",
      "name": "base/ViewCrawlerSdk",
      "version": "0.1.0",
      "longname": "module:base/ViewCrawlerSdk"
    },
    {
      "comment": "/**\r\n   * Constructs a new OrchestratorApi.\r\n   * @alias module:base/ViewOrchestratorSdk\r\n   * @class\r\n   * @param {string} tenantGuid - Tenant GUID.\r\n   * @param {string} accessKey - Access key.\r\n   * @param {string} endpoint - Endpoint URL .\r\n   */",
      "meta": {
        "range": [
          938,
          1078
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 25,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100000969",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new OrchestratorApi.",
      "alias": "module:base/ViewOrchestratorSdk",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID.",
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key.",
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL .",
          "name": "endpoint"
        }
      ],
      "name": "module:base/ViewOrchestratorSdk",
      "longname": "module:base/ViewOrchestratorSdk",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Enumerate Data Repositories.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult<DataRepository>|null>} A promise resolving to the enumeration result or null.\r\n   */",
      "meta": {
        "range": [
          1386,
          1601
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 37,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100000988",
          "name": "enumerateDataRepositories",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Data Repositories.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult.<DataRepository>|null)>"
            ]
          },
          "description": "A promise resolving to the enumeration result or null."
        }
      ],
      "name": "enumerateDataRepositories",
      "longname": "module:base/ViewCrawlerSdk#enumerateDataRepositories",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve All Data Repositories.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<DataRepository[]>} A promise that resolves to an array of data repositories.\r\n   */",
      "meta": {
        "range": [
          1860,
          2078
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 47,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001014",
          "name": "retrieveAllDataRepositories",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve All Data Repositories.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<DataRepository>>"
            ]
          },
          "description": "A promise that resolves to an array of data repositories."
        }
      ],
      "name": "retrieveAllDataRepositories",
      "longname": "module:base/ViewCrawlerSdk#retrieveAllDataRepositories",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve Data By GUID Repository.\r\n   * @param {string} guid - The GUID of the data repository to retrieve.\r\n   * @param {CancelToken} cancelToken - The token to cancel the operation.\r\n   * @returns {Promise<DataRepository|ApiErrorResponse>} A promise that resolves to the data repository object, or null if not found, or an error response.\r\n   */",
      "meta": {
        "range": [
          2445,
          2767
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 58,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001040",
          "name": "retrieveByGUIDDataRepositories",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve Data By GUID Repository.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data repository to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "CancelToken"
            ]
          },
          "description": "The token to cancel the operation.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(DataRepository|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the data repository object, or null if not found, or an error response."
        }
      ],
      "name": "retrieveByGUIDDataRepositories",
      "longname": "module:base/ViewCrawlerSdk#retrieveByGUIDDataRepositories",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write Disk Data Repository.\r\n   * @param {Object} repository - Information about the repository object data.\r\n   * @param {string} repository.Name - Name of repository.\r\n   * @param {string} [repository.RepositoryType] - Type of repository.\r\n   * @param {string} repository.DiskDirectory - The directory path for storing the repository.\r\n   * @param {boolean} repository.DiskIncludeSubdirectories - Whether to include subdirectories in the disk directory.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<DataRepository|null|ApiErrorResponse>} A promise that resolves to the written data repository object, or null if the write fails, or an error response.\r\n   * @throws {Error} If the repository is null or empty.\r\n   */",
      "meta": {
        "range": [
          3581,
          3916
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 76,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001079",
          "name": "writeDiskDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Write Disk Data Repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the repository object data.",
          "name": "repository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of repository.",
          "name": "repository.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Type of repository.",
          "name": "repository.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The directory path for storing the repository.",
          "name": "repository.DiskDirectory"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether to include subdirectories in the disk directory.",
          "name": "repository.DiskIncludeSubdirectories"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(DataRepository|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the written data repository object, or null if the write fails, or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the repository is null or empty."
        }
      ],
      "name": "writeDiskDataRepository",
      "longname": "module:base/ViewCrawlerSdk#writeDiskDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write S3 Data Repository.\r\n   * @param {Object} repository - Information about the repository object data.\r\n   * @param {string} repository.TenantGUID - GUID of the tenant (e.g., \"default\").\r\n   * @param {string} repository.OwnerGUID - GUID of the owner (e.g., \"default\").\r\n   * @param {string} repository.Name - Name of the repository.\r\n   * @param {string} repository.RepositoryType - Type of the repository.\r\n   * @param {string|null} [repository.S3EndpointUrl] - (Optional) URL for the S3 endpoint (null if not provided).\r\n   * @param {string} repository.S3BaseUrl - Base URL for the S3 repository, with placeholders for bucket and key\").\r\n   * @param {string} repository.S3AccessKey - Access key for the S3 repository.\r\n   * @param {string} repository.S3SecretKey - Secret key for the S3 repository.\r\n   * @param {string} repository.S3BucketName - Name of the S3 bucket.\r\n   * @param {string} repository.S3Region - Region of the S3 bucket.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<DataRepository|null|ApiErrorResponse>} A promise that resolves to the written data repository object, or null if the write fails, or an error response.\r\n   * @throws {Error} If the repository is null or empty.\r\n   */",
      "meta": {
        "range": [
          5219,
          5552
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 100,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001117",
          "name": "writeS3DataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Write S3 Data Repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the repository object data.",
          "name": "repository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the tenant (e.g., \"default\").",
          "name": "repository.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the owner (e.g., \"default\").",
          "name": "repository.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository.",
          "name": "repository.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of the repository.",
          "name": "repository.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "optional": true,
          "description": "(Optional) URL for the S3 endpoint (null if not provided).",
          "name": "repository.S3EndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Base URL for the S3 repository, with placeholders for bucket and key\").",
          "name": "repository.S3BaseUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key for the S3 repository.",
          "name": "repository.S3AccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Secret key for the S3 repository.",
          "name": "repository.S3SecretKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the S3 bucket.",
          "name": "repository.S3BucketName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Region of the S3 bucket.",
          "name": "repository.S3Region"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(DataRepository|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the written data repository object, or null if the write fails, or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the repository is null or empty."
        }
      ],
      "name": "writeS3DataRepository",
      "longname": "module:base/ViewCrawlerSdk#writeS3DataRepository",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write S3 Compatible Storage Data Repository.\r\n   * @param {Object} repository - Information about the repository object data.\r\n   * @param {string} repository.TenantGUID - GUID of the tenant.\r\n   * @param {string} repository.OwnerGUID - GUID of the owner.\r\n   * @param {string} repository.Name - Name of the repository.\r\n   * @param {string} repository.RepositoryType - Type of the repository.\r\n   * @param {string} repository.S3EndpointUrl - URL of the S3-compatible storage endpoint.\r\n   * @param {string} repository.S3BaseUrl - Base URL for accessing objects in the S3-compatible storage.\r\n   * @param {string} repository.S3AccessKey - Access key for authentication with the S3-compatible storage.\r\n   * @param {string} repository.S3SecretKey - Secret key for authentication with the S3-compatible storage.\r\n   * @param {string} repository.S3BucketName - Name of the S3-compatible storage bucket.\r\n   * @param {string} repository.S3Region - Region of the S3-compatible storage bucket.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<DataRepository|null|ApiErrorResponse>} A promise that resolves to the written data repository object, or null if the write fails, or an error response.\r\n   * @throws {Error} If the repository is null or empty.\r\n   */",
      "meta": {
        "range": [
          6900,
          7243
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 125,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001155",
          "name": "writeS3CompatibleDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Write S3 Compatible Storage Data Repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the repository object data.",
          "name": "repository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the tenant.",
          "name": "repository.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the owner.",
          "name": "repository.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository.",
          "name": "repository.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of the repository.",
          "name": "repository.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "URL of the S3-compatible storage endpoint.",
          "name": "repository.S3EndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Base URL for accessing objects in the S3-compatible storage.",
          "name": "repository.S3BaseUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key for authentication with the S3-compatible storage.",
          "name": "repository.S3AccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Secret key for authentication with the S3-compatible storage.",
          "name": "repository.S3SecretKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the S3-compatible storage bucket.",
          "name": "repository.S3BucketName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Region of the S3-compatible storage bucket.",
          "name": "repository.S3Region"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(DataRepository|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the written data repository object, or null if the write fails, or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the repository is null or empty."
        }
      ],
      "name": "writeS3CompatibleDataRepository",
      "longname": "module:base/ViewCrawlerSdk#writeS3CompatibleDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write Azure BLOB Data Repository.\r\n   * @param {Object} repository - Information about the repository object data.\r\n   * @param {string} repository.TenantGUID - GUID of the tenant.\r\n   * @param {string} repository.OwnerGUID - GUID of the owner.\r\n   * @param {string} repository.Name - Name of the repository.\r\n   * @param {string} repository.RepositoryType - Type of the repository (e.g., \"AzureBlob\").\r\n   * @param {string} repository.AzureEndpointUrl - URL of the Azure Blob storage endpoint.\r\n   * @param {string} repository.AzureAccountName - Name of the Azure storage account.\r\n   * @param {string} repository.AzureContainerName - Name of the Azure Blob storage container.\r\n   * @param {string} repository.AzureAccessKey - Access key for authentication with the Azure Blob storage.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<DataRepository|null|ApiErrorResponse>} A promise that resolves to the written data repository object, or null if the write fails, or an error response.\r\n   * @throws {Error} If the repository is null or empty.\r\n   */",
      "meta": {
        "range": [
          8388,
          8728
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 147,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001193",
          "name": "writeAzureBLOBDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Write Azure BLOB Data Repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the repository object data.",
          "name": "repository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the tenant.",
          "name": "repository.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the owner.",
          "name": "repository.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository.",
          "name": "repository.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of the repository (e.g., \"AzureBlob\").",
          "name": "repository.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "URL of the Azure Blob storage endpoint.",
          "name": "repository.AzureEndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the Azure storage account.",
          "name": "repository.AzureAccountName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the Azure Blob storage container.",
          "name": "repository.AzureContainerName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key for authentication with the Azure Blob storage.",
          "name": "repository.AzureAccessKey"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(DataRepository|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the written data repository object, or null if the write fails, or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the repository is null or empty."
        }
      ],
      "name": "writeAzureBLOBDataRepository",
      "longname": "module:base/ViewCrawlerSdk#writeAzureBLOBDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write CIFS Data Repository.\r\n   * @param {Object} repository - Information about the repository object data.\r\n   * @param {string} repository.TenantGUID - GUID of the tenant.\r\n   * @param {string} repository.OwnerGUID - GUID of the owner.\r\n   * @param {string} repository.Name - Name of the repository.\r\n   * @param {string} repository.RepositoryType - Type of the repository (e.g., \"CIFS\").\r\n   * @param {string} repository.CifsHostname - Hostname or IP address of the CIFS server.\r\n   * @param {string} repository.CifsUsername - Username for authentication with the CIFS server.\r\n   * @param {string} repository.CifsPassword - Password for authentication with the CIFS server.\r\n   * @param {string} repository.CifsShareName - The name of the CIFS share.\r\n   * @param {boolean} repository.CifsIncludeSubdirectories - Whether to include subdirectories in the CIFS share (true or false).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<DataRepository|null|ApiErrorResponse>} A promise that resolves to the written data repository object, or null if the write fails, or an error response.\r\n   * @throws {Error} If the repository is null or empty.\r\n   */",
      "meta": {
        "range": [
          9973,
          10308
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 170,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001231",
          "name": "writeCIFSDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Write CIFS Data Repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the repository object data.",
          "name": "repository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the tenant.",
          "name": "repository.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the owner.",
          "name": "repository.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository.",
          "name": "repository.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of the repository (e.g., \"CIFS\").",
          "name": "repository.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname or IP address of the CIFS server.",
          "name": "repository.CifsHostname"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Username for authentication with the CIFS server.",
          "name": "repository.CifsUsername"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Password for authentication with the CIFS server.",
          "name": "repository.CifsPassword"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The name of the CIFS share.",
          "name": "repository.CifsShareName"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether to include subdirectories in the CIFS share (true or false).",
          "name": "repository.CifsIncludeSubdirectories"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(DataRepository|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the written data repository object, or null if the write fails, or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the repository is null or empty."
        }
      ],
      "name": "writeCIFSDataRepository",
      "longname": "module:base/ViewCrawlerSdk#writeCIFSDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write NFS Data Repository.\r\n   * @param {Object} repository - Information about the repository object data.\r\n   * @param {string} repository.TenantGUID - GUID of the tenant.\r\n   * @param {string} repository.OwnerGUID - GUID of the owner.\r\n   * @param {string} repository.Name - Name of the repository.\r\n   * @param {string} repository.RepositoryType - Type of the repository.\r\n   * @param {string} repository.NfsHostname - Hostname or IP address of the NFS server.\r\n   * @param {number} repository.NfsUserId - User ID (UID) for authentication with the NFS server.\r\n   * @param {number} repository.NfsGroupId - Group ID (GID) for authentication with the NFS server.\r\n   * @param {string} repository.NfsShareName - Name of the NFS share.\r\n   * @param {boolean} repository.NfsIncludeSubdirectories - Whether to include subdirectories in the NFS share (true or false).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<DataRepository|null|ApiErrorResponse>} A promise that resolves to the written data repository object, or null if the write fails, or an error response.\r\n   * @throws {Error} If the repository is null or empty.\r\n   */",
      "meta": {
        "range": [
          11531,
          11865
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 193,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001269",
          "name": "writeNFSDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Write NFS Data Repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the repository object data.",
          "name": "repository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the tenant.",
          "name": "repository.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the owner.",
          "name": "repository.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository.",
          "name": "repository.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of the repository.",
          "name": "repository.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname or IP address of the NFS server.",
          "name": "repository.NfsHostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "User ID (UID) for authentication with the NFS server.",
          "name": "repository.NfsUserId"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Group ID (GID) for authentication with the NFS server.",
          "name": "repository.NfsGroupId"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the NFS share.",
          "name": "repository.NfsShareName"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether to include subdirectories in the NFS share (true or false).",
          "name": "repository.NfsIncludeSubdirectories"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(DataRepository|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the written data repository object, or null if the write fails, or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the repository is null or empty."
        }
      ],
      "name": "writeNFSDataRepository",
      "longname": "module:base/ViewCrawlerSdk#writeNFSDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update Data Repository.\r\n   * @param {Object} repository - Information about the repository object data.\r\n   * @param {string} repository.Name - Name of the repository.\r\n   * @param {string} repository.RepositoryType - Type of the repository.\r\n   * @param {boolean} repository.IncludeSubdirectories - Whether to include subdirectories in the repository (true or false).\r\n   * @param {string} repository.DiskDirectory - Path to the directory where the files are stored.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<DataRepository|null|ApiErrorResponse>} A promise that resolves to the written data repository object, or null if the write fails, or an error response.\r\n   * @throws {Error} If the repository is null or empty.\r\n   */",
      "meta": {
        "range": [
          12692,
          13024
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 211,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001307",
          "name": "updateDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Update Data Repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the repository object data.",
          "name": "repository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository.",
          "name": "repository.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of the repository.",
          "name": "repository.RepositoryType"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether to include subdirectories in the repository (true or false).",
          "name": "repository.IncludeSubdirectories"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Path to the directory where the files are stored.",
          "name": "repository.DiskDirectory"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(DataRepository|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the written data repository object, or null if the write fails, or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the repository is null or empty."
        }
      ],
      "name": "updateDataRepository",
      "longname": "module:base/ViewCrawlerSdk#updateDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete Repository.\r\n   *\r\n   * @param {string} guid - The GUID of the repository to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n    @returns {Promise<void|ApiErrorResponse>} A promise that resolves to true if the deletion was successful, or an error response if it failed.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          13438,
          13745
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 226,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001345",
          "name": "deleteDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Delete Repository.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the repository to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(void|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to true if the deletion was successful, or an error response if it failed."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteDataRepository",
      "longname": "module:base/ViewCrawlerSdk#deleteDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check Existence.\r\n   *\r\n   * @param {string} guid - GUID of data repository.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise that resolves to `true` if the data repository exists, otherwise `false` or an error response if the check fails.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          14156,
          14458
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 241,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001383",
          "name": "checkExistenceDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Check Existence.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of data repository.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise that resolves to `true` if the data repository exists, otherwise `false` or an error response if the check fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "checkExistenceDataRepository",
      "longname": "module:base/ViewCrawlerSdk#checkExistenceDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate Crawl Schedules.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult<CrawlSchedule>|null>} A promise resolving to the enumeration result or null.\r\n   */",
      "meta": {
        "range": [
          14759,
          14970
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 255,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001421",
          "name": "enumerateCrawlSchedules",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Crawl Schedules.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult.<CrawlSchedule>|null)>"
            ]
          },
          "description": "A promise resolving to the enumeration result or null."
        }
      ],
      "name": "enumerateCrawlSchedules",
      "longname": "module:base/ViewCrawlerSdk#enumerateCrawlSchedules",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve All Crawl Schedules.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   *  @returns {Promise<CrawlSchedule[]>} A promise that resolves to an array of crawl schedules.\r\n   */",
      "meta": {
        "range": [
          15223,
          15432
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 264,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001447",
          "name": "retrieveAllCrawlSchedules",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve All Crawl Schedules.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<CrawlSchedule>>"
            ]
          },
          "description": "A promise that resolves to an array of crawl schedules."
        }
      ],
      "name": "retrieveAllCrawlSchedules",
      "longname": "module:base/ViewCrawlerSdk#retrieveAllCrawlSchedules",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve By ID Crawl Schedules.\r\n   * @param {string} [guid] - GUID of crawl schedules\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<CrawlSchedule|null|ApiErrorResponse>} A promise that resolves to the crawl schedule object, or null if not found, or an error response.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          15855,
          16170
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 275,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001473",
          "name": "retrieveByIDCrawlSchedules",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve By ID Crawl Schedules.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID of crawl schedules",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(CrawlSchedule|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the crawl schedule object, or null if not found, or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveByIDCrawlSchedules",
      "longname": "module:base/ViewCrawlerSdk#retrieveByIDCrawlSchedules",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create Crawl Schedules.\r\n   * @param {Object} scheduleData - Information about the schedule.\r\n   * @param {string} scheduleData.Name - Name of the schedule.\r\n   * @param {string} scheduleData.Schedule - Type of schedule.\r\n   * @param {number} scheduleData.Interval - The interval value for the schedule.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<CrawlSchedule|null|ApiErrorResponse>} A promise that resolves to the created crawl schedule\r\n   * @throws {Error} If the scheduleData is null or empty.\r\n   */",
      "meta": {
        "range": [
          16774,
          17112
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 292,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001512",
          "name": "createCrawlSchedules",
          "type": "ClassProperty"
        }
      },
      "description": "Create Crawl Schedules.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the schedule.",
          "name": "scheduleData"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the schedule.",
          "name": "scheduleData.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of schedule.",
          "name": "scheduleData.Schedule"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The interval value for the schedule.",
          "name": "scheduleData.Interval"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(CrawlSchedule|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the created crawl schedule"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the scheduleData is null or empty."
        }
      ],
      "name": "createCrawlSchedules",
      "longname": "module:base/ViewCrawlerSdk#createCrawlSchedules",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update Crawl Schedules.\r\n   * @param {string} [guid] - GUID of Crawl Schedules\r\n   * @param {Object} scheduleData - Information about the schedule.\r\n   * @param {string} scheduleData.Name - Name of the schedule.\r\n   * @param {string} scheduleData.Schedule - Type of schedule.\r\n   * @param {number} scheduleData.Interval - The interval value for the schedule.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<CrawlSchedule|ApiErrorResponse>} A promise that resolves to the updated crawl schedule\r\n   * @throws {Error} If the guid is null or empty or If the scheduleData is null or empty .\r\n   */",
      "meta": {
        "range": [
          17799,
          18242
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 310,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001550",
          "name": "updateCrawlSchedules",
          "type": "ClassProperty"
        }
      },
      "description": "Update Crawl Schedules.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID of Crawl Schedules",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the schedule.",
          "name": "scheduleData"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the schedule.",
          "name": "scheduleData.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of schedule.",
          "name": "scheduleData.Schedule"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The interval value for the schedule.",
          "name": "scheduleData.Interval"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(CrawlSchedule|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the updated crawl schedule"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty or If the scheduleData is null or empty ."
        }
      ],
      "name": "updateCrawlSchedules",
      "longname": "module:base/ViewCrawlerSdk#updateCrawlSchedules",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete Crawl Schedule.\r\n   *\r\n   * @param {string} guid - The GUID of the crawl schedule to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise that resolves to true if the deletion was successful, or an error response if it failed.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          18668,
          18962
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 328,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001601",
          "name": "deleteCrawlSchedule",
          "type": "ClassProperty"
        }
      },
      "description": "Delete Crawl Schedule.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the crawl schedule to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to true if the deletion was successful, or an error response if it failed."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteCrawlSchedule",
      "longname": "module:base/ViewCrawlerSdk#deleteCrawlSchedule",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check Existence of Crawl Schedule.\r\n   *\r\n   * @param {string} guid - GUID of Crawl Schedule.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise that resolves to `true` if the Crawl Schedule exists, otherwise `false` or an error response if the check fails.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          19389,
          19688
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 343,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001639",
          "name": "checkExistenceCrawlSchedule",
          "type": "ClassProperty"
        }
      },
      "description": "Check Existence of Crawl Schedule.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of Crawl Schedule.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise that resolves to `true` if the Crawl Schedule exists, otherwise `false` or an error response if the check fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "checkExistenceCrawlSchedule",
      "longname": "module:base/ViewCrawlerSdk#checkExistenceCrawlSchedule",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate Crawl Filters.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult<CrawlFilter>|null>} A promise resolving to the enumeration result or null.\r\n   */",
      "meta": {
        "range": [
          19982,
          20188
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 357,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001677",
          "name": "enumerateCrawlFilter",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Crawl Filters.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult.<CrawlFilter>|null)>"
            ]
          },
          "description": "A promise resolving to the enumeration result or null."
        }
      ],
      "name": "enumerateCrawlFilter",
      "longname": "module:base/ViewCrawlerSdk#enumerateCrawlFilter",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve All Crawl Filters.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<CrawlFilter[]>} A promise resolving to the created Trigger object or null if creation fails.\r\n   */",
      "meta": {
        "range": [
          20457,
          20663
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 366,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001703",
          "name": "retrieveAllCrawlFilter",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve All Crawl Filters.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<CrawlFilter>>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "name": "retrieveAllCrawlFilter",
      "longname": "module:base/ViewCrawlerSdk#retrieveAllCrawlFilter",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve By Id Crawl Filters.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * * @param {string} [guid] - GUID of crawl Filters\r\n   * @returns {Promise<CrawlFilter|null|ApiErrorResponse>} A promise that resolves to the crawl filter object, or null if not found, or an error response.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          21080,
          21383
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 377,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001729",
          "name": "retrieveByIdFilter",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve By Id Crawl Filters.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.\r* @param {string} [guid] - GUID of crawl Filters",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(CrawlFilter|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the crawl filter object, or null if not found, or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveByIdFilter",
      "longname": "module:base/ViewCrawlerSdk#retrieveByIdFilter",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create Crawl Filters.\r\n   * @param {Object} crawlFiltersData - Information about the crawl filter.\r\n   * @param {string} crawlFiltersData.Name - Name of the crawl filter .\r\n   * @param {number} crawlFiltersData.MinimumSize - Minimum size of the files to include in the crawl filter.\r\n   * @param {number} crawlFiltersData.MaximumSize - Maximum size of the files to include in the crawl filter.\r\n   * @param {boolean} crawlFiltersData.IncludeSubdirectories - Whether to include subdirectories in the crawl filter (true or false).\r\n   * @param {string} crawlFiltersData.ContentType - The content type to filter.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<CrawlFilter|null|ApiErrorResponse>} A promise that resolves to the crawl filter object, or null if not found, or an error response.\r\n   * @throws {Error} If the crawlFiltersData is null or empty.\r\n   */",
      "meta": {
        "range": [
          22337,
          22684
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 396,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001768",
          "name": "createCrawlFilter",
          "type": "ClassProperty"
        }
      },
      "description": "Create Crawl Filters.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the crawl filter.",
          "name": "crawlFiltersData"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the crawl filter .",
          "name": "crawlFiltersData.Name"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Minimum size of the files to include in the crawl filter.",
          "name": "crawlFiltersData.MinimumSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum size of the files to include in the crawl filter.",
          "name": "crawlFiltersData.MaximumSize"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether to include subdirectories in the crawl filter (true or false).",
          "name": "crawlFiltersData.IncludeSubdirectories"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The content type to filter.",
          "name": "crawlFiltersData.ContentType"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(CrawlFilter|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the crawl filter object, or null if not found, or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the crawlFiltersData is null or empty."
        }
      ],
      "name": "createCrawlFilter",
      "longname": "module:base/ViewCrawlerSdk#createCrawlFilter",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update Crawl Filters.\r\n   * @param {string} [guid] - GUID of Crawl Filters\r\n   * @param {Object} scheduleData - Information about the schedule.\r\n   * @param {string} filterData.Name - Name of the filter (e.g., \"My updated filter\").\r\n   * @param {number} filterData.MinimumSize - Minimum file size to include in the filter (e.g., 1 byte).\r\n   * @param {number} filterData.MaximumSize - Maximum file size to include in the filter (e.g., 134217728 bytes, or 128 MB).\r\n   * @param {boolean} filterData.IncludeSubdirectories - Whether to include subdirectories in the filter (true or false).\r\n   * @param {string} filterData.ContentType - The content type to filter (e.g., \"*\").\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<CrawlFilter|null|ApiErrorResponse>} A promise that resolves to the crawl filter object, or null if not found, or an error response.\r\n   * @throws {Error} If the guid is null or empty or If crawlFiltersData is null or empty.\r\n   */",
      "meta": {
        "range": [
          23730,
          24184
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 416,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001806",
          "name": "updateCrawlFilter",
          "type": "ClassProperty"
        }
      },
      "description": "Update Crawl Filters.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID of Crawl Filters",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the schedule.",
          "name": "scheduleData"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the filter (e.g., \"My updated filter\").",
          "name": "filterData.Name"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Minimum file size to include in the filter (e.g., 1 byte).",
          "name": "filterData.MinimumSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum file size to include in the filter (e.g., 134217728 bytes, or 128 MB).",
          "name": "filterData.MaximumSize"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether to include subdirectories in the filter (true or false).",
          "name": "filterData.IncludeSubdirectories"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The content type to filter (e.g., \"*\").",
          "name": "filterData.ContentType"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(CrawlFilter|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the crawl filter object, or null if not found, or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty or If crawlFiltersData is null or empty."
        }
      ],
      "name": "updateCrawlFilter",
      "longname": "module:base/ViewCrawlerSdk#updateCrawlFilter",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete Crawl Filters.\r\n   *\r\n   * @param {string} [guid] - GUID of Crawl Filters\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   @returns {Promise<boolean|ApiErrorResponse>} A promise that resolves to true if the deletion was successful, or an error response if it failed.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          24589,
          24879
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 435,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001857",
          "name": "deleteCrawlFilter",
          "type": "ClassProperty"
        }
      },
      "description": "Delete Crawl Filters.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID of Crawl Filters",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to true if the deletion was successful, or an error response if it failed."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteCrawlFilter",
      "longname": "module:base/ViewCrawlerSdk#deleteCrawlFilter",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check Existence Crawl Filters.\r\n   *\r\n   * @param {string} [guid] - GUID of Crawl Filters\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to the crawl filter object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          25248,
          25543
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 450,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001895",
          "name": "checkExistenceCrawlFilter",
          "type": "ClassProperty"
        }
      },
      "description": "Check Existence Crawl Filters.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID of Crawl Filters",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to the crawl filter object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "checkExistenceCrawlFilter",
      "longname": "module:base/ViewCrawlerSdk#checkExistenceCrawlFilter",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate Crawl Plans.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult<CrawlPlan>|null>} A promise resolving to the enumeration result or null.\r\n   */",
      "meta": {
        "range": [
          25832,
          26035
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 464,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001933",
          "name": "enumerateCrawlPlans",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Crawl Plans.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult.<CrawlPlan>|null)>"
            ]
          },
          "description": "A promise resolving to the enumeration result or null."
        }
      ],
      "name": "enumerateCrawlPlans",
      "longname": "module:base/ViewCrawlerSdk#enumerateCrawlPlans",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve All Crawl Plans.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   *@returns {Promise<CrawlPlan[]>} A promise resolving to an array of CrawlPlan objects. If creation fails, the promise resolves to null.\r\n   */",
      "meta": {
        "range": [
          26325,
          26526
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 473,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001959",
          "name": "retrieveAllCrawlPlans",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve All Crawl Plans.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<CrawlPlan>>"
            ]
          },
          "description": "A promise resolving to an array of CrawlPlan objects. If creation fails, the promise resolves to null."
        }
      ],
      "name": "retrieveAllCrawlPlans",
      "longname": "module:base/ViewCrawlerSdk#retrieveAllCrawlPlans",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve By Id Crawl Plans.\r\n   * @param {string} [guid] - GUID of crawl Plans\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   *@returns {Promise<CrawlPlan[]>} A promise resolving CrawlPlan objects. If creation fails, the promise resolves to null.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          26906,
          27208
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 484,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100001985",
          "name": "retrieveByIdCrawlPlan",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve By Id Crawl Plans.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID of crawl Plans",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<CrawlPlan>>"
            ]
          },
          "description": "A promise resolving CrawlPlan objects. If creation fails, the promise resolves to null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveByIdCrawlPlan",
      "longname": "module:base/ViewCrawlerSdk#retrieveByIdCrawlPlan",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write Crawl Plans.\r\n   * @param {Object} crawlPlanData - An object containing information about the crawl plan.\r\n   * @param {string} crawlPlanData.DataRepositoryGUID - The GUID of the data repository associated with the crawl plan.\r\n   * @param {string} crawlPlanData.CrawlScheduleGUID - The GUID of the crawl schedule for the plan.\r\n   * @param {string} crawlPlanData.CrawlFilterGUID - The GUID of the crawl filter to be applied.\r\n   * @param {string} crawlPlanData.Name - The name of the crawl plan.\r\n   * @param {string} crawlPlanData.EnumerationDirectory - The directory path where enumerations will be stored.\r\n   * @param {number} crawlPlanData.EnumerationsToRetain - The number of enumerations to retain in the system.\r\n   * @param {string} crawlPlanData.MetadataRuleGUID - The GUID of the metadata rule to be applied.\r\n   * @param {string} crawlPlanData.ProcessingEndpoint - The URL endpoint for processing data.\r\n   * @param {string} crawlPlanData.ProcessingAccessKey - The access key used for authenticating to the processing endpoint.\r\n   * @param {string} crawlPlanData.CleanupEndpoint - The URL endpoint for performing cleanup operations.\r\n   * @param {string} crawlPlanData.CleanupAccessKey - The access key used for authenticating to the cleanup endpoint.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   *@returns {Promise<CrawlPlan[]>} A promise resolving CrawlPlan objects. If creation fails, the promise resolves to null.\r\n   * @throws {Error} If the crawlPlansData is null or empty.\r\n   */",
      "meta": {
        "range": [
          28791,
          29123
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 509,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100002024",
          "name": "writeCrawlPlans",
          "type": "ClassProperty"
        }
      },
      "description": "Write Crawl Plans.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "An object containing information about the crawl plan.",
          "name": "crawlPlanData"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data repository associated with the crawl plan.",
          "name": "crawlPlanData.DataRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the crawl schedule for the plan.",
          "name": "crawlPlanData.CrawlScheduleGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the crawl filter to be applied.",
          "name": "crawlPlanData.CrawlFilterGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The name of the crawl plan.",
          "name": "crawlPlanData.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The directory path where enumerations will be stored.",
          "name": "crawlPlanData.EnumerationDirectory"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The number of enumerations to retain in the system.",
          "name": "crawlPlanData.EnumerationsToRetain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the metadata rule to be applied.",
          "name": "crawlPlanData.MetadataRuleGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL endpoint for processing data.",
          "name": "crawlPlanData.ProcessingEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The access key used for authenticating to the processing endpoint.",
          "name": "crawlPlanData.ProcessingAccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL endpoint for performing cleanup operations.",
          "name": "crawlPlanData.CleanupEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The access key used for authenticating to the cleanup endpoint.",
          "name": "crawlPlanData.CleanupAccessKey"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<CrawlPlan>>"
            ]
          },
          "description": "A promise resolving CrawlPlan objects. If creation fails, the promise resolves to null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the crawlPlansData is null or empty."
        }
      ],
      "name": "writeCrawlPlans",
      "longname": "module:base/ViewCrawlerSdk#writeCrawlPlans",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update Crawl Plans.\r\n   * @param {string} [guid] - GUID of Crawl Plans\r\n   * @param {Object} crawlPlanData - Information about the crawl plan to update.\r\n   * @param {string} crawlPlanData.DataRepositoryGUID - GUID of the data repository associated with the crawl plan.\r\n   * @param {string} crawlPlanData.CrawlScheduleGUID - GUID of the crawl schedule for the crawl plan.\r\n   * @param {string} crawlPlanData.CrawlFilterGUID - GUID of the crawl filter applied to the crawl plan.\r\n   * @param {string} crawlPlanData.MetadataRuleGUID - GUID of the metadata rule to be applied in the crawl plan.\r\n   * @param {string} crawlPlanData.Name - The updated name of the crawl plan.\r\n   * @param {string} crawlPlanData.EnumerationDirectory - Directory for storing enumerations in the updated crawl plan.\r\n   * @param {number} crawlPlanData.EnumerationsToRetain - Number of enumerations to retain after updating the crawl plan.\r\n   * @param {number} crawlPlanData.MaxDrainTasks - Maximum number of drain tasks to run concurrently for the updated crawl plan.\r\n   * @param {boolean} crawlPlanData.ProcessAdditions - Whether to process new additions in the updated crawl plan (true or false).\r\n   * @param {boolean} crawlPlanData.ProcessDeletions - Whether to process deletions in the updated crawl plan (true or false).\r\n   * @param {boolean} crawlPlanData.ProcessUpdates - Whether to process updates in the updated crawl plan (true or false).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<CrawlPlan | null>} A promise resolving of CrawlPlan objects if the update is successful, or null if the update fails.\r\n   * @throws {Error} If the guid is null or empty or If the crawlPlanData is null or empty.\r\n   */",
      "meta": {
        "range": [
          30912,
          31349
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 535,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100002062",
          "name": "updateCrawlPlans",
          "type": "ClassProperty"
        }
      },
      "description": "Update Crawl Plans.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID of Crawl Plans",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the crawl plan to update.",
          "name": "crawlPlanData"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the data repository associated with the crawl plan.",
          "name": "crawlPlanData.DataRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the crawl schedule for the crawl plan.",
          "name": "crawlPlanData.CrawlScheduleGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the crawl filter applied to the crawl plan.",
          "name": "crawlPlanData.CrawlFilterGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the metadata rule to be applied in the crawl plan.",
          "name": "crawlPlanData.MetadataRuleGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The updated name of the crawl plan.",
          "name": "crawlPlanData.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Directory for storing enumerations in the updated crawl plan.",
          "name": "crawlPlanData.EnumerationDirectory"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Number of enumerations to retain after updating the crawl plan.",
          "name": "crawlPlanData.EnumerationsToRetain"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of drain tasks to run concurrently for the updated crawl plan.",
          "name": "crawlPlanData.MaxDrainTasks"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether to process new additions in the updated crawl plan (true or false).",
          "name": "crawlPlanData.ProcessAdditions"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether to process deletions in the updated crawl plan (true or false).",
          "name": "crawlPlanData.ProcessDeletions"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether to process updates in the updated crawl plan (true or false).",
          "name": "crawlPlanData.ProcessUpdates"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(CrawlPlan|null)>"
            ]
          },
          "description": "A promise resolving of CrawlPlan objects if the update is successful, or null if the update fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty or If the crawlPlanData is null or empty."
        }
      ],
      "name": "updateCrawlPlans",
      "longname": "module:base/ViewCrawlerSdk#updateCrawlPlans",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete Crawl Plans.\r\n   *\r\n   * @param {string} [guid] - GUID of Crawl Plans\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   @returns {Promise<boolean|ApiErrorResponse>} A promise that resolves to true if the deletion was successful, or an error response if it failed.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          31750,
          32037
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 554,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100002113",
          "name": "deleteCrawlPlans",
          "type": "ClassProperty"
        }
      },
      "description": "Delete Crawl Plans.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID of Crawl Plans",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to true if the deletion was successful, or an error response if it failed."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteCrawlPlans",
      "longname": "module:base/ViewCrawlerSdk#deleteCrawlPlans",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check Existence Crawl Plans.\r\n   *\r\n   * @param {string} [guid] - GUID of Crawl Plans\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to the Node object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          32394,
          32686
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 569,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100002151",
          "name": "checkExistenceCrawlPlans",
          "type": "ClassProperty"
        }
      },
      "description": "Check Existence Crawl Plans.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID of Crawl Plans",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to the Node object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "checkExistenceCrawlPlans",
      "longname": "module:base/ViewCrawlerSdk#checkExistenceCrawlPlans",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate Crawl Operations.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult<CrawlOperation>|null>} A promise resolving to the enumeration result or null.\r\n   */",
      "meta": {
        "range": [
          32990,
          33203
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 583,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100002189",
          "name": "enumerateCrawlOperations",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Crawl Operations.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult.<CrawlOperation>|null)>"
            ]
          },
          "description": "A promise resolving to the enumeration result or null."
        }
      ],
      "name": "enumerateCrawlOperations",
      "longname": "module:base/ViewCrawlerSdk#enumerateCrawlOperations",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve All Crawl Operations.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<CrawlOperation[] | null>} A promise resolving to an array of CrawlOperation objects if the operation is successful,\r\n   */",
      "meta": {
        "range": [
          33498,
          33714
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 592,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100002215",
          "name": "retrieveAllCrawlOperations",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve All Crawl Operations.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<CrawlOperation>|null)>"
            ]
          },
          "description": "A promise resolving to an array of CrawlOperation objects if the operation is successful,"
        }
      ],
      "name": "retrieveAllCrawlOperations",
      "longname": "module:base/ViewCrawlerSdk#retrieveAllCrawlOperations",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve By Id Crawl Operations.\r\n   * @param {string} [guid] - GUID of crawl operations\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<CrawlOperation|ApiErrorResponse>}  A promise resolving to a CrawlOperation object if the operation is successful,  or an ApiErrorResponse if an error occurs.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          34161,
          34479
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 603,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100002241",
          "name": "retrieveByIdCrawlOperations",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve By Id Crawl Operations.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID of crawl operations",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(CrawlOperation|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to a CrawlOperation object if the operation is successful,  or an ApiErrorResponse if an error occurs."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveByIdCrawlOperations",
      "longname": "module:base/ViewCrawlerSdk#retrieveByIdCrawlOperations",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve enumeration Crawl Operations.\r\n   * @param {string} [guid] - GUID of crawl operations\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<CrawlOperation|ApiErrorResponse>}  A promise resolving to a CrawlOperation object if the operation is successful,  or an ApiErrorResponse if an error occurs.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          34932,
          35269
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 617,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100002280",
          "name": "retrieveEnumerationCrawlOperations",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve enumeration Crawl Operations.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID of crawl operations",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(CrawlOperation|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to a CrawlOperation object if the operation is successful,  or an ApiErrorResponse if an error occurs."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveEnumerationCrawlOperations",
      "longname": "module:base/ViewCrawlerSdk#retrieveEnumerationCrawlOperations",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Start Crawl Operations.\r\n   * @param {string} [guid] - The GUID of the crawl plan.\r\n   * @param {Object} crawlOperationData - Information about the crawl operation to start.\r\n   * @param {string} crawlOperationData.Name - The name of the tenant for which the crawl operation is being started.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<CrawlOperation|ApiErrorResponse>}  A promise resolving to a CrawlOperation object if the operation is start,  or an ApiErrorResponse if an error occurs.\r\n   * @throws {Error} If the guid is null or empty or crawlOperationsData null or empty.\r\n   */",
      "meta": {
        "range": [
          35952,
          36428
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 633,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100002319",
          "name": "startCrawlOperations",
          "type": "ClassProperty"
        }
      },
      "description": "Start Crawl Operations.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "The GUID of the crawl plan.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the crawl operation to start.",
          "name": "crawlOperationData"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The name of the tenant for which the crawl operation is being started.",
          "name": "crawlOperationData.Name"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(CrawlOperation|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to a CrawlOperation object if the operation is start,  or an ApiErrorResponse if an error occurs."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty or crawlOperationsData null or empty."
        }
      ],
      "name": "startCrawlOperations",
      "longname": "module:base/ViewCrawlerSdk#startCrawlOperations",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Stop Crawl Operations.\r\n   * @param {string} [guid] - The GUID of the crawl plan.\r\n   * @param {Object} crawlOperationData - Information about the crawl operation to start.\r\n   * @param {string} crawlOperationData.Name - The name of the tenant for which the crawl operation is being started.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<CrawlOperation|ApiErrorResponse>}  A promise resolving to a CrawlOperation object if the operation is stop,  or an ApiErrorResponse if an error occurs.\r\n   * @throws {Error} If the guid is null or empty or crawlOperationsData null or empty.\r\n   */",
      "meta": {
        "range": [
          37109,
          37583
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 652,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100002370",
          "name": "stopCrawlOperations",
          "type": "ClassProperty"
        }
      },
      "description": "Stop Crawl Operations.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "The GUID of the crawl plan.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the crawl operation to start.",
          "name": "crawlOperationData"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The name of the tenant for which the crawl operation is being started.",
          "name": "crawlOperationData.Name"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(CrawlOperation|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to a CrawlOperation object if the operation is stop,  or an ApiErrorResponse if an error occurs."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty or crawlOperationsData null or empty."
        }
      ],
      "name": "stopCrawlOperations",
      "longname": "module:base/ViewCrawlerSdk#stopCrawlOperations",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete Crawl Operations.\r\n   *\r\n   * @param {string} [guid] - GUID of Crawl Operations\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   @returns {Promise<boolean|ApiErrorResponse>} A promise that resolves to true if the deletion was successful, or an error response if it failed.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          37994,
          38291
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 670,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100002421",
          "name": "deleteCrawlOperations",
          "type": "ClassProperty"
        }
      },
      "description": "Delete Crawl Operations.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID of Crawl Operations",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to true if the deletion was successful, or an error response if it failed."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteCrawlOperations",
      "longname": "module:base/ViewCrawlerSdk#deleteCrawlOperations",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check Existence Crawl Operations.\r\n   *\r\n   * @param {string} [guid] - GUID of Crawl Operations\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to the Crawl Operations object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          38670,
          38972
        ],
        "filename": "ViewCrawlerSdk.js",
        "lineno": 685,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler",
        "code": {
          "id": "astnode100002459",
          "name": "checkExistenceCrawlOperations",
          "type": "ClassProperty"
        }
      },
      "description": "Check Existence Crawl Operations.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID of Crawl Operations",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to the Crawl Operations object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "checkExistenceCrawlOperations",
      "longname": "module:base/ViewCrawlerSdk#checkExistenceCrawlOperations",
      "kind": "member",
      "memberof": "module:base/ViewCrawlerSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n * Director service.\r\n * @module base/ViewDirectorSdk\r\n * @version 0.1.0\r\n */",
      "meta": {
        "filename": "ViewDirectorSdk.js",
        "lineno": 5,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Director",
        "code": {}
      },
      "description": "Director service.",
      "kind": "module",
      "name": "base/ViewDirectorSdk",
      "version": "0.1.0",
      "longname": "module:base/ViewDirectorSdk"
    },
    {
      "comment": "/**\r\n   * Constructs a new DirectorApi.\r\n   * @alias module:base/ViewDirectorSdk\r\n   * @class\r\n   * @param {string} tenantGuid - Tenant GUID.\r\n   * @param {string} accessKey - Access key.\r\n   * @param {string} endpoint - Endpoint URL .\r\n   */",
      "meta": {
        "range": [
          577,
          714
        ],
        "filename": "ViewDirectorSdk.js",
        "lineno": 19,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Director",
        "code": {
          "id": "astnode100002516",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new DirectorApi.",
      "alias": "module:base/ViewDirectorSdk",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID.",
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key.",
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL .",
          "name": "endpoint"
        }
      ],
      "name": "module:base/ViewDirectorSdk",
      "longname": "module:base/ViewDirectorSdk"
    },
    {
      "comment": "/**\r\n   * Generate Embedding Director.\r\n   * @param {object} [params] - parameters.\r\n   * @param {string} [params.Model] - Embedding model.\r\n   * @param {string} [params.ApiKey] - API key.\r\n   * @param {string[]} [params.Contents] - List of text Contents.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<DirectorEmbeddingResponse|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          1294,
          1515
        ],
        "filename": "ViewDirectorSdk.js",
        "lineno": 34,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Director",
        "code": {
          "id": "astnode100002535",
          "name": "generateEmbedding",
          "type": "ClassProperty"
        }
      },
      "description": "Generate Embedding Director.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "parameters.",
          "name": "params"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Embedding model.",
          "name": "params.Model"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "API key.",
          "name": "params.ApiKey"
        },
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "optional": true,
          "description": "List of text Contents.",
          "name": "params.Contents"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(DirectorEmbeddingResponse|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "generateEmbedding",
      "longname": "module:base/ViewDirectorSdk#generateEmbedding",
      "kind": "member",
      "memberof": "module:base/ViewDirectorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve Connections.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<Connection>|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          1863,
          2066
        ],
        "filename": "ViewDirectorSdk.js",
        "lineno": 45,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Director",
        "code": {
          "id": "astnode100002563",
          "name": "retrieveConnections",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve Connections.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<Connection>|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "retrieveConnections",
      "longname": "module:base/ViewDirectorSdk#retrieveConnections",
      "kind": "member",
      "memberof": "module:base/ViewDirectorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n * Embeddings service.\r\n * @module base/EmbeddingsSdk\r\n * @version 0.1.0\r\n */",
      "meta": {
        "filename": "EmbeddingsSdk.js",
        "lineno": 5,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Embeddings",
        "code": {}
      },
      "description": "Embeddings service.",
      "kind": "module",
      "name": "base/EmbeddingsSdk",
      "version": "0.1.0",
      "longname": "module:base/EmbeddingsSdk"
    },
    {
      "comment": "/**\r\n   * Constructs a new EmbeddingsApi.\r\n   * @alias module:base/EmbeddingsSdk\r\n   * @class\r\n   * @param {string} tenantGuid - Tenant GUID.\r\n   * @param {string} accessKey - Access key.\r\n   * @param {string} endpoint - Endpoint URL .\r\n   */",
      "meta": {
        "range": [
          552,
          687
        ],
        "filename": "EmbeddingsSdk.js",
        "lineno": 19,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Embeddings",
        "code": {
          "id": "astnode100002608",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new EmbeddingsApi.",
      "alias": "module:base/EmbeddingsSdk",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID.",
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key.",
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL .",
          "name": "endpoint"
        }
      ],
      "name": "module:base/EmbeddingsSdk",
      "longname": "module:base/EmbeddingsSdk"
    },
    {
      "comment": "/**\r\n   * Checks the existence of embeddings.\r\n   *@param {Object} data - The data object containing models and API key.\r\n   * @param {Array<string>} data.Models - An array of model names to check for existence.\r\n   * @param {string} data.ApiKey - The API key for accessing the embeddings.\r\n   * @param {Object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise that resolves to `true` if embeddings exist, or an error response if the check fails.\r\n   */",
      "meta": {
        "range": [
          1240,
          1406
        ],
        "filename": "EmbeddingsSdk.js",
        "lineno": 32,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Embeddings",
        "code": {
          "id": "astnode100002627",
          "name": "checkEmbeddingsExistence",
          "type": "ClassProperty"
        }
      },
      "description": "Checks the existence of embeddings.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The data object containing models and API key.",
          "name": "data"
        },
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "description": "An array of model names to check for existence.",
          "name": "data.Models"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The API key for accessing the embeddings.",
          "name": "data.ApiKey"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to `true` if embeddings exist, or an error response if the check fails."
        }
      ],
      "name": "checkEmbeddingsExistence",
      "longname": "module:base/EmbeddingsSdk#checkEmbeddingsExistence",
      "kind": "member",
      "memberof": "module:base/EmbeddingsSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Preloads embedding models.\r\n   * @param {Object} payload - The payload containing models and API key.\r\n   * @param {Array<string>} payload.Models - An array of model names to preload.\r\n   * @param {string} payload.ApiKey - The API key for accessing the embeddings.\r\n   * @param {Array<string>} payload.Contents - An array of text chunks for which to generate embeddings.\r\n   * @param {Object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EmbeddingModel|ApiErrorResponse>} A promise that resolves to the response of the preload operation or an error response if the preload fails.\r\n   */",
      "meta": {
        "range": [
          2069,
          2285
        ],
        "filename": "EmbeddingsSdk.js",
        "lineno": 46,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Embeddings",
        "code": {
          "id": "astnode100002648",
          "name": "preloadModels",
          "type": "ClassProperty"
        }
      },
      "description": "Preloads embedding models.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The payload containing models and API key.",
          "name": "payload"
        },
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "description": "An array of model names to preload.",
          "name": "payload.Models"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The API key for accessing the embeddings.",
          "name": "payload.ApiKey"
        },
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "description": "An array of text chunks for which to generate embeddings.",
          "name": "payload.Contents"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EmbeddingModel|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the response of the preload operation or an error response if the preload fails."
        }
      ],
      "name": "preloadModels",
      "longname": "module:base/EmbeddingsSdk#preloadModels",
      "kind": "member",
      "memberof": "module:base/EmbeddingsSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Generates embeddings for the provided contents.\r\n   * @param {Object} payload - The payload containing models and API key.\r\n   * @param {Array<string>} payload.Models - An array of model names to preload.\r\n   * @param {string} payload.ApiKey - The API key for accessing the embeddings.\r\n   * @param {Array<string>} payload.Contents - An array of text chunks for which to generate embeddings.\r\n   * @param {Object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EmbeddingModel|ApiErrorResponse>} A promise that resolves to the generated embeddings or an error response if the generation fails.\r\n   */",
      "meta": {
        "range": [
          2959,
          3172
        ],
        "filename": "EmbeddingsSdk.js",
        "lineno": 60,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Embeddings",
        "code": {
          "id": "astnode100002676",
          "name": "generateEmbeddings",
          "type": "ClassProperty"
        }
      },
      "description": "Generates embeddings for the provided contents.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The payload containing models and API key.",
          "name": "payload"
        },
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "description": "An array of model names to preload.",
          "name": "payload.Models"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The API key for accessing the embeddings.",
          "name": "payload.ApiKey"
        },
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "description": "An array of text chunks for which to generate embeddings.",
          "name": "payload.Contents"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EmbeddingModel|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the generated embeddings or an error response if the generation fails."
        }
      ],
      "name": "generateEmbeddings",
      "longname": "module:base/EmbeddingsSdk#generateEmbeddings",
      "kind": "member",
      "memberof": "module:base/EmbeddingsSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n * Graph SDK service.\r\n * @module base/GraphSdk\r\n * @version 0.1.0\r\n */",
      "meta": {
        "filename": "GraphSdk.js",
        "lineno": 21,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {}
      },
      "description": "Graph SDK service.",
      "kind": "module",
      "name": "base/GraphSdk",
      "version": "0.1.0",
      "longname": "module:base/GraphSdk"
    },
    {
      "comment": "/**\r\n   * Constructs a new GraphSdk instance.\r\n   * @alias module:base/GraphSdk\r\n   * @class\r\n   * @param {GraphRepository} repo - The Graph repository object.\r\n   */",
      "meta": {
        "range": [
          1369,
          2555
        ],
        "filename": "GraphSdk.js",
        "lineno": 33,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100002784",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "repo"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new GraphSdk instance.",
      "alias": "module:base/GraphSdk",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "GraphRepository"
            ]
          },
          "description": "The Graph repository object.",
          "name": "repo"
        }
      ],
      "name": "module:base/GraphSdk",
      "longname": "module:base/GraphSdk"
    },
    {
      "comment": "/**\r\n   * Graph repository.\r\n   * @returns {GraphRepository} The GraphRepository instance.\r\n   */",
      "meta": {
        "range": [
          2692,
          2755
        ],
        "filename": "GraphSdk.js",
        "lineno": 79,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100002944",
          "name": "GraphRepository",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Graph repository.",
      "returns": [
        {
          "type": {
            "names": [
              "GraphRepository"
            ]
          },
          "description": "The GraphRepository instance."
        }
      ],
      "name": "GraphRepository",
      "longname": "module:base/GraphSdk#GraphRepository",
      "kind": "member",
      "scope": "instance",
      "memberof": "module:base/GraphSdk",
      "params": []
    },
    {
      "comment": "/**\r\n   * Timestamp format.\r\n   * @returns {string} The timestamp format.\r\n   */",
      "meta": {
        "range": [
          2845,
          2908
        ],
        "filename": "GraphSdk.js",
        "lineno": 87,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100002952",
          "name": "TimestampFormat",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Timestamp format.",
      "returns": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The timestamp format."
        }
      ],
      "name": "TimestampFormat",
      "longname": "module:base/GraphSdk#TimestampFormat",
      "kind": "member",
      "scope": "instance",
      "memberof": "module:base/GraphSdk",
      "params": []
    },
    {
      "comment": "/**\r\n   * Set the timestamp format.\r\n   * @param {string} value - The new timestamp format.\r\n   * @throws {Error} Throws an error if the timestamp format is invalid or null.\r\n   */",
      "meta": {
        "range": [
          3098,
          3451
        ],
        "filename": "GraphSdk.js",
        "lineno": 96,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100002960",
          "name": "TimestampFormat",
          "type": "MethodDefinition",
          "paramnames": [
            "value"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Set the timestamp format.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The new timestamp format.",
          "name": "value"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Throws an error if the timestamp format is invalid or null."
        }
      ],
      "name": "TimestampFormat",
      "longname": "module:base/GraphSdk#TimestampFormat",
      "kind": "member",
      "scope": "instance",
      "memberof": "module:base/GraphSdk"
    },
    {
      "comment": "/**\r\n   * Dispose of the Graph SDK.\r\n   * @method\r\n   */",
      "meta": {
        "range": [
          3605,
          3694
        ],
        "filename": "GraphSdk.js",
        "lineno": 121,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100003014",
          "name": "dispose",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Dispose of the Graph SDK.",
      "kind": "function",
      "name": "dispose",
      "longname": "module:base/GraphSdk#dispose",
      "scope": "instance",
      "memberof": "module:base/GraphSdk",
      "params": []
    },
    {
      "comment": "/**\r\n   * Validate connectivity to the graph repository.\r\n   * @method\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if connected, otherwise `false`.\r\n   */",
      "meta": {
        "range": [
          3978,
          4160
        ],
        "filename": "GraphSdk.js",
        "lineno": 133,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100003030",
          "name": "validateConnectivity",
          "type": "MethodDefinition",
          "paramnames": [
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Validate connectivity to the graph repository.",
      "kind": "function",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken",
          "defaultvalue": null
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if connected, otherwise `false`."
        }
      ],
      "name": "validateConnectivity",
      "longname": "module:base/GraphSdk#validateConnectivity",
      "scope": "instance",
      "memberof": "module:base/GraphSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Insert object metadata into the graph.\r\n   * @param {Object} tenant - The tenant metadata.\r\n   * @param {Object} pool - The storage pool metadata.\r\n   * @param {Object} bucket - The bucket metadata.\r\n   * @param {Object} obj - The object metadata.\r\n   * @param {Object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphResult>} A promise resolving to a GraphResult object.\r\n   * @throws {Error} If any of the parameters are null.\r\n   */",
      "meta": {
        "range": [
          4713,
          12665
        ],
        "filename": "GraphSdk.js",
        "lineno": 152,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100003053",
          "name": "insertObjectMetadata",
          "type": "ClassProperty"
        }
      },
      "description": "Insert object metadata into the graph.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The tenant metadata.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The storage pool metadata.",
          "name": "pool"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The bucket metadata.",
          "name": "bucket"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The object metadata.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphResult>"
            ]
          },
          "description": "A promise resolving to a GraphResult object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If any of the parameters are null."
        }
      ],
      "name": "insertObjectMetadata",
      "longname": "module:base/GraphSdk#insertObjectMetadata",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Insert object metadata and its associated objects from crawler.\r\n   * @param {Object} tenant - The tenant metadata.\r\n   * @param {Object} repo - The data repository metadata.\r\n   * @param {Object} obj - The object metadata.\r\n   * @param {Object} [cancelToken] - Optional cancellation token to abort the operation.\r\n   * @returns {Promise<GraphResult>} A promise resolving to a GraphResult object.\r\n   * @throws {Error} If any of the parameters are null.\r\n   */",
      "meta": {
        "range": [
          13143,
          19297
        ],
        "filename": "GraphSdk.js",
        "lineno": 376,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100004129",
          "name": "insertObjectMetadataForCrawler",
          "type": "ClassProperty"
        }
      },
      "description": "Insert object metadata and its associated objects from crawler.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The tenant metadata.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The data repository metadata.",
          "name": "repo"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The object metadata.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the operation.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphResult>"
            ]
          },
          "description": "A promise resolving to a GraphResult object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If any of the parameters are null."
        }
      ],
      "name": "insertObjectMetadataForCrawler",
      "longname": "module:base/GraphSdk#insertObjectMetadataForCrawler",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Insert source document and its associated objects.\r\n   * @param {Object} tenant - The tenant metadata.\r\n   * @param {Object} collection - The collection metadata.\r\n   * @param {Object} sourceDoc - The source document metadata.\r\n   * @param {Object} [cancelToken] - Optional cancellation token to abort the operation.\r\n   * @returns {Promise<GraphResult>} A promise resolving to a GraphResult object.\r\n   * @throws {Error} If any of the parameters are null.\r\n   */",
      "meta": {
        "range": [
          19778,
          28941
        ],
        "filename": "GraphSdk.js",
        "lineno": 552,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100004938",
          "name": "insertSourceDocument",
          "type": "ClassProperty"
        }
      },
      "description": "Insert source document and its associated objects.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The tenant metadata.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The collection metadata.",
          "name": "collection"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The source document metadata.",
          "name": "sourceDoc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the operation.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphResult>"
            ]
          },
          "description": "A promise resolving to a GraphResult object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If any of the parameters are null."
        }
      ],
      "name": "insertSourceDocument",
      "longname": "module:base/GraphSdk#insertSourceDocument",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Remove object metadata and its associated objects.\r\n   * @param {Object} obj - The object metadata.\r\n   * @param {Object} [cancelToken] - Optional cancellation token to abort the operation.\r\n   * @returns {Promise<GraphResult>} A promise resolving to a GraphResult object.\r\n   * @throws {Error} If the object is null.\r\n   */",
      "meta": {
        "range": [
          29283,
          31026
        ],
        "filename": "GraphSdk.js",
        "lineno": 803,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100005968",
          "name": "removeObjectMetadata",
          "type": "ClassProperty"
        }
      },
      "description": "Remove object metadata and its associated objects.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The object metadata.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the operation.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphResult>"
            ]
          },
          "description": "A promise resolving to a GraphResult object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the object is null."
        }
      ],
      "name": "removeObjectMetadata",
      "longname": "module:base/GraphSdk#removeObjectMetadata",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Remove source document and its associated objects.\r\n   * @param {Object} doc - The source document metadata.\r\n   * @param {Object} [cancelToken] - Optional cancellation token to abort the operation.\r\n   * @returns {Promise<GraphResult>} A promise resolving to a GraphResult object.\r\n   * @throws {Error} If the source document is null.\r\n   */",
      "meta": {
        "range": [
          31386,
          32809
        ],
        "filename": "GraphSdk.js",
        "lineno": 861,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006200",
          "name": "removeSourceDocument",
          "type": "ClassProperty"
        }
      },
      "description": "Remove source document and its associated objects.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The source document metadata.",
          "name": "doc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the operation.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphResult>"
            ]
          },
          "description": "A promise resolving to a GraphResult object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the source document is null."
        }
      ],
      "name": "removeSourceDocument",
      "longname": "module:base/GraphSdk#removeSourceDocument",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a tenant exists.\r\n   * @param {Object} tenant - The tenant metadata object.\r\n   * @param {Object} [cancelToken] - Optional cancellation token to abort the operation.\r\n   * @returns {Promise<boolean>} A promise that resolves to `true` if the tenant exists, otherwise `false`.\r\n   * @throws {Error} If the tenant argument is null.\r\n   */",
      "meta": {
        "range": [
          33211,
          33633
        ],
        "filename": "GraphSdk.js",
        "lineno": 911,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006379",
          "name": "tenantExists",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a tenant exists.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The tenant metadata object.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the operation.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise that resolves to `true` if the tenant exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the tenant argument is null."
        }
      ],
      "name": "tenantExists",
      "longname": "module:base/GraphSdk#tenantExists",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a storage pool exists.\r\n   *\r\n   * @param {Object} pool - The storage pool metadata object.\r\n   * @param {string} pool.GUID - The GUID of the storage pool.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the pool exists, otherwise `false`.\r\n   * @throws {Error} If the pool is null or undefined.\r\n   */",
      "meta": {
        "range": [
          34081,
          34549
        ],
        "filename": "GraphSdk.js",
        "lineno": 930,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006412",
          "name": "storagePoolExists",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a storage pool exists.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The storage pool metadata object.",
          "name": "pool"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the storage pool.",
          "name": "pool.GUID"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the pool exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the pool is null or undefined."
        }
      ],
      "name": "storagePoolExists",
      "longname": "module:base/GraphSdk#storagePoolExists",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a bucket exists.\r\n   *\r\n   * @param {Object} bucket - The bucket metadata object.\r\n   * @param {string} bucket.GUID - The GUID of the bucket.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the bucket exists, otherwise `false`.\r\n   * @throws {Error} If the bucket is null or undefined.\r\n   */",
      "meta": {
        "range": [
          34987,
          35466
        ],
        "filename": "GraphSdk.js",
        "lineno": 950,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006445",
          "name": "bucketExists",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a bucket exists.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The bucket metadata object.",
          "name": "bucket"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "bucket.GUID"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the bucket exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the bucket is null or undefined."
        }
      ],
      "name": "bucketExists",
      "longname": "module:base/GraphSdk#bucketExists",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if an object exists.\r\n   *\r\n   * @param {Object} obj - The object metadata.\r\n   * @param {string} obj.GUID - The GUID of the object.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the object exists, otherwise `false`.\r\n   * @throws {Error} If the object is null or undefined.\r\n   */",
      "meta": {
        "range": [
          35892,
          36370
        ],
        "filename": "GraphSdk.js",
        "lineno": 970,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006478",
          "name": "objectMetadataExists",
          "type": "ClassProperty"
        }
      },
      "description": "Check if an object exists.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The object metadata.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the object.",
          "name": "obj.GUID"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the object exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the object is null or undefined."
        }
      ],
      "name": "objectMetadataExists",
      "longname": "module:base/GraphSdk#objectMetadataExists",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a collection exists.\r\n   *\r\n   * @param {Object} coll - The collection metadata.\r\n   * @param {string} coll.GUID - The GUID of the collection.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the collection exists, otherwise `false`.\r\n   * @throws {Error} If the collection is null or undefined.\r\n   */",
      "meta": {
        "range": [
          36817,
          37330
        ],
        "filename": "GraphSdk.js",
        "lineno": 990,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006511",
          "name": "collectionExists",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a collection exists.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The collection metadata.",
          "name": "coll"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection.",
          "name": "coll.GUID"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the collection exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collection is null or undefined."
        }
      ],
      "name": "collectionExists",
      "longname": "module:base/GraphSdk#collectionExists",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a source document exists.\r\n   *\r\n   * @param {Object} doc - The source document metadata.\r\n   * @param {string} doc.GUID - The GUID of the source document.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the source document exists, otherwise `false`.\r\n   * @throws {Error} If the source document is null or undefined.\r\n   */",
      "meta": {
        "range": [
          37800,
          38335
        ],
        "filename": "GraphSdk.js",
        "lineno": 1010,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006544",
          "name": "sourceDocumentExists",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a source document exists.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The source document metadata.",
          "name": "doc"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the source document.",
          "name": "doc.GUID"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the source document exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the source document is null or undefined."
        }
      ],
      "name": "sourceDocumentExists",
      "longname": "module:base/GraphSdk#sourceDocumentExists",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a semantic cell exists.\r\n   *\r\n   * @param {Object} cell - The semantic cell metadata.\r\n   * @param {string} cell.GUID - The GUID of the semantic cell.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the semantic cell exists, otherwise `false`.\r\n   * @throws {Error} If the semantic cell is null or undefined.\r\n   */",
      "meta": {
        "range": [
          38797,
          39315
        ],
        "filename": "GraphSdk.js",
        "lineno": 1030,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006577",
          "name": "semanticCellExists",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a semantic cell exists.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The semantic cell metadata.",
          "name": "cell"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the semantic cell.",
          "name": "cell.GUID"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the semantic cell exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the semantic cell is null or undefined."
        }
      ],
      "name": "semanticCellExists",
      "longname": "module:base/GraphSdk#semanticCellExists",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a semantic chunk exists.\r\n   *\r\n   * @param {Object} chunk - The semantic chunk metadata.\r\n   * @param {string} chunk.GUID - The GUID of the semantic chunk.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the semantic chunk exists, otherwise `false`.\r\n   * @throws {Error} If the semantic chunk is null or undefined.\r\n   */",
      "meta": {
        "range": [
          39784,
          40315
        ],
        "filename": "GraphSdk.js",
        "lineno": 1050,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006610",
          "name": "semanticChunkExists",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a semantic chunk exists.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The semantic chunk metadata.",
          "name": "chunk"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the semantic chunk.",
          "name": "chunk.GUID"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the semantic chunk exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the semantic chunk is null or undefined."
        }
      ],
      "name": "semanticChunkExists",
      "longname": "module:base/GraphSdk#semanticChunkExists",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a data repository exists.\r\n   *\r\n   * @param {Object} repo - The data repository metadata.\r\n   * @param {string} repo.GUID - The GUID of the data repository.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the data repository exists, otherwise `false`.\r\n   * @throws {Error} If the data repository is null or undefined.\r\n   */",
      "meta": {
        "range": [
          40787,
          41345
        ],
        "filename": "GraphSdk.js",
        "lineno": 1070,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006643",
          "name": "dataRepositoryExists",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a data repository exists.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The data repository metadata.",
          "name": "repo"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data repository.",
          "name": "repo.GUID"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the data repository exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the data repository is null or undefined."
        }
      ],
      "name": "dataRepositoryExists",
      "longname": "module:base/GraphSdk#dataRepositoryExists",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a tenant exists by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the tenant.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the tenant exists, otherwise `false`.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          41764,
          41997
        ],
        "filename": "GraphSdk.js",
        "lineno": 1092,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006676",
          "name": "tenantExistsByGUID",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a tenant exists by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tenant.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the tenant exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "tenantExistsByGUID",
      "longname": "module:base/GraphSdk#tenantExistsByGUID",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a storage pool exists by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the storage pool.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the storage pool exists, otherwise `false`.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          42391,
          42625
        ],
        "filename": "GraphSdk.js",
        "lineno": 1107,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006703",
          "name": "storagePoolExistsByGUID",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a storage pool exists by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the storage pool.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the storage pool exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "storagePoolExistsByGUID",
      "longname": "module:base/GraphSdk#storagePoolExistsByGUID",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a bucket exists by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the bucket.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the bucket exists, otherwise `false`.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          43001,
          43234
        ],
        "filename": "GraphSdk.js",
        "lineno": 1122,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006730",
          "name": "bucketExistsByGUID",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a bucket exists by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the bucket exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "bucketExistsByGUID",
      "longname": "module:base/GraphSdk#bucketExistsByGUID",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if an object exists by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the object.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the object exists, otherwise `false`.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          43611,
          43852
        ],
        "filename": "GraphSdk.js",
        "lineno": 1137,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006757",
          "name": "objectMetadataExistsByGUID",
          "type": "ClassProperty"
        }
      },
      "description": "Check if an object exists by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the object.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the object exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "objectMetadataExistsByGUID",
      "longname": "module:base/GraphSdk#objectMetadataExistsByGUID",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a collection exists by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the collection.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the collection exists, otherwise `false`.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          44240,
          44485
        ],
        "filename": "GraphSdk.js",
        "lineno": 1152,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006784",
          "name": "collectionExistsByGUID",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a collection exists by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the collection exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "collectionExistsByGUID",
      "longname": "module:base/GraphSdk#collectionExistsByGUID",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a source document exists by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the source document.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the source document exists, otherwise `false`.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          44888,
          45135
        ],
        "filename": "GraphSdk.js",
        "lineno": 1167,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006811",
          "name": "sourceDocumentExistsByGUID",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a source document exists by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the source document.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the source document exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "sourceDocumentExistsByGUID",
      "longname": "module:base/GraphSdk#sourceDocumentExistsByGUID",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a semantic cell exists by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the semantic cell.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the semantic cell exists, otherwise `false`.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          45532,
          45773
        ],
        "filename": "GraphSdk.js",
        "lineno": 1182,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006838",
          "name": "semanticCellExistsByGUID",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a semantic cell exists by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the semantic cell.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the semantic cell exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "semanticCellExistsByGUID",
      "longname": "module:base/GraphSdk#semanticCellExistsByGUID",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a semantic chunk exists by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the semantic chunk.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the semantic chunk exists, otherwise `false`.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          46173,
          46417
        ],
        "filename": "GraphSdk.js",
        "lineno": 1197,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006865",
          "name": "semanticChunkExistsByGUID",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a semantic chunk exists by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the semantic chunk.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the semantic chunk exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "semanticChunkExistsByGUID",
      "longname": "module:base/GraphSdk#semanticChunkExistsByGUID",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a data repository exists by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the data repository.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the data repository exists, otherwise `false`.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          46820,
          47077
        ],
        "filename": "GraphSdk.js",
        "lineno": 1212,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006892",
          "name": "dataRepositoryExistsByGUID",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a data repository exists by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data repository.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the data repository exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "dataRepositoryExistsByGUID",
      "longname": "module:base/GraphSdk#dataRepositoryExistsByGUID",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a graph.\r\n   *\r\n   * @param {string} guid - The GUID of the graph.\r\n   * @param {string} name - The name of the graph.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Graph>} A promise resolving to the created Graph object.\r\n   * @throws {Error} If the name is null or empty, it defaults to a timestamp-based name.\r\n   */",
      "meta": {
        "range": [
          47536,
          47753
        ],
        "filename": "GraphSdk.js",
        "lineno": 1230,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006919",
          "name": "createGraph",
          "type": "ClassProperty"
        }
      },
      "description": "Create a graph.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The name of the graph.",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Graph>"
            ]
          },
          "description": "A promise resolving to the created Graph object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the name is null or empty, it defaults to a timestamp-based name."
        }
      ],
      "name": "createGraph",
      "longname": "module:base/GraphSdk#createGraph",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a tenant.\r\n   *\r\n   * @param {TenantMetadata} tenant - The tenant metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the created GraphNode.\r\n   * @throws {Error} If the tenant object is null.\r\n   */",
      "meta": {
        "range": [
          48096,
          48348
        ],
        "filename": "GraphSdk.js",
        "lineno": 1245,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100006950",
          "name": "createTenant",
          "type": "ClassProperty"
        }
      },
      "description": "Create a tenant.",
      "params": [
        {
          "type": {
            "names": [
              "TenantMetadata"
            ]
          },
          "description": "The tenant metadata.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the created GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the tenant object is null."
        }
      ],
      "name": "createTenant",
      "longname": "module:base/GraphSdk#createTenant",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a storage pool.\r\n   *\r\n   * @param {StoragePool} pool - The storage pool metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the created GraphNode.\r\n   * @throws {Error} If the pool object is null.\r\n   */",
      "meta": {
        "range": [
          50226,
          50492
        ],
        "filename": "GraphSdk.js",
        "lineno": 1307,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007157",
          "name": "createStoragePool",
          "type": "ClassProperty"
        }
      },
      "description": "Create a storage pool.",
      "params": [
        {
          "type": {
            "names": [
              "StoragePool"
            ]
          },
          "description": "The storage pool metadata.",
          "name": "pool"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the created GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the pool object is null."
        }
      ],
      "name": "createStoragePool",
      "longname": "module:base/GraphSdk#createStoragePool",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a bucket.\r\n   *\r\n   * @param {BucketMetadata} bucket - The bucket metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the created GraphNode.\r\n   * @throws {Error} If the bucket object is null.\r\n   */",
      "meta": {
        "range": [
          50835,
          51087
        ],
        "filename": "GraphSdk.js",
        "lineno": 1322,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007186",
          "name": "createBucket",
          "type": "ClassProperty"
        }
      },
      "description": "Create a bucket.",
      "params": [
        {
          "type": {
            "names": [
              "BucketMetadata"
            ]
          },
          "description": "The bucket metadata.",
          "name": "bucket"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the created GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the bucket object is null."
        }
      ],
      "name": "createBucket",
      "longname": "module:base/GraphSdk#createBucket",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create an object.\r\n   *\r\n   * @param {ObjectMetadata} obj - The object metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the created GraphNode.\r\n   * @throws {Error} If the object metadata is null.\r\n   */",
      "meta": {
        "range": [
          51430,
          51734
        ],
        "filename": "GraphSdk.js",
        "lineno": 1337,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007215",
          "name": "createObjectMetadata",
          "type": "ClassProperty"
        }
      },
      "description": "Create an object.",
      "params": [
        {
          "type": {
            "names": [
              "ObjectMetadata"
            ]
          },
          "description": "The object metadata.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the created GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the object metadata is null."
        }
      ],
      "name": "createObjectMetadata",
      "longname": "module:base/GraphSdk#createObjectMetadata",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a collection.\r\n   *\r\n   * @param {Collection} coll - The collection metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the created GraphNode.\r\n   * @throws {Error} If the collection object is null.\r\n   */",
      "meta": {
        "range": [
          52083,
          52343
        ],
        "filename": "GraphSdk.js",
        "lineno": 1357,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007250",
          "name": "createCollection",
          "type": "ClassProperty"
        }
      },
      "description": "Create a collection.",
      "params": [
        {
          "type": {
            "names": [
              "Collection"
            ]
          },
          "description": "The collection metadata.",
          "name": "coll"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the created GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collection object is null."
        }
      ],
      "name": "createCollection",
      "longname": "module:base/GraphSdk#createCollection",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a source document.\r\n   *\r\n   * @param {SourceDocument} doc - The source document metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the created GraphNode.\r\n   * @throws {Error} If the source document object is null.\r\n   */",
      "meta": {
        "range": [
          52710,
          53019
        ],
        "filename": "GraphSdk.js",
        "lineno": 1372,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007279",
          "name": "createSourceDocument",
          "type": "ClassProperty"
        }
      },
      "description": "Create a source document.",
      "params": [
        {
          "type": {
            "names": [
              "SourceDocument"
            ]
          },
          "description": "The source document metadata.",
          "name": "doc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the created GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the source document object is null."
        }
      ],
      "name": "createSourceDocument",
      "longname": "module:base/GraphSdk#createSourceDocument",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a semantic cell.\r\n   *\r\n   * @param {SemanticCell} cell - The semantic cell metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the created GraphNode.\r\n   * @throws {Error} If the semantic cell object is null.\r\n   */",
      "meta": {
        "range": [
          53379,
          53684
        ],
        "filename": "GraphSdk.js",
        "lineno": 1392,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007308",
          "name": "createSemanticCell",
          "type": "ClassProperty"
        }
      },
      "description": "Create a semantic cell.",
      "params": [
        {
          "type": {
            "names": [
              "SemanticCell"
            ]
          },
          "description": "The semantic cell metadata.",
          "name": "cell"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the created GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the semantic cell object is null."
        }
      ],
      "name": "createSemanticCell",
      "longname": "module:base/GraphSdk#createSemanticCell",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a semantic chunk.\r\n   *\r\n   * @param {SemanticChunk} chunk - The semantic chunk metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the created GraphNode.\r\n   * @throws {Error} If the semantic chunk object is null.\r\n   */",
      "meta": {
        "range": [
          54049,
          54318
        ],
        "filename": "GraphSdk.js",
        "lineno": 1412,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007337",
          "name": "createSemanticChunk",
          "type": "ClassProperty"
        }
      },
      "description": "Create a semantic chunk.",
      "params": [
        {
          "type": {
            "names": [
              "SemanticChunk"
            ]
          },
          "description": "The semantic chunk metadata.",
          "name": "chunk"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the created GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the semantic chunk object is null."
        }
      ],
      "name": "createSemanticChunk",
      "longname": "module:base/GraphSdk#createSemanticChunk",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a data repository.\r\n   *\r\n   * @param {DataRepository} repo - The data repository metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the created GraphNode.\r\n   * @throws {Error} If the data repository object is null.\r\n   */",
      "meta": {
        "range": [
          54686,
          54999
        ],
        "filename": "GraphSdk.js",
        "lineno": 1427,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007366",
          "name": "createDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Create a data repository.",
      "params": [
        {
          "type": {
            "names": [
              "DataRepository"
            ]
          },
          "description": "The data repository metadata.",
          "name": "repo"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the created GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the data repository object is null."
        }
      ],
      "name": "createDataRepository",
      "longname": "module:base/GraphSdk#createDataRepository",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a tenant graph node.\r\n   *\r\n   * @param {TenantMetadata} tenant - The tenant metadata object.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the retrieved GraphNode.\r\n   * @throws {Error} If the tenant object is null.\r\n   */",
      "meta": {
        "range": [
          55360,
          55578
        ],
        "filename": "GraphSdk.js",
        "lineno": 1447,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007395",
          "name": "readTenant",
          "type": "ClassProperty"
        }
      },
      "description": "Read a tenant graph node.",
      "params": [
        {
          "type": {
            "names": [
              "TenantMetadata"
            ]
          },
          "description": "The tenant metadata object.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the retrieved GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the tenant object is null."
        }
      ],
      "name": "readTenant",
      "longname": "module:base/GraphSdk#readTenant",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a storage pool graph node.\r\n   *\r\n   * @param {StoragePool} pool - The storage pool metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the retrieved GraphNode.\r\n   * @throws {Error} If the pool object is null.\r\n   */",
      "meta": {
        "range": [
          55937,
          56156
        ],
        "filename": "GraphSdk.js",
        "lineno": 1460,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007423",
          "name": "readStoragePool",
          "type": "ClassProperty"
        }
      },
      "description": "Read a storage pool graph node.",
      "params": [
        {
          "type": {
            "names": [
              "StoragePool"
            ]
          },
          "description": "The storage pool metadata.",
          "name": "pool"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the retrieved GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the pool object is null."
        }
      ],
      "name": "readStoragePool",
      "longname": "module:base/GraphSdk#readStoragePool",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a bucket graph node.\r\n   *\r\n   * @param {BucketMetadata} bucket - The bucket metadata object.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the retrieved GraphNode.\r\n   * @throws {Error} If the bucket object is null.\r\n   */",
      "meta": {
        "range": [
          56517,
          56735
        ],
        "filename": "GraphSdk.js",
        "lineno": 1473,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007451",
          "name": "readBucket",
          "type": "ClassProperty"
        }
      },
      "description": "Read a bucket graph node.",
      "params": [
        {
          "type": {
            "names": [
              "BucketMetadata"
            ]
          },
          "description": "The bucket metadata object.",
          "name": "bucket"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the retrieved GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the bucket object is null."
        }
      ],
      "name": "readBucket",
      "longname": "module:base/GraphSdk#readBucket",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read an object node.\r\n   *\r\n   * @param {ObjectMetadata} obj - The object metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the retrieved GraphNode.\r\n   * @throws {Error} If the object metadata is null or invalid.\r\n   */",
      "meta": {
        "range": [
          57094,
          57658
        ],
        "filename": "GraphSdk.js",
        "lineno": 1486,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007479",
          "name": "readObjectMetadata",
          "type": "ClassProperty"
        }
      },
      "description": "Read an object node.",
      "params": [
        {
          "type": {
            "names": [
              "ObjectMetadata"
            ]
          },
          "description": "The object metadata.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the retrieved GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the object metadata is null or invalid."
        }
      ],
      "name": "readObjectMetadata",
      "longname": "module:base/GraphSdk#readObjectMetadata",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a collection node.\r\n   *\r\n   * @param {Collection} coll - The collection metadata object.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the retrieved GraphNode.\r\n   * @throws {Error} If the collection object is null.\r\n   */",
      "meta": {
        "range": [
          58019,
          58247
        ],
        "filename": "GraphSdk.js",
        "lineno": 1510,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007556",
          "name": "readCollection",
          "type": "ClassProperty"
        }
      },
      "description": "Read a collection node.",
      "params": [
        {
          "type": {
            "names": [
              "Collection"
            ]
          },
          "description": "The collection metadata object.",
          "name": "coll"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the retrieved GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collection object is null."
        }
      ],
      "name": "readCollection",
      "longname": "module:base/GraphSdk#readCollection",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a source document node.\r\n   *\r\n   * @param {SourceDocument} doc - The source document metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the retrieved GraphNode.\r\n   * @throws {Error} If the source document object is null.\r\n   */",
      "meta": {
        "range": [
          58619,
          58851
        ],
        "filename": "GraphSdk.js",
        "lineno": 1523,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007584",
          "name": "readSourceDocument",
          "type": "ClassProperty"
        }
      },
      "description": "Read a source document node.",
      "params": [
        {
          "type": {
            "names": [
              "SourceDocument"
            ]
          },
          "description": "The source document metadata.",
          "name": "doc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the retrieved GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the source document object is null."
        }
      ],
      "name": "readSourceDocument",
      "longname": "module:base/GraphSdk#readSourceDocument",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a semantic cell node.\r\n   *\r\n   * @param {SemanticCell} cell - The semantic cell metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the retrieved GraphNode.\r\n   * @throws {Error} If the semantic cell object is null.\r\n   */",
      "meta": {
        "range": [
          59216,
          59443
        ],
        "filename": "GraphSdk.js",
        "lineno": 1536,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007612",
          "name": "readSemanticCell",
          "type": "ClassProperty"
        }
      },
      "description": "Read a semantic cell node.",
      "params": [
        {
          "type": {
            "names": [
              "SemanticCell"
            ]
          },
          "description": "The semantic cell metadata.",
          "name": "cell"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the retrieved GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the semantic cell object is null."
        }
      ],
      "name": "readSemanticCell",
      "longname": "module:base/GraphSdk#readSemanticCell",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a semantic chunk node.\r\n   *\r\n   * @param {SemanticChunk} chunk - The semantic chunk metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the retrieved GraphNode.\r\n   * @throws {Error} If the semantic chunk object is null.\r\n   */",
      "meta": {
        "range": [
          59813,
          60047
        ],
        "filename": "GraphSdk.js",
        "lineno": 1549,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007640",
          "name": "readSemanticChunk",
          "type": "ClassProperty"
        }
      },
      "description": "Read a semantic chunk node.",
      "params": [
        {
          "type": {
            "names": [
              "SemanticChunk"
            ]
          },
          "description": "The semantic chunk metadata.",
          "name": "chunk"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the retrieved GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the semantic chunk object is null."
        }
      ],
      "name": "readSemanticChunk",
      "longname": "module:base/GraphSdk#readSemanticChunk",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a data repository node.\r\n   *\r\n   * @param {DataRepository} repo - The data repository metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the retrieved GraphNode.\r\n   * @throws {Error} If the data repository object is null.\r\n   */",
      "meta": {
        "range": [
          60420,
          60665
        ],
        "filename": "GraphSdk.js",
        "lineno": 1562,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007668",
          "name": "readDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Read a data repository node.",
      "params": [
        {
          "type": {
            "names": [
              "DataRepository"
            ]
          },
          "description": "The data repository metadata.",
          "name": "repo"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the retrieved GraphNode."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the data repository object is null."
        }
      ],
      "name": "readDataRepository",
      "longname": "module:base/GraphSdk#readDataRepository",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a tenant graph node.\r\n   *\r\n   * @param {string} guid - The GUID of the tenant.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the GraphNode, or null if GUID is empty.\r\n   */",
      "meta": {
        "range": [
          61005,
          61179
        ],
        "filename": "GraphSdk.js",
        "lineno": 1576,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007696",
          "name": "readTenantGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Read a tenant graph node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tenant.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the GraphNode, or null if GUID is empty."
        }
      ],
      "name": "readTenantGuid",
      "longname": "module:base/GraphSdk#readTenantGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a storage pool graph node.\r\n   *\r\n   * @param {string} guid - The GUID of the storage pool.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the GraphNode, or null if GUID is empty.\r\n   */",
      "meta": {
        "range": [
          61490,
          61665
        ],
        "filename": "GraphSdk.js",
        "lineno": 1588,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007720",
          "name": "readStoragePoolGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Read a storage pool graph node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the storage pool.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the GraphNode, or null if GUID is empty."
        }
      ],
      "name": "readStoragePoolGuid",
      "longname": "module:base/GraphSdk#readStoragePoolGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a bucket graph node.\r\n   *\r\n   * @param {string} guid - The GUID of the bucket.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the GraphNode, or null if GUID is empty.\r\n   */",
      "meta": {
        "range": [
          61964,
          62138
        ],
        "filename": "GraphSdk.js",
        "lineno": 1600,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007744",
          "name": "readBucketGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Read a bucket graph node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the GraphNode, or null if GUID is empty."
        }
      ],
      "name": "readBucketGuid",
      "longname": "module:base/GraphSdk#readBucketGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read an object metadata node.\r\n   *\r\n   * @param {string} guid - The GUID of the object.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the GraphNode, or null if GUID is empty.\r\n   */",
      "meta": {
        "range": [
          62441,
          62623
        ],
        "filename": "GraphSdk.js",
        "lineno": 1612,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007768",
          "name": "readObjectMetadataGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Read an object metadata node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the object.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the GraphNode, or null if GUID is empty."
        }
      ],
      "name": "readObjectMetadataGuid",
      "longname": "module:base/GraphSdk#readObjectMetadataGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a collection node.\r\n   *\r\n   * @param {string} guid - The GUID of the collection.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the GraphNode, or null if GUID is empty.\r\n   */",
      "meta": {
        "range": [
          62924,
          63110
        ],
        "filename": "GraphSdk.js",
        "lineno": 1624,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007792",
          "name": "readCollectionGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Read a collection node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the GraphNode, or null if GUID is empty."
        }
      ],
      "name": "readCollectionGuid",
      "longname": "module:base/GraphSdk#readCollectionGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a source document node.\r\n   *\r\n   * @param {string} guid - The GUID of the source document.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the GraphNode, or null if GUID is empty.\r\n   */",
      "meta": {
        "range": [
          63421,
          63609
        ],
        "filename": "GraphSdk.js",
        "lineno": 1636,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007816",
          "name": "readSourceDocumentGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Read a source document node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the source document.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the GraphNode, or null if GUID is empty."
        }
      ],
      "name": "readSourceDocumentGuid",
      "longname": "module:base/GraphSdk#readSourceDocumentGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a semantic cell node.\r\n   *\r\n   * @param {string} guid - The GUID of the semantic cell.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the GraphNode, or null if GUID is empty.\r\n   */",
      "meta": {
        "range": [
          63916,
          64098
        ],
        "filename": "GraphSdk.js",
        "lineno": 1648,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007840",
          "name": "readSemanticCellGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Read a semantic cell node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the semantic cell.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the GraphNode, or null if GUID is empty."
        }
      ],
      "name": "readSemanticCellGuid",
      "longname": "module:base/GraphSdk#readSemanticCellGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a semantic chunk node.\r\n   *\r\n   * @param {string} guid - The GUID of the semantic chunk.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the GraphNode, or null if GUID is empty.\r\n   */",
      "meta": {
        "range": [
          64407,
          64592
        ],
        "filename": "GraphSdk.js",
        "lineno": 1660,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007864",
          "name": "readSemanticChunkGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Read a semantic chunk node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the semantic chunk.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the GraphNode, or null if GUID is empty."
        }
      ],
      "name": "readSemanticChunkGuid",
      "longname": "module:base/GraphSdk#readSemanticChunkGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a data repository node.\r\n   *\r\n   * @param {string} guid - The GUID of the data repository.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<GraphNode>} A promise resolving to the GraphNode, or null if GUID is empty.\r\n   */",
      "meta": {
        "range": [
          64903,
          65101
        ],
        "filename": "GraphSdk.js",
        "lineno": 1672,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007888",
          "name": "readDataRepositoryGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Read a data repository node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data repository.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphNode>"
            ]
          },
          "description": "A promise resolving to the GraphNode, or null if GUID is empty."
        }
      ],
      "name": "readDataRepositoryGuid",
      "longname": "module:base/GraphSdk#readDataRepositoryGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read tenants.\r\n   *\r\n   * @param {object} [filter] - Optional filter for searching tenants.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<Array<GraphNode>>} A promise resolving to an array of GraphNodes.\r\n   */",
      "meta": {
        "range": [
          65434,
          65571
        ],
        "filename": "GraphSdk.js",
        "lineno": 1686,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007912",
          "name": "readTenants",
          "type": "ClassProperty"
        }
      },
      "description": "Read tenants.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional filter for searching tenants.",
          "name": "filter"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<GraphNode>>"
            ]
          },
          "description": "A promise resolving to an array of GraphNodes."
        }
      ],
      "name": "readTenants",
      "longname": "module:base/GraphSdk#readTenants",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read storage pools.\r\n   *\r\n   * @param {object} [filter] - Optional filter for searching storage pools.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<Array<GraphNode>>} A promise resolving to an array of GraphNodes.\r\n   */",
      "meta": {
        "range": [
          65879,
          66019
        ],
        "filename": "GraphSdk.js",
        "lineno": 1697,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007930",
          "name": "readStoragePools",
          "type": "ClassProperty"
        }
      },
      "description": "Read storage pools.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional filter for searching storage pools.",
          "name": "filter"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<GraphNode>>"
            ]
          },
          "description": "A promise resolving to an array of GraphNodes."
        }
      ],
      "name": "readStoragePools",
      "longname": "module:base/GraphSdk#readStoragePools",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read buckets.\r\n   *\r\n   * @param {object} [filter] - Optional filter for searching buckets.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<Array<GraphNode>>} A promise resolving to an array of GraphNodes.\r\n   */",
      "meta": {
        "range": [
          66315,
          66452
        ],
        "filename": "GraphSdk.js",
        "lineno": 1708,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007948",
          "name": "readBuckets",
          "type": "ClassProperty"
        }
      },
      "description": "Read buckets.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional filter for searching buckets.",
          "name": "filter"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<GraphNode>>"
            ]
          },
          "description": "A promise resolving to an array of GraphNodes."
        }
      ],
      "name": "readBuckets",
      "longname": "module:base/GraphSdk#readBuckets",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read objects.\r\n   *\r\n   * @param {object} [filter] - Optional filter for searching objects.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<Array<GraphNode>>} A promise resolving to an array of GraphNodes.\r\n   */",
      "meta": {
        "range": [
          66748,
          66898
        ],
        "filename": "GraphSdk.js",
        "lineno": 1719,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007966",
          "name": "readObjectMetadataFilter",
          "type": "ClassProperty"
        }
      },
      "description": "Read objects.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional filter for searching objects.",
          "name": "filter"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<GraphNode>>"
            ]
          },
          "description": "A promise resolving to an array of GraphNodes."
        }
      ],
      "name": "readObjectMetadataFilter",
      "longname": "module:base/GraphSdk#readObjectMetadataFilter",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read collections.\r\n   *\r\n   * @param {object} [filter] - Optional filter for searching collections.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<Array<GraphNode>>} A promise resolving to an array of GraphNodes.\r\n   */",
      "meta": {
        "range": [
          67202,
          67347
        ],
        "filename": "GraphSdk.js",
        "lineno": 1730,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100007984",
          "name": "readCollections",
          "type": "ClassProperty"
        }
      },
      "description": "Read collections.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional filter for searching collections.",
          "name": "filter"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<GraphNode>>"
            ]
          },
          "description": "A promise resolving to an array of GraphNodes."
        }
      ],
      "name": "readCollections",
      "longname": "module:base/GraphSdk#readCollections",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read source documents.\r\n   *\r\n   * @param {object} [filter] - Optional filter for searching source documents.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<Array<GraphNode>>} A promise resolving to an array of GraphNodes.\r\n   */",
      "meta": {
        "range": [
          67661,
          67809
        ],
        "filename": "GraphSdk.js",
        "lineno": 1741,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008002",
          "name": "readSourceDocuments",
          "type": "ClassProperty"
        }
      },
      "description": "Read source documents.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional filter for searching source documents.",
          "name": "filter"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<GraphNode>>"
            ]
          },
          "description": "A promise resolving to an array of GraphNodes."
        }
      ],
      "name": "readSourceDocuments",
      "longname": "module:base/GraphSdk#readSourceDocuments",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read semantic cells.\r\n   *\r\n   * @param {object} [filter] - Optional filter for searching semantic cells.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<Array<GraphNode>>} A promise resolving to an array of GraphNodes.\r\n   */",
      "meta": {
        "range": [
          68119,
          68263
        ],
        "filename": "GraphSdk.js",
        "lineno": 1752,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008020",
          "name": "readSemanticCells",
          "type": "ClassProperty"
        }
      },
      "description": "Read semantic cells.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional filter for searching semantic cells.",
          "name": "filter"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<GraphNode>>"
            ]
          },
          "description": "A promise resolving to an array of GraphNodes."
        }
      ],
      "name": "readSemanticCells",
      "longname": "module:base/GraphSdk#readSemanticCells",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read semantic chunks.\r\n   *\r\n   * @param {object} [filter] - Optional filter for searching semantic chunks.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<Array<GraphNode>>} A promise resolving to an array of GraphNodes.\r\n   */",
      "meta": {
        "range": [
          68575,
          68721
        ],
        "filename": "GraphSdk.js",
        "lineno": 1763,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008038",
          "name": "readSemanticChunks",
          "type": "ClassProperty"
        }
      },
      "description": "Read semantic chunks.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional filter for searching semantic chunks.",
          "name": "filter"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<GraphNode>>"
            ]
          },
          "description": "A promise resolving to an array of GraphNodes."
        }
      ],
      "name": "readSemanticChunks",
      "longname": "module:base/GraphSdk#readSemanticChunks",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read data repositories.\r\n   *\r\n   * @param {object} [filter] - Optional filter for searching data repositories.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<Array<GraphNode>>} A promise resolving to an array of GraphNodes.\r\n   */",
      "meta": {
        "range": [
          69037,
          69191
        ],
        "filename": "GraphSdk.js",
        "lineno": 1774,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008056",
          "name": "readDataRepositories",
          "type": "ClassProperty"
        }
      },
      "description": "Read data repositories.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional filter for searching data repositories.",
          "name": "filter"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<GraphNode>>"
            ]
          },
          "description": "A promise resolving to an array of GraphNodes."
        }
      ],
      "name": "readDataRepositories",
      "longname": "module:base/GraphSdk#readDataRepositories",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a tenant.\r\n   *\r\n   * @param {TenantMetadata} tenant - The tenant to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          69580,
          69746
        ],
        "filename": "GraphSdk.js",
        "lineno": 1792,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008074",
          "name": "deleteTenant",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a tenant.",
      "params": [
        {
          "type": {
            "names": [
              "TenantMetadata"
            ]
          },
          "description": "The tenant to delete.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteTenant",
      "longname": "module:base/GraphSdk#deleteTenant",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a storage pool.\r\n   *\r\n   * @param {StoragePool} pool - The storage pool to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          70050,
          70221
        ],
        "filename": "GraphSdk.js",
        "lineno": 1804,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008094",
          "name": "deleteStoragePool",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a storage pool.",
      "params": [
        {
          "type": {
            "names": [
              "StoragePool"
            ]
          },
          "description": "The storage pool to delete.",
          "name": "pool"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteStoragePool",
      "longname": "module:base/GraphSdk#deleteStoragePool",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a bucket.\r\n   *\r\n   * @param {BucketMetadata} bucket - The bucket to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          70518,
          70684
        ],
        "filename": "GraphSdk.js",
        "lineno": 1816,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008114",
          "name": "deleteBucket",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a bucket.",
      "params": [
        {
          "type": {
            "names": [
              "BucketMetadata"
            ]
          },
          "description": "The bucket to delete.",
          "name": "bucket"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteBucket",
      "longname": "module:base/GraphSdk#deleteBucket",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete an object.\r\n   *\r\n   * @param {ObjectMetadata} obj - The object to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          70979,
          71144
        ],
        "filename": "GraphSdk.js",
        "lineno": 1828,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008134",
          "name": "deleteObjectMetadata",
          "type": "ClassProperty"
        }
      },
      "description": "Delete an object.",
      "params": [
        {
          "type": {
            "names": [
              "ObjectMetadata"
            ]
          },
          "description": "The object to delete.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteObjectMetadata",
      "longname": "module:base/GraphSdk#deleteObjectMetadata",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a collection.\r\n   *\r\n   * @param {Collection} coll - The collection to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          71443,
          71611
        ],
        "filename": "GraphSdk.js",
        "lineno": 1840,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008154",
          "name": "deleteCollection",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a collection.",
      "params": [
        {
          "type": {
            "names": [
              "Collection"
            ]
          },
          "description": "The collection to delete.",
          "name": "coll"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteCollection",
      "longname": "module:base/GraphSdk#deleteCollection",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a source document.\r\n   *\r\n   * @param {SourceDocument} doc - The source document to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          71923,
          72097
        ],
        "filename": "GraphSdk.js",
        "lineno": 1852,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008174",
          "name": "deleteSourceDocument",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a source document.",
      "params": [
        {
          "type": {
            "names": [
              "SourceDocument"
            ]
          },
          "description": "The source document to delete.",
          "name": "doc"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteSourceDocument",
      "longname": "module:base/GraphSdk#deleteSourceDocument",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a semantic cell.\r\n   *\r\n   * @param {SemanticCell} cell - The semantic cell to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          72404,
          72577
        ],
        "filename": "GraphSdk.js",
        "lineno": 1864,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008194",
          "name": "deleteSemanticCell",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a semantic cell.",
      "params": [
        {
          "type": {
            "names": [
              "SemanticCell"
            ]
          },
          "description": "The semantic cell to delete.",
          "name": "cell"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteSemanticCell",
      "longname": "module:base/GraphSdk#deleteSemanticCell",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a semantic chunk.\r\n   *\r\n   * @param {SemanticChunk} chunk - The semantic chunk to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          72888,
          73066
        ],
        "filename": "GraphSdk.js",
        "lineno": 1876,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008214",
          "name": "deleteSemanticChunk",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a semantic chunk.",
      "params": [
        {
          "type": {
            "names": [
              "SemanticChunk"
            ]
          },
          "description": "The semantic chunk to delete.",
          "name": "chunk"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteSemanticChunk",
      "longname": "module:base/GraphSdk#deleteSemanticChunk",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a data repository.\r\n   *\r\n   * @param {DataRepository} repo - The data repository to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          73379,
          73556
        ],
        "filename": "GraphSdk.js",
        "lineno": 1888,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008234",
          "name": "deleteDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a data repository.",
      "params": [
        {
          "type": {
            "names": [
              "DataRepository"
            ]
          },
          "description": "The data repository to delete.",
          "name": "repo"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteDataRepository",
      "longname": "module:base/GraphSdk#deleteDataRepository",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a tenant by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the tenant to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          73884,
          74076
        ],
        "filename": "GraphSdk.js",
        "lineno": 1902,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008254",
          "name": "deleteTenantGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a tenant by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tenant to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteTenantGuid",
      "longname": "module:base/GraphSdk#deleteTenantGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a storage pool by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the storage pool to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          74374,
          74567
        ],
        "filename": "GraphSdk.js",
        "lineno": 1914,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008273",
          "name": "deleteStoragePoolGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a storage pool by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the storage pool to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteStoragePoolGuid",
      "longname": "module:base/GraphSdk#deleteStoragePoolGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a bucket by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the bucket to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          74853,
          75045
        ],
        "filename": "GraphSdk.js",
        "lineno": 1926,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008292",
          "name": "deleteBucketGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a bucket by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteBucketGuid",
      "longname": "module:base/GraphSdk#deleteBucketGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete an object by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the object to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          75332,
          75532
        ],
        "filename": "GraphSdk.js",
        "lineno": 1938,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008311",
          "name": "deleteObjectMetadataGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Delete an object by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the object to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteObjectMetadataGuid",
      "longname": "module:base/GraphSdk#deleteObjectMetadataGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a collection by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the collection to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          75826,
          76030
        ],
        "filename": "GraphSdk.js",
        "lineno": 1950,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008330",
          "name": "deleteCollectionGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a collection by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteCollectionGuid",
      "longname": "module:base/GraphSdk#deleteCollectionGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a source document by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the source document to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          76334,
          76540
        ],
        "filename": "GraphSdk.js",
        "lineno": 1962,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008349",
          "name": "deleteSourceDocumentGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a source document by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the source document to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteSourceDocumentGuid",
      "longname": "module:base/GraphSdk#deleteSourceDocumentGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a semantic cell by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the semantic cell to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          76840,
          77040
        ],
        "filename": "GraphSdk.js",
        "lineno": 1974,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008368",
          "name": "deleteSemanticCellGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a semantic cell by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the semantic cell to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteSemanticCellGuid",
      "longname": "module:base/GraphSdk#deleteSemanticCellGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a semantic chunk by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the semantic chunk to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          77342,
          77545
        ],
        "filename": "GraphSdk.js",
        "lineno": 1986,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008387",
          "name": "deleteSemanticChunkGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a semantic chunk by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the semantic chunk to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteSemanticChunkGuid",
      "longname": "module:base/GraphSdk#deleteSemanticChunkGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a data repository by GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the data repository to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token.\r\n   * @returns {Promise<void>} A promise that resolves when the delete operation is complete.\r\n   */",
      "meta": {
        "range": [
          77849,
          78065
        ],
        "filename": "GraphSdk.js",
        "lineno": 1998,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008406",
          "name": "deleteDataRepositoryGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a data repository by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data repository to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the delete operation is complete."
        }
      ],
      "name": "deleteDataRepositoryGuid",
      "longname": "module:base/GraphSdk#deleteDataRepositoryGuid",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Get edges to a given graph node.\r\n   *\r\n   * @param {GraphNode} node - The graph node to retrieve edges for.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token.\r\n   * @returns {Promise<GraphEdge[]>} A promise that resolves to a list of graph edges.\r\n   */",
      "meta": {
        "range": [
          78393,
          78880
        ],
        "filename": "GraphSdk.js",
        "lineno": 2012,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008425",
          "name": "getEdgesTo",
          "type": "ClassProperty"
        }
      },
      "description": "Get edges to a given graph node.",
      "params": [
        {
          "type": {
            "names": [
              "GraphNode"
            ]
          },
          "description": "The graph node to retrieve edges for.",
          "name": "node"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<GraphEdge>>"
            ]
          },
          "description": "A promise that resolves to a list of graph edges."
        }
      ],
      "name": "getEdgesTo",
      "longname": "module:base/GraphSdk#getEdgesTo",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Get edges from a given graph node.\r\n   *\r\n   * @param {GraphNode} node - The graph node to retrieve edges for.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token.\r\n   * @returns {Promise<GraphEdge[]>} A promise that resolves to a list of graph edges.\r\n   */",
      "meta": {
        "range": [
          79177,
          79670
        ],
        "filename": "GraphSdk.js",
        "lineno": 2033,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008478",
          "name": "getEdgesFrom",
          "type": "ClassProperty"
        }
      },
      "description": "Get edges from a given graph node.",
      "params": [
        {
          "type": {
            "names": [
              "GraphNode"
            ]
          },
          "description": "The graph node to retrieve edges for.",
          "name": "node"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<GraphEdge>>"
            ]
          },
          "description": "A promise that resolves to a list of graph edges."
        }
      ],
      "name": "getEdgesFrom",
      "longname": "module:base/GraphSdk#getEdgesFrom",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Initialize the GraphDriver based on the repository type.\r\n   */",
      "meta": {
        "range": [
          79811,
          80171
        ],
        "filename": "GraphSdk.js",
        "lineno": 2053,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008531",
          "name": "initializeGraphDriver",
          "type": "ClassProperty"
        }
      },
      "description": "Initialize the GraphDriver based on the repository type.",
      "name": "initializeGraphDriver",
      "longname": "module:base/GraphSdk#initializeGraphDriver",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a node exists based on a given type, key, and value.\r\n   *\r\n   * @param {string} typeVal - The type of the graph node.\r\n   * @param {string} dataKey - The key to search the node by.\r\n   * @param {string} dataVal - The value to search for in the node.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<boolean>} A promise that resolves to a boolean indicating if the node exists.\r\n   * @throws {Error} If there's an error during the search operation.\r\n   */",
      "meta": {
        "range": [
          80721,
          81473
        ],
        "filename": "GraphSdk.js",
        "lineno": 2072,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008569",
          "name": "existsInternal",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a node exists based on a given type, key, and value.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The type of the graph node.",
          "name": "typeVal"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key to search the node by.",
          "name": "dataKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The value to search for in the node.",
          "name": "dataVal"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise that resolves to a boolean indicating if the node exists."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If there's an error during the search operation."
        }
      ],
      "name": "existsInternal",
      "longname": "module:base/GraphSdk#existsInternal",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a node exists based on a given type and dictionary of search criteria.\r\n   *\r\n   * @param {string} typeVal - The type of the graph node.\r\n   * @param {Object} dict - The dictionary containing the key-value pairs to search for.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<boolean>} A promise that resolves to a boolean indicating if the node exists.\r\n   * @throws {Error} If there's an error during the search operation.\r\n   */",
      "meta": {
        "range": [
          81999,
          82561
        ],
        "filename": "GraphSdk.js",
        "lineno": 2096,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008638",
          "name": "existsInternalDict",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a node exists based on a given type and dictionary of search criteria.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The type of the graph node.",
          "name": "typeVal"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The dictionary containing the key-value pairs to search for.",
          "name": "dict"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise that resolves to a boolean indicating if the node exists."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If there's an error during the search operation."
        }
      ],
      "name": "existsInternalDict",
      "longname": "module:base/GraphSdk#existsInternalDict",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Perform a search for nodes based on a type, key, and value.\r\n   *\r\n   * @param {string} typeVal - The type of the graph node to search for.\r\n   * @param {string} dataKey - The key to search the node by.\r\n   * @param {any} dataVal - The value to search for in the node.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<GraphNode[]>} A promise that resolves to a list of graph nodes.\r\n   * @throws {Error} If there is an error during the search operation.\r\n   */",
      "meta": {
        "range": [
          83609,
          84280
        ],
        "filename": "GraphSdk.js",
        "lineno": 2136,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008725",
          "name": "searchInternalDataKey",
          "type": "ClassProperty"
        }
      },
      "description": "Perform a search for nodes based on a type, key, and value.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The type of the graph node to search for.",
          "name": "typeVal"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key to search the node by.",
          "name": "dataKey"
        },
        {
          "type": {
            "names": [
              "any"
            ]
          },
          "description": "The value to search for in the node.",
          "name": "dataVal"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<GraphNode>>"
            ]
          },
          "description": "A promise that resolves to a list of graph nodes."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If there is an error during the search operation."
        }
      ],
      "name": "searchInternalDataKey",
      "longname": "module:base/GraphSdk#searchInternalDataKey",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Perform a search for nodes based on a type and a dictionary of search criteria.\r\n   *\r\n   * @param {string} typeVal - The type of the graph node to search for.\r\n   * @param {Object} dict - The dictionary containing key-value pairs to search by.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<GraphNode[]>} A promise that resolves to a list of graph nodes.\r\n   * @throws {Error} If there is an error during the search operation.\r\n   */",
      "meta": {
        "range": [
          85174,
          86084
        ],
        "filename": "GraphSdk.js",
        "lineno": 2173,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008817",
          "name": "searchInternal",
          "type": "ClassProperty"
        }
      },
      "description": "Perform a search for nodes based on a type and a dictionary of search criteria.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The type of the graph node to search for.",
          "name": "typeVal"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The dictionary containing key-value pairs to search by.",
          "name": "dict"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<GraphNode>>"
            ]
          },
          "description": "A promise that resolves to a list of graph nodes."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If there is an error during the search operation."
        }
      ],
      "name": "searchInternal",
      "longname": "module:base/GraphSdk#searchInternal",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete an object of a specific type based on its GUID.\r\n   *\r\n   * @param {Object} obj - The object to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<void>} A promise indicating the deletion is complete.\r\n   */",
      "meta": {
        "range": [
          86390,
          87840
        ],
        "filename": "GraphSdk.js",
        "lineno": 2203,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100008907",
          "name": "deleteInternalObj",
          "type": "ClassProperty"
        }
      },
      "description": "Delete an object of a specific type based on its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The object to delete.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise indicating the deletion is complete."
        }
      ],
      "name": "deleteInternalObj",
      "longname": "module:base/GraphSdk#deleteInternalObj",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete an object by its type and GUID.\r\n   *\r\n   * @param {string} objType - The type of the object (e.g., \"Tenant\", \"Bucket\").\r\n   * @param {string} objGuidField - The field representing the GUID of the object.\r\n   * @param {string} guid - The GUID of the object to delete.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<void>} A promise indicating the deletion is complete.\r\n   */",
      "meta": {
        "range": [
          88312,
          88966
        ],
        "filename": "GraphSdk.js",
        "lineno": 2238,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100009109",
          "name": "deleteInternal",
          "type": "ClassProperty"
        }
      },
      "description": "Delete an object by its type and GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The type of the object (e.g., \"Tenant\", \"Bucket\").",
          "name": "objType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The field representing the GUID of the object.",
          "name": "objGuidField"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the object to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise indicating the deletion is complete."
        }
      ],
      "name": "deleteInternal",
      "longname": "module:base/GraphSdk#deleteInternal",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read an object based on its type and GUID.\r\n   *\r\n   * @param {Object} obj - The object to read.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<GraphNode|null>} A promise that resolves to the graph node or null if not found.\r\n   */",
      "meta": {
        "range": [
          89285,
          90798
        ],
        "filename": "GraphSdk.js",
        "lineno": 2263,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100009182",
          "name": "readInternalObj",
          "type": "ClassProperty"
        }
      },
      "description": "Read an object based on its type and GUID.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The object to read.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(GraphNode|null)>"
            ]
          },
          "description": "A promise that resolves to the graph node or null if not found."
        }
      ],
      "name": "readInternalObj",
      "longname": "module:base/GraphSdk#readInternalObj",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a graph node by its type and GUID.\r\n   *\r\n   * @param {string} objType - The type of the object (e.g., \"Tenant\", \"Bucket\").\r\n   * @param {string} objGuidField - The field representing the GUID of the object.\r\n   * @param {string} guid - The GUID of the object to read.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<GraphNode|null>} A promise that resolves to the graph node or null if not found.\r\n   */",
      "meta": {
        "range": [
          91296,
          91603
        ],
        "filename": "GraphSdk.js",
        "lineno": 2300,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100009386",
          "name": "readInternal",
          "type": "ClassProperty"
        }
      },
      "description": "Read a graph node by its type and GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The type of the object (e.g., \"Tenant\", \"Bucket\").",
          "name": "objType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The field representing the GUID of the object.",
          "name": "objGuidField"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the object to read.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(GraphNode|null)>"
            ]
          },
          "description": "A promise that resolves to the graph node or null if not found."
        }
      ],
      "name": "readInternal",
      "longname": "module:base/GraphSdk#readInternal",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Insert semantic cells into the graph and establish relationships with parent cells or source documents.\r\n   *\r\n   * @param {Graph} graph - The graph in which to insert the semantic cells.\r\n   * @param {GraphNode} sourceDocumentNode - The source document node.\r\n   * @param {GraphNode} parentCellNode - The parent cell node.\r\n   * @param {SemanticCell[]} cells - List of semantic cells to insert.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<GraphResult>} A promise that resolves to the result of the insertion.\r\n   */",
      "meta": {
        "range": [
          92210,
          99289
        ],
        "filename": "GraphSdk.js",
        "lineno": 2322,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100009426",
          "name": "insertSemanticCellsInternal",
          "type": "ClassProperty"
        }
      },
      "description": "Insert semantic cells into the graph and establish relationships with parent cells or source documents.",
      "params": [
        {
          "type": {
            "names": [
              "Graph"
            ]
          },
          "description": "The graph in which to insert the semantic cells.",
          "name": "graph"
        },
        {
          "type": {
            "names": [
              "GraphNode"
            ]
          },
          "description": "The source document node.",
          "name": "sourceDocumentNode"
        },
        {
          "type": {
            "names": [
              "GraphNode"
            ]
          },
          "description": "The parent cell node.",
          "name": "parentCellNode"
        },
        {
          "type": {
            "names": [
              "Array.<SemanticCell>"
            ]
          },
          "description": "List of semantic cells to insert.",
          "name": "cells"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphResult>"
            ]
          },
          "description": "A promise that resolves to the result of the insertion."
        }
      ],
      "name": "insertSemanticCellsInternal",
      "longname": "module:base/GraphSdk#insertSemanticCellsInternal",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Remove the source document from the graph, including its semantic cells and chunks.\r\n   *\r\n   * @param {GraphNode} sourceDoc - The source document node to remove.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<void>}\r\n   */",
      "meta": {
        "range": [
          99600,
          100121
        ],
        "filename": "GraphSdk.js",
        "lineno": 2515,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100010281",
          "name": "removeSourceDocumentObj",
          "type": "ClassProperty"
        }
      },
      "description": "Remove the source document from the graph, including its semantic cells and chunks.",
      "params": [
        {
          "type": {
            "names": [
              "GraphNode"
            ]
          },
          "description": "The source document node to remove.",
          "name": "sourceDoc"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          }
        }
      ],
      "name": "removeSourceDocumentObj",
      "longname": "module:base/GraphSdk#removeSourceDocumentObj",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Remove the semantic cell from the graph, including its associated semantic chunks.\r\n   *\r\n   * @param {GraphNode} cell - The semantic cell node to remove.\r\n   * @param {AbortSignal} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<void>}\r\n   */",
      "meta": {
        "range": [
          100426,
          100941
        ],
        "filename": "GraphSdk.js",
        "lineno": 2537,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph",
        "code": {
          "id": "astnode100010354",
          "name": "removeSemanticCell",
          "type": "ClassProperty"
        }
      },
      "description": "Remove the semantic cell from the graph, including its associated semantic chunks.",
      "params": [
        {
          "type": {
            "names": [
              "GraphNode"
            ]
          },
          "description": "The semantic cell node to remove.",
          "name": "cell"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          }
        }
      ],
      "name": "removeSemanticCell",
      "longname": "module:base/GraphSdk#removeSemanticCell",
      "kind": "member",
      "memberof": "module:base/GraphSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n * Healthcheck service.\r\n * @module base/ViewHealthcheckSdk\r\n * @version 0.1.0\r\n */",
      "meta": {
        "filename": "ViewHealthcheckSdk.js",
        "lineno": 3,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\HealthCheck",
        "code": {}
      },
      "description": "Healthcheck service.",
      "kind": "module",
      "name": "base/ViewHealthcheckSdk",
      "version": "0.1.0",
      "longname": "module:base/ViewHealthcheckSdk"
    },
    {
      "comment": "/**\r\n   * Constructs a new OrchestratorApi.\r\n   * @alias module:base/ViewHealthcheckSdk\r\n   * @class\r\n   * @param {string} tenantGuid - Tenant GUID.\r\n   * @param {string} accessKey - Access key.\r\n   * @param {string} endpoint - Endpoint URL .\r\n   */",
      "meta": {
        "range": [
          453,
          593
        ],
        "filename": "ViewHealthcheckSdk.js",
        "lineno": 17,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\HealthCheck",
        "code": {
          "id": "astnode100010468",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new OrchestratorApi.",
      "alias": "module:base/ViewHealthcheckSdk",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID.",
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key.",
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL .",
          "name": "endpoint"
        }
      ],
      "name": "module:base/ViewHealthcheckSdk",
      "longname": "module:base/ViewHealthcheckSdk"
    },
    {
      "comment": "/**\r\n   * check switchboard health.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          941,
          1083
        ],
        "filename": "ViewHealthcheckSdk.js",
        "lineno": 29,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\HealthCheck",
        "code": {
          "id": "astnode100010487",
          "name": "checkSwitchboardHealth",
          "type": "ClassProperty"
        }
      },
      "description": "check switchboard health.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "checkSwitchboardHealth",
      "longname": "module:base/ViewHealthcheckSdk#checkSwitchboardHealth",
      "kind": "member",
      "memberof": "module:base/ViewHealthcheckSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * check config health.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          1426,
          1581
        ],
        "filename": "ViewHealthcheckSdk.js",
        "lineno": 41,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\HealthCheck",
        "code": {
          "id": "astnode100010508",
          "name": "checkConfigHealth",
          "type": "ClassProperty"
        }
      },
      "description": "check config health.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "checkConfigHealth",
      "longname": "module:base/ViewHealthcheckSdk#checkConfigHealth",
      "kind": "member",
      "memberof": "module:base/ViewHealthcheckSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * check storage health.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          1925,
          2087
        ],
        "filename": "ViewHealthcheckSdk.js",
        "lineno": 53,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\HealthCheck",
        "code": {
          "id": "astnode100010529",
          "name": "checkStorageHealth",
          "type": "ClassProperty"
        }
      },
      "description": "check storage health.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "checkStorageHealth",
      "longname": "module:base/ViewHealthcheckSdk#checkStorageHealth",
      "kind": "member",
      "memberof": "module:base/ViewHealthcheckSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * check Vector health.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          2430,
          2585
        ],
        "filename": "ViewHealthcheckSdk.js",
        "lineno": 65,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\HealthCheck",
        "code": {
          "id": "astnode100010550",
          "name": "checkVectorHealth",
          "type": "ClassProperty"
        }
      },
      "description": "check Vector health.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "checkVectorHealth",
      "longname": "module:base/ViewHealthcheckSdk#checkVectorHealth",
      "kind": "member",
      "memberof": "module:base/ViewHealthcheckSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * check Processor health.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          2931,
          3092
        ],
        "filename": "ViewHealthcheckSdk.js",
        "lineno": 77,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\HealthCheck",
        "code": {
          "id": "astnode100010571",
          "name": "checkProcessorHealth",
          "type": "ClassProperty"
        }
      },
      "description": "check Processor health.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "checkProcessorHealth",
      "longname": "module:base/ViewHealthcheckSdk#checkProcessorHealth",
      "kind": "member",
      "memberof": "module:base/ViewHealthcheckSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * check Assistant health.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          3438,
          3599
        ],
        "filename": "ViewHealthcheckSdk.js",
        "lineno": 89,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\HealthCheck",
        "code": {
          "id": "astnode100010592",
          "name": "checkAssistantHealth",
          "type": "ClassProperty"
        }
      },
      "description": "check Assistant health.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "checkAssistantHealth",
      "longname": "module:base/ViewHealthcheckSdk#checkAssistantHealth",
      "kind": "member",
      "memberof": "module:base/ViewHealthcheckSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * check Orchestrator health.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          3948,
          4115
        ],
        "filename": "ViewHealthcheckSdk.js",
        "lineno": 101,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\HealthCheck",
        "code": {
          "id": "astnode100010613",
          "name": "checkOrchestratorHealth",
          "type": "ClassProperty"
        }
      },
      "description": "check Orchestrator health.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "checkOrchestratorHealth",
      "longname": "module:base/ViewHealthcheckSdk#checkOrchestratorHealth",
      "kind": "member",
      "memberof": "module:base/ViewHealthcheckSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * check Crawler health.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          4459,
          4616
        ],
        "filename": "ViewHealthcheckSdk.js",
        "lineno": 113,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\HealthCheck",
        "code": {
          "id": "astnode100010634",
          "name": "checkCrawlerHealth",
          "type": "ClassProperty"
        }
      },
      "description": "check Crawler health.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "checkCrawlerHealth",
      "longname": "module:base/ViewHealthcheckSdk#checkCrawlerHealth",
      "kind": "member",
      "memberof": "module:base/ViewHealthcheckSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * check Lexi health.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          4957,
          5108
        ],
        "filename": "ViewHealthcheckSdk.js",
        "lineno": 125,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\HealthCheck",
        "code": {
          "id": "astnode100010655",
          "name": "checkLexiHealth",
          "type": "ClassProperty"
        }
      },
      "description": "check Lexi health.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "checkLexiHealth",
      "longname": "module:base/ViewHealthcheckSdk#checkLexiHealth",
      "kind": "member",
      "memberof": "module:base/ViewHealthcheckSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * check Embeddings health.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          5455,
          5618
        ],
        "filename": "ViewHealthcheckSdk.js",
        "lineno": 137,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\HealthCheck",
        "code": {
          "id": "astnode100010676",
          "name": "checkEmbeddingsHealth",
          "type": "ClassProperty"
        }
      },
      "description": "check Embeddings health.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "checkEmbeddingsHealth",
      "longname": "module:base/ViewHealthcheckSdk#checkEmbeddingsHealth",
      "kind": "member",
      "memberof": "module:base/ViewHealthcheckSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * check Director health.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          5963,
          6122
        ],
        "filename": "ViewHealthcheckSdk.js",
        "lineno": 149,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\HealthCheck",
        "code": {
          "id": "astnode100010697",
          "name": "checkDirectorHealth",
          "type": "ClassProperty"
        }
      },
      "description": "check Director health.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "checkDirectorHealth",
      "longname": "module:base/ViewHealthcheckSdk#checkDirectorHealth",
      "kind": "member",
      "memberof": "module:base/ViewHealthcheckSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n * View Lexi SDK.\r\n * @module base/Lexi/ViewLexiSdk\r\n * @version 0.1.0\r\n */",
      "meta": {
        "filename": "ViewLexiSdk.js",
        "lineno": 11,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {}
      },
      "description": "View Lexi SDK.",
      "kind": "module",
      "name": "base/Lexi/ViewLexiSdk",
      "version": "0.1.0",
      "longname": "module:base/Lexi/ViewLexiSdk"
    },
    {
      "comment": "/**\r\n   * Constructs a new ViewLexiSdk instance.\r\n   * @alias module:base/ViewLexiSdk\r\n   * @class\r\n   * @param {string} tenantGuid - The GUID of the tenant.\r\n   * @param {string} accessKey - Access key for authentication.\r\n   * @param {string} endpoint - Endpoint URL.\r\n   */",
      "meta": {
        "range": [
          989,
          1085
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 25,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100010761",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new ViewLexiSdk instance.",
      "alias": "module:base/ViewLexiSdk",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tenant.",
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key for authentication.",
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL.",
          "name": "endpoint"
        }
      ],
      "name": "module:base/ViewLexiSdk",
      "longname": "module:base/ViewLexiSdk",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Retrieve collections.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<Collection>|null|ApiErrorResponse>} A promise resolving to an array of collections or null if not found.\r\n   * @throws {Error} If an error occurs during retrieval.\r\n   */",
      "meta": {
        "range": [
          1460,
          1665
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 38,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100010774",
          "name": "retrieveCollections",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve collections.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<Collection>|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of collections or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If an error occurs during retrieval."
        }
      ],
      "name": "retrieveCollections",
      "longname": "module:base/Lexi/ViewLexiSdk#retrieveCollections",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a single collection by GUID.\r\n   *\r\n   * @param {string} collectionGuid - The GUID of the collection to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Collection|null|ApiErrorResponse>} A promise that resolves to the retrieved collection, or null if not found.\r\n   * @throws {Error} If the collectionGuid is null or empty, or if an error occurs during retrieval.\r\n   */",
      "meta": {
        "range": [
          2150,
          2540
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 51,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100010801",
          "name": "retrieveCollection",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a single collection by GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection to retrieve.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Collection|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the retrieved collection, or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collectionGuid is null or empty, or if an error occurs during retrieval."
        }
      ],
      "name": "retrieveCollection",
      "longname": "module:base/Lexi/ViewLexiSdk#retrieveCollection",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve collection statistics.\r\n   *\r\n   * @param {string} collectionGuid - The collection GUID.\r\n   * @param {object} [cancelToken] - Optional object with an abort method to cancel the request.\r\n   * @returns {Promise<CollectionStatistics|ApiErrorResponse>} A promise resolving to collection statistics.\r\n   */",
      "meta": {
        "range": [
          2872,
          3249
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 67,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100010846",
          "name": "retrieveCollectionStatistics",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve collection statistics.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The collection GUID.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an abort method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(CollectionStatistics|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to collection statistics."
        }
      ],
      "name": "retrieveCollectionStatistics",
      "longname": "module:base/Lexi/ViewLexiSdk#retrieveCollectionStatistics",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a new collection.\r\n   *\r\n   * @param {Object} collection - Information about the collection.\r\n   * @param {number} collection.id - Collection ID.\r\n   * @param {string} collection.GUID - Collection GUID (automatically generated if not provided).\r\n   * @param {string} collection.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} collection.Name - Name of the collection.\r\n   * @param {boolean} collection.AllowOverwrites - Indicates whether source documents can be overwritten (default is true).\r\n   * @param {string} [collection.AdditionalData] - Additional data (optional).\r\n   * @param {Date} collection.CreatedUtc - Creation timestamp in UTC.\r\n   * @param {object} [cancelToken] - Optional object with an abort method to cancel the request.\r\n   * @returns {Promise<Collection|ApiErrorResponse>} A promise resolving to the created collection.\r\n   */",
      "meta": {
        "range": [
          4167,
          4491
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 89,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100010888",
          "name": "createCollection",
          "type": "ClassProperty"
        }
      },
      "description": "Create a new collection.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the collection.",
          "name": "collection"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Collection ID.",
          "name": "collection.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Collection GUID (automatically generated if not provided).",
          "name": "collection.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "collection.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the collection.",
          "name": "collection.Name"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates whether source documents can be overwritten (default is true).",
          "name": "collection.AllowOverwrites"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Additional data (optional).",
          "name": "collection.AdditionalData"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "collection.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an abort method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Collection|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created collection."
        }
      ],
      "name": "createCollection",
      "longname": "module:base/Lexi/ViewLexiSdk#createCollection",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a collection.\r\n   *\r\n   * @param {string} collectionGuid - The GUID of the collection to delete.\r\n   * @param {object} [cancelToken] - Optional object with an abort method to cancel the request.\r\n   * @returns {Promise<void|ApiErrorResponse>} A promise resolving when the collection is deleted.\r\n   */",
      "meta": {
        "range": [
          4819,
          5161
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 104,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100010927",
          "name": "deleteCollection",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a collection.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection to delete.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an abort method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(void|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving when the collection is deleted."
        }
      ],
      "name": "deleteCollection",
      "longname": "module:base/Lexi/ViewLexiSdk#deleteCollection",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve top terms.\r\n   *\r\n   * @param {string} collectionGuid - The collection GUID.\r\n   * @param {number} maxKeys - The maximum number of keys to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an abort method to cancel the request.\r\n   * @returns {Promise<Object|ApiErrorResponse>} A promise resolving to collection statistics.\r\n   * @throws {Error} If the collectionGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          5599,
          5973
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 120,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100010967",
          "name": "retrieveTopTerms",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve top terms.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The collection GUID.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The maximum number of keys to retrieve.",
          "name": "maxKeys"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an abort method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Object|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to collection statistics."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collectionGuid is null or empty."
        }
      ],
      "name": "retrieveTopTerms",
      "longname": "module:base/Lexi/ViewLexiSdk#retrieveTopTerms",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a collection exists.\r\n   * @param {string} collectionGuid - The GUID of the collection to check for existence.\r\n   * @param {Object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise that resolves to `true` if the collection exists, `false` if it does not, or an error response if the check fails.\r\n   * @throws {Error} If the collectionGuid argument is null or undefined.\r\n   */",
      "meta": {
        "range": [
          6468,
          6788
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 134,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011008",
          "name": "collectionExists",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a collection exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection to check for existence.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to `true` if the collection exists, `false` if it does not, or an error response if the check fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collectionGuid argument is null or undefined."
        }
      ],
      "name": "collectionExists",
      "longname": "module:base/Lexi/ViewLexiSdk#collectionExists",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve documents from a specified collection.\r\n   *\r\n   * @param {string} collectionGuid - The GUID of the collection to retrieve documents from.\r\n   * @param {object} [cancelToken] - Optional object with an abort method to cancel the request.\r\n   * @returns {Promise<SourceDocument[]|ApiErrorResponse>} A promise resolving to a list of source documents or an error response.\r\n   * @throws {Error} If the collectionGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          7300,
          7668
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 152,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011044",
          "name": "retrieveDocuments",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve documents from a specified collection.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection to retrieve documents from.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an abort method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<SourceDocument>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to a list of source documents or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collectionGuid is null or empty."
        }
      ],
      "name": "retrieveDocuments",
      "longname": "module:base/Lexi/ViewLexiSdk#retrieveDocuments",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a specific document from a collection.\r\n   *\r\n   * @param {string} collectionGuid - The GUID of the collection to retrieve the document from.\r\n   * @param {string} documentGuid - The GUID of the document to retrieve.\r\n   * @param {boolean} [includeData=false] - Flag to indicate whether or not to include document data.\r\n   * @param {object} [cancelToken] - Optional object with an abort method to cancel the request.\r\n   * @returns {Promise<SourceDocument|ApiErrorResponse>} A promise resolving to the source document or an error response.\r\n   * @throws {Error} If the collectionGuid or documentGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          8322,
          8953
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 170,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011086",
          "name": "retrieveDocument",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a specific document from a collection.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection to retrieve the document from.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the document to retrieve.",
          "name": "documentGuid"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "optional": true,
          "defaultvalue": false,
          "description": "Flag to indicate whether or not to include document data.",
          "name": "includeData"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an abort method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(SourceDocument|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the source document or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collectionGuid or documentGuid is null or empty."
        }
      ],
      "name": "retrieveDocument",
      "longname": "module:base/Lexi/ViewLexiSdk#retrieveDocument",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve statistics for a specific document in a collection.\r\n   *\r\n   * @param {string} collectionGuid - The GUID of the collection.\r\n   * @param {string} documentGuid - The GUID of the document.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<SourceDocumentStatistics|ApiErrorResponse>} A promise resolving to source document statistics or an error response.\r\n   * @throws {Error} If the collectionGuid or documentGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          9482,
          10074
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 202,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011151",
          "name": "retrieveDocumentStatistics",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve statistics for a specific document in a collection.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the document.",
          "name": "documentGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(SourceDocumentStatistics|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to source document statistics or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collectionGuid or documentGuid is null or empty."
        }
      ],
      "name": "retrieveDocumentStatistics",
      "longname": "module:base/Lexi/ViewLexiSdk#retrieveDocumentStatistics",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Upload a source document to a collection.\r\n   *\r\n   * @param {Object} document - Information about the source document.\r\n   * @param {string} document.GUID - The unique identifier for the document.\r\n   * @param {string} document.TenantGUID - The tenant's unique identifier.\r\n   * @param {string|null} document.BucketGUID - The bucket's unique identifier.\r\n   * @param {string} document.CollectionGUID - The collection's unique identifier.\r\n   * @param {string} document.ObjectGUID - The object's unique identifier.\r\n   * @param {string|null} document.DataFlowRequestGUID - The data flow request unique identifier.\r\n   * @param {string|null} document.GraphRepositoryGUID - The graph repository unique identifier.\r\n   * @param {string|null} document.GraphNodeIdentifier - The identifier for the graph node.\r\n   * @param {string|null} document.DataRepositoryGUID - The data repository unique identifier.\r\n   * @param {string|null} document.ObjectKey - The key for the object.\r\n   * @param {string} document.ObjectVersion - The version of the object.\r\n   * @param {string} document.ContentType - The content type of the document.\r\n   * @param {DocumentTypeEnum} document.DocumentType - The type of the document.\r\n   * @param {string|null} document.SourceUrl - The source URL of the document.\r\n   * @param {number} document.ContentLength - The length of the content.\r\n   * @param {string} document.MD5Hash - The MD5 hash of the document.\r\n   * @param {string|null} document.SHA1Hash - The SHA1 hash of the document.\r\n   * @param {string|null} document.SHA256Hash - The SHA256 hash of the document.\r\n   * @param {Date} document.CreatedUtc - The creation timestamp in UTC.\r\n   * @param {Date|null} document.ExpirationUtc - The expiration timestamp in UTC, if any.\r\n   * @param {DocumentScore|null} document.Score - The score of the document.\r\n   * @param {UdrDocument|null} document.UdrDocument - The UDR document associated with the source document.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<SourceDocument|ApiErrorResponse>} A promise resolving to the uploaded document or an error response.\r\n   * @throws {Error} If the document is null.\r\n   */",
      "meta": {
        "range": [
          12304,
          12675
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 253,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011208",
          "name": "uploadDocument",
          "type": "ClassProperty"
        }
      },
      "description": "Upload a source document to a collection.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the source document.",
          "name": "document"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The unique identifier for the document.",
          "name": "document.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The tenant's unique identifier.",
          "name": "document.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "The bucket's unique identifier.",
          "name": "document.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The collection's unique identifier.",
          "name": "document.CollectionGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The object's unique identifier.",
          "name": "document.ObjectGUID"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "The data flow request unique identifier.",
          "name": "document.DataFlowRequestGUID"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "The graph repository unique identifier.",
          "name": "document.GraphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "The identifier for the graph node.",
          "name": "document.GraphNodeIdentifier"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "The data repository unique identifier.",
          "name": "document.DataRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "The key for the object.",
          "name": "document.ObjectKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The version of the object.",
          "name": "document.ObjectVersion"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The content type of the document.",
          "name": "document.ContentType"
        },
        {
          "type": {
            "names": [
              "DocumentTypeEnum"
            ]
          },
          "description": "The type of the document.",
          "name": "document.DocumentType"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "The source URL of the document.",
          "name": "document.SourceUrl"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The length of the content.",
          "name": "document.ContentLength"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The MD5 hash of the document.",
          "name": "document.MD5Hash"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "The SHA1 hash of the document.",
          "name": "document.SHA1Hash"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "The SHA256 hash of the document.",
          "name": "document.SHA256Hash"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "The creation timestamp in UTC.",
          "name": "document.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Date",
              "null"
            ]
          },
          "description": "The expiration timestamp in UTC, if any.",
          "name": "document.ExpirationUtc"
        },
        {
          "type": {
            "names": [
              "DocumentScore",
              "null"
            ]
          },
          "description": "The score of the document.",
          "name": "document.Score"
        },
        {
          "type": {
            "names": [
              "UdrDocument",
              "null"
            ]
          },
          "description": "The UDR document associated with the source document.",
          "name": "document.UdrDocument"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(SourceDocument|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the uploaded document or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the document is null."
        }
      ],
      "name": "uploadDocument",
      "longname": "module:base/Lexi/ViewLexiSdk#uploadDocument",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Deletes a document from a collection.\r\n   *\r\n   * @param {string} collectionGuid - The collection GUID.\r\n   * @param {string} documentGuid - The document GUID.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<void>} A promise that resolves when the document is deleted.\r\n   * @throws {Error} If either `collectionGuid` or `documentGuid` is empty or null.\r\n   */",
      "meta": {
        "range": [
          13119,
          13654
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 273,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011253",
          "name": "deleteDocument",
          "type": "ClassProperty"
        }
      },
      "description": "Deletes a document from a collection.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The collection GUID.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The document GUID.",
          "name": "documentGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the document is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If either `collectionGuid` or `documentGuid` is empty or null."
        }
      ],
      "name": "deleteDocument",
      "longname": "module:base/Lexi/ViewLexiSdk#deleteDocument",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Deletes a document from a collection using its key and version.\r\n   *\r\n   * @param {string} collectionGuid - The collection GUID.\r\n   * @param {string} key - The document key.\r\n   * @param {string} version - The document version.\r\n   * @param {object} [cancelToken] - Optional cancellation token to abort the request.\r\n   * @returns {Promise<void>} A promise that resolves when the document is deleted.\r\n   * @throws {Error} If any of the parameters (`collectionGuid`, `key`, `version`) are empty or null.\r\n   */",
      "meta": {
        "range": [
          14186,
          14845
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 302,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011307",
          "name": "deleteDocumentFromKey",
          "type": "ClassProperty"
        }
      },
      "description": "Deletes a document from a collection using its key and version.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The collection GUID.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The document key.",
          "name": "key"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The document version.",
          "name": "version"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the document is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If any of the parameters (`collectionGuid`, `key`, `version`) are empty or null."
        }
      ],
      "name": "deleteDocumentFromKey",
      "longname": "module:base/Lexi/ViewLexiSdk#deleteDocumentFromKey",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a source documents exists.\r\n   * @param {string} collectionGuid - The collection GUID.\r\n   * @param {string} documentGuid - The document GUID.\r\n   * @param {Object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise that resolves to `true` if the collection exists, `false` if it does not, or an error response if the check fails.\r\n   * @throws {Error} If the collectionGuid argument is null or undefined or If the documentGuid argument is null or undefined.\r\n   */",
      "meta": {
        "range": [
          15425,
          15905
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 334,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011376",
          "name": "sourceDocumentsExists",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a source documents exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The collection GUID.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The document GUID.",
          "name": "documentGuid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to `true` if the collection exists, `false` if it does not, or an error response if the check fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collectionGuid argument is null or undefined or If the documentGuid argument is null or undefined."
        }
      ],
      "name": "sourceDocumentsExists",
      "longname": "module:base/Lexi/ViewLexiSdk#sourceDocumentsExists",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate a collection.\r\n   *\r\n   * @param {string} collectionGuid - The GUID of the collection to enumerate.\r\n   * @param {Object} query - The query to use for enumeration.\r\n   * @property {number} query.timestamp - The timestamp for the enumeration query.\r\n   * @property {TenantMetadata|null} query.tenant - Metadata for the tenant.\r\n   * @property {string} query.tenantGuid - GUID for the tenant.\r\n   * @property {BucketMetadata|null} query.bucket - Metadata for the bucket.\r\n   * @property {string} query.bucketGuid - GUID for the bucket.\r\n   * @property {Collection|null} query.collection - Collection information.\r\n   * @property {string} query.collectionGuid - GUID for the collection.\r\n   * @property {SourceDocument|null} query.sourceDocument - Information about the source document.\r\n   * @property {string} query.sourceDocumentGuid - GUID for the source document.\r\n   * @property {VectorRepository|null} query.vectorRepository - Information about the vector repository.\r\n   * @property {string} query.vectorRepositoryGuid - GUID for the vector repository.\r\n   * @property {GraphRepository|null} query.graphRepository - Information about the graph repository.\r\n   * @property {string} query.graphRepositoryGuid - GUID for the graph repository.\r\n   * @property {string} query.graphNodeIdentifier - Identifier for the graph node.\r\n   * @property {number} query.maxResults - Maximum number of results to retrieve.\r\n   * @property {string|null} query.continuationToken - Token for continuation in results.\r\n   * @property {string|null} query.prefix - Prefix to filter results.\r\n   * @property {string|null} query.suffix - Suffix to filter results.\r\n   * @property {string|null} query.marker - Marker for pagination.\r\n   * @property {string} query.delimiter - Delimiter for separating values.\r\n   * @property {string} query.token - Token for authorization.\r\n   * @property {boolean} query.includeData - Flag to include subordinate data.\r\n   * @property {boolean} query.includeOwners - Flag to include owners (default: true for S3 compatibility).\r\n   * @property {Array<SearchFilter>} query.filters - Search filters to apply.\r\n   * @property {EnumerationOrderEnum} query.ordering - Ordering for the enumeration results.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult<SourceDocument>|null|ApiErrorResponse>} The enumeration result or null if the request fails.\r\n   * @throws {Error} If the collectionGuid or query is null or empty.\r\n   */",
      "meta": {
        "range": [
          19610,
          20102
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 399,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011424",
          "name": "enumerateCollection",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate a collection.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection to enumerate.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The query to use for enumeration.",
          "name": "query"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "properties": [
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The timestamp for the enumeration query.",
          "name": "query.timestamp"
        },
        {
          "type": {
            "names": [
              "TenantMetadata",
              "null"
            ]
          },
          "description": "Metadata for the tenant.",
          "name": "query.tenant"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the tenant.",
          "name": "query.tenantGuid"
        },
        {
          "type": {
            "names": [
              "BucketMetadata",
              "null"
            ]
          },
          "description": "Metadata for the bucket.",
          "name": "query.bucket"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the bucket.",
          "name": "query.bucketGuid"
        },
        {
          "type": {
            "names": [
              "Collection",
              "null"
            ]
          },
          "description": "Collection information.",
          "name": "query.collection"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the collection.",
          "name": "query.collectionGuid"
        },
        {
          "type": {
            "names": [
              "SourceDocument",
              "null"
            ]
          },
          "description": "Information about the source document.",
          "name": "query.sourceDocument"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the source document.",
          "name": "query.sourceDocumentGuid"
        },
        {
          "type": {
            "names": [
              "VectorRepository",
              "null"
            ]
          },
          "description": "Information about the vector repository.",
          "name": "query.vectorRepository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the vector repository.",
          "name": "query.vectorRepositoryGuid"
        },
        {
          "type": {
            "names": [
              "GraphRepository",
              "null"
            ]
          },
          "description": "Information about the graph repository.",
          "name": "query.graphRepository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the graph repository.",
          "name": "query.graphRepositoryGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Identifier for the graph node.",
          "name": "query.graphNodeIdentifier"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of results to retrieve.",
          "name": "query.maxResults"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "Token for continuation in results.",
          "name": "query.continuationToken"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "Prefix to filter results.",
          "name": "query.prefix"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "Suffix to filter results.",
          "name": "query.suffix"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "Marker for pagination.",
          "name": "query.marker"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Delimiter for separating values.",
          "name": "query.delimiter"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Token for authorization.",
          "name": "query.token"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Flag to include subordinate data.",
          "name": "query.includeData"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Flag to include owners (default: true for S3 compatibility).",
          "name": "query.includeOwners"
        },
        {
          "type": {
            "names": [
              "Array.<SearchFilter>"
            ]
          },
          "description": "Search filters to apply.",
          "name": "query.filters"
        },
        {
          "type": {
            "names": [
              "EnumerationOrderEnum"
            ]
          },
          "description": "Ordering for the enumeration results.",
          "name": "query.ordering"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult.<SourceDocument>|null|ApiErrorResponse)>"
            ]
          },
          "description": "The enumeration result or null if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collectionGuid or query is null or empty."
        }
      ],
      "name": "enumerateCollection",
      "longname": "module:base/Lexi/ViewLexiSdk#enumerateCollection",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Search a collection.\r\n   *\r\n   * @param {string} collectionGuid - The GUID of the collection to search.\r\n   * @param {Object} query - The query to use for searching.\r\n   * @property {string} query.guid - The GUID of the search operation.\r\n   * @property {string} query.tenantGuid - The tenant GUID.\r\n   * @property {string} query.collectionGuid - The collection GUID.\r\n   * @property {number} query.maxResults - Maximum number of results to retrieve.\r\n   * @property {string} query.continuationToken - Token for continuation in results.\r\n   * @property {EnumerationOrderEnum} query.ordering - Ordering for the search results.\r\n   * @property {QueryFilter} query.filter - Required terms and search filters for including a document in the results.\r\n   * @property {EmbeddingsRule} query.embeddingsRule - Rule for embeddings.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<SearchResult|null|ApiErrorResponse>} The search result or null if the request fails.\r\n   * @throws {Error} If the collectionGuid or query is null or empty.\r\n   */",
      "meta": {
        "range": [
          21271,
          21877
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 432,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011478",
          "name": "searchCollection",
          "type": "ClassProperty"
        }
      },
      "description": "Search a collection.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection to search.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The query to use for searching.",
          "name": "query"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "properties": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the search operation.",
          "name": "query.guid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The tenant GUID.",
          "name": "query.tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The collection GUID.",
          "name": "query.collectionGuid"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of results to retrieve.",
          "name": "query.maxResults"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Token for continuation in results.",
          "name": "query.continuationToken"
        },
        {
          "type": {
            "names": [
              "EnumerationOrderEnum"
            ]
          },
          "description": "Ordering for the search results.",
          "name": "query.ordering"
        },
        {
          "type": {
            "names": [
              "QueryFilter"
            ]
          },
          "description": "Required terms and search filters for including a document in the results.",
          "name": "query.filter"
        },
        {
          "type": {
            "names": [
              "EmbeddingsRule"
            ]
          },
          "description": "Rule for embeddings.",
          "name": "query.embeddingsRule"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(SearchResult|null|ApiErrorResponse)>"
            ]
          },
          "description": "The search result or null if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collectionGuid or query is null or empty."
        }
      ],
      "name": "searchCollection",
      "longname": "module:base/Lexi/ViewLexiSdk#searchCollection",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieves all ingest queue.\r\n   * @param {Object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<IngestQueue[]|ApiErrorResponse>} A promise that resolves to an array of items in the ingest queue or an error response if the retrieval fails.\r\n   */",
      "meta": {
        "range": [
          22242,
          22446
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 458,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011548",
          "name": "retrieveAllIngestQueue",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieves all ingest queue.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<IngestQueue>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to an array of items in the ingest queue or an error response if the retrieval fails."
        }
      ],
      "name": "retrieveAllIngestQueue",
      "longname": "module:base/Lexi/ViewLexiSdk#retrieveAllIngestQueue",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieves a specific item from the ingest queue.\r\n   * @param {string} collectionGuid - The GUID of the item to retrieve.\r\n   * @param {Object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<IngestQueue|ApiErrorResponse>} A promise that resolves to the requested item or an error response if the retrieval fails.\r\n   */",
      "meta": {
        "range": [
          22840,
          23172
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 469,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011574",
          "name": "retrieveIngestQueue",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieves a specific item from the ingest queue.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the item to retrieve.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(IngestQueue|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the requested item or an error response if the retrieval fails."
        }
      ],
      "name": "retrieveIngestQueue",
      "longname": "module:base/Lexi/ViewLexiSdk#retrieveIngestQueue",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Checks if a specific item exists in the ingest queue.\r\n   * @param {string} collectionGuid - The GUID of the item to check.\r\n   * @param {Object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise that resolves to `true` if the item exists, `false` if it does not, or an error response if the check fails.\r\n   * @throws {Error} If the collectionGuid argument is null or undefined.\r\n   */",
      "meta": {
        "range": [
          23667,
          24012
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 484,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011611",
          "name": "ingestQueueItemExists",
          "type": "ClassProperty"
        }
      },
      "description": "Checks if a specific item exists in the ingest queue.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the item to check.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to `true` if the item exists, `false` if it does not, or an error response if the check fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collectionGuid argument is null or undefined."
        }
      ],
      "name": "ingestQueueItemExists",
      "longname": "module:base/Lexi/ViewLexiSdk#ingestQueueItemExists",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieves statistics for the ingest queue.\r\n   * @param {Object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<IngestQueue|ApiErrorResponse>} A promise that resolves to the statistics of the ingest queue or an error response if the retrieval fails.\r\n   */",
      "meta": {
        "range": [
          24343,
          24551
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 498,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011650",
          "name": "retrieveIngestQueueStats",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieves statistics for the ingest queue.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(IngestQueue|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to the statistics of the ingest queue or an error response if the retrieval fails."
        }
      ],
      "name": "retrieveIngestQueueStats",
      "longname": "module:base/Lexi/ViewLexiSdk#retrieveIngestQueueStats",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Deletes a specific item from the ingest queue.\r\n   * @param {string} collectionGuid - The GUID of the item to delete.\r\n   * @param {Object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise that resolves to `true` if the deletion was successful, or an error response if it failed.\r\n   * @throws {Error} If the collectionGuid argument is null or undefined.\r\n   */",
      "meta": {
        "range": [
          25022,
          25355
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 510,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011676",
          "name": "deleteIngestQueueItem",
          "type": "ClassProperty"
        }
      },
      "description": "Deletes a specific item from the ingest queue.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the item to delete.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves to `true` if the deletion was successful, or an error response if it failed."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collectionGuid argument is null or undefined."
        }
      ],
      "name": "deleteIngestQueueItem",
      "longname": "module:base/Lexi/ViewLexiSdk#deleteIngestQueueItem",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate collection.\r\n   *\r\n   * @param {string} collectionGuid - The GUID of the collection to enumerate.\r\n   * @param {Object} query - The query parameters for enumeration.\r\n   * @param {boolean} [query.search] - Flag to indicate if a search should be performed.\r\n   * @param {boolean} [query.includeData] - Flag to include subordinate data.\r\n   * @param {boolean} [query.async] - Flag to indicate if the request should be asynchronous.\r\n   * @param {Object} searchData - The body of the request containing search and enumeration parameters.\r\n   * @param {number} searchData.MaxResults - The maximum number of results to retrieve.\r\n   * @param {number} searchData.Skip - The number of results to skip.\r\n   * @param {string} searchData.ContinuationToken - Token for continuation in results.\r\n   * @param {string} searchData.Ordering - Ordering for the search results.\r\n   * @param {Object} searchData.EmbeddingsRule - The embeddings rule for processing.\r\n   * @param {Array<Object>} searchData.Filters - Filters to apply for the search.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult<SourceDocument>|null|ApiErrorResponse>} The enumeration result or null if the request fails.\r\n   * @throws {Error} If the collectionGuid or query is null or empty.\r\n   */",
      "meta": {
        "range": [
          26778,
          27626
        ],
        "filename": "ViewLexiSdk.js",
        "lineno": 540,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi",
        "code": {
          "id": "astnode100011714",
          "name": "searchAndEnumerate",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate collection.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection to enumerate.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The query parameters for enumeration.",
          "name": "query"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "optional": true,
          "description": "Flag to indicate if a search should be performed.",
          "name": "query.search"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "optional": true,
          "description": "Flag to include subordinate data.",
          "name": "query.includeData"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "optional": true,
          "description": "Flag to indicate if the request should be asynchronous.",
          "name": "query.async"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The body of the request containing search and enumeration parameters.",
          "name": "searchData"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The maximum number of results to retrieve.",
          "name": "searchData.MaxResults"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The number of results to skip.",
          "name": "searchData.Skip"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Token for continuation in results.",
          "name": "searchData.ContinuationToken"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Ordering for the search results.",
          "name": "searchData.Ordering"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The embeddings rule for processing.",
          "name": "searchData.EmbeddingsRule"
        },
        {
          "type": {
            "names": [
              "Array.<Object>"
            ]
          },
          "description": "Filters to apply for the search.",
          "name": "searchData.Filters"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult.<SourceDocument>|null|ApiErrorResponse)>"
            ]
          },
          "description": "The enumeration result or null if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collectionGuid or query is null or empty."
        }
      ],
      "name": "searchAndEnumerate",
      "longname": "module:base/Lexi/ViewLexiSdk#searchAndEnumerate",
      "kind": "member",
      "memberof": "module:base/Lexi/ViewLexiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n * Orchestrator service.\r\n * @module base/ViewOrchestratorSdk\r\n * @version 0.1.0\r\n */",
      "meta": {
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 8,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {}
      },
      "description": "Orchestrator service.",
      "kind": "module",
      "name": "base/ViewOrchestratorSdk",
      "version": "0.1.0",
      "longname": "module:base/ViewOrchestratorSdk"
    },
    {
      "comment": "/**\r\n   * Constructs a new OrchestratorApi.\r\n   * @alias module:base/ViewOrchestratorSdk\r\n   * @class\r\n   * @param {string} tenantGuid - Tenant GUID.\r\n   * @param {string} accessKey - Access key.\r\n   * @param {string} endpoint - Endpoint URL .\r\n   */",
      "meta": {
        "range": [
          748,
          889
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 22,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100011862",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new OrchestratorApi.",
      "alias": "module:base/ViewOrchestratorSdk",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID.",
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key.",
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL .",
          "name": "endpoint"
        }
      ],
      "name": "module:base/ViewOrchestratorSdk",
      "longname": "module:base/ViewOrchestratorSdk"
    },
    {
      "comment": "/**\r\n   * Create a trigger.\r\n   *\r\n   * @param {Object} trigger - The trigger object to create.\r\n   * @param {string} trigger.id - The ID of the trigger.\r\n   * @param {string} trigger.name - The name of the trigger.\r\n   * @param {string} trigger.type - The type of the trigger.\r\n   * @param {string} trigger.configuration - Configuration details of the trigger.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Trigger|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          1579,
          1879
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 40,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100011881",
          "name": "createTrigger",
          "type": "ClassProperty"
        }
      },
      "description": "Create a trigger.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The trigger object to create.",
          "name": "trigger"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The ID of the trigger.",
          "name": "trigger.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The name of the trigger.",
          "name": "trigger.name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The type of the trigger.",
          "name": "trigger.type"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Configuration details of the trigger.",
          "name": "trigger.configuration"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Trigger|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "createTrigger",
      "longname": "module:base/ViewOrchestratorSdk#createTrigger",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a trigger exists.\r\n   *\r\n   * @param {string} guid - The GUID of the trigger.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the trigger exists, `false` otherwise.\r\n   * @throws {Error} If the `guid` is null or empty.\r\n   */",
      "meta": {
        "range": [
          2252,
          2533
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 57,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100011919",
          "name": "existsTrigger",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a trigger exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the trigger.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the trigger exists, `false` otherwise."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the `guid` is null or empty."
        }
      ],
      "name": "existsTrigger",
      "longname": "module:base/ViewOrchestratorSdk#existsTrigger",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a trigger.\r\n   *\r\n   * @param {string} guid - The GUID of the trigger.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Trigger|null|ApiErrorResponse>} A promise resolving to the retrieved Trigger object or null if not found.\r\n   * @throws {Error} If the `guid` is null or empty.\r\n   */",
      "meta": {
        "range": [
          2917,
          3211
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 73,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100011957",
          "name": "retrieveTrigger",
          "type": "ClassProperty"
        }
      },
      "description": "Read a trigger.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the trigger.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Trigger|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the retrieved Trigger object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the `guid` is null or empty."
        }
      ],
      "name": "retrieveTrigger",
      "longname": "module:base/ViewOrchestratorSdk#retrieveTrigger",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read triggers.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<Trigger>|ApiErrorResponse>} A promise resolving to an array of Trigger objects or an error response.\r\n   */",
      "meta": {
        "range": [
          3487,
          3678
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 87,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100011996",
          "name": "retrieveTriggers",
          "type": "ClassProperty"
        }
      },
      "description": "Read triggers.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<Trigger>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of Trigger objects or an error response."
        }
      ],
      "name": "retrieveTriggers",
      "longname": "module:base/ViewOrchestratorSdk#retrieveTriggers",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update a trigger.\r\n   *\r\n   * @param {Object} trigger - The trigger object to update.\r\n   * @param {string} trigger.GUID - The GUID of the trigger.\r\n   * @param {string} trigger.TenantGUID - The Tenant GUID.\r\n   * @param {string} trigger.Name - The name of the trigger.\r\n   * @param {string} trigger.HttpUrlPrefix - The HTTP relative URL prefix.\r\n   * @param {string} trigger.Notes - Notes associated with the trigger.\r\n   * @param {string} trigger.TriggerType - The type of the trigger.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Trigger|null|ApiErrorResponse>} A promise resolving to the updated Trigger object or an error response.\r\n   * @throws {Error} If the trigger is null.\r\n   */",
      "meta": {
        "range": [
          4464,
          4780
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 105,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012022",
          "name": "updateTrigger",
          "type": "ClassProperty"
        }
      },
      "description": "Update a trigger.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The trigger object to update.",
          "name": "trigger"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the trigger.",
          "name": "trigger.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The Tenant GUID.",
          "name": "trigger.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The name of the trigger.",
          "name": "trigger.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The HTTP relative URL prefix.",
          "name": "trigger.HttpUrlPrefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Notes associated with the trigger.",
          "name": "trigger.Notes"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The type of the trigger.",
          "name": "trigger.TriggerType"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Trigger|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the updated Trigger object or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null."
        }
      ],
      "name": "updateTrigger",
      "longname": "module:base/ViewOrchestratorSdk#updateTrigger",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a trigger.\r\n   *\r\n   * @param {string} guid - The GUID of the trigger to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void>} A promise that resolves when the trigger is deleted.\r\n   * @throws {Error} If the `guid` is null or empty.\r\n   */",
      "meta": {
        "range": [
          5130,
          5413
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 121,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012064",
          "name": "deleteTrigger",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a trigger.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the trigger to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the trigger is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the `guid` is null or empty."
        }
      ],
      "name": "deleteTrigger",
      "longname": "module:base/ViewOrchestratorSdk#deleteTrigger",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a step.\r\n   *\r\n   * @param {Object} step - The step object to create.\r\n   * @param {string} step.GUID - The GUID of the step.\r\n   * @param {string} step.TenantGUID - The Tenant GUID.\r\n   * @param {string} step.Name - The name of the step.\r\n   * @param {string} step.Description - The description of the step.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<StepMetadata|null|ApiErrorResponse>} A promise resolving to the created StepMetadata object or an error response.\r\n   * @throws {Error} If the `step` is null or invalid.\r\n   */",
      "meta": {
        "range": [
          6084,
          6371
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 145,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012103",
          "name": "createStep",
          "type": "ClassProperty"
        }
      },
      "description": "Create a step.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The step object to create.",
          "name": "step"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the step.",
          "name": "step.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The Tenant GUID.",
          "name": "step.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The name of the step.",
          "name": "step.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The description of the step.",
          "name": "step.Description"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(StepMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created StepMetadata object or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the `step` is null or invalid."
        }
      ],
      "name": "createStep",
      "longname": "module:base/ViewOrchestratorSdk#createStep",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a step exists.\r\n   *\r\n   * @param {string} guid - The GUID of the step.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise resolving to `true` if the step exists, or an error response.\r\n   * @throws {Error} If the `guid` is null or empty.\r\n   */",
      "meta": {
        "range": [
          6755,
          7030
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 162,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012141",
          "name": "existsStep",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a step exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the step.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to `true` if the step exists, or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the `guid` is null or empty."
        }
      ],
      "name": "existsStep",
      "longname": "module:base/ViewOrchestratorSdk#existsStep",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a step.\r\n   *\r\n   * @param {string} guid - The GUID of the step.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<StepMetadata|null|ApiErrorResponse>} A promise resolving to the retrieved StepMetadata object, or an error response if not found.\r\n   * @throws {Error} If the `guid` is null or empty.\r\n   */",
      "meta": {
        "range": [
          7434,
          7727
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 179,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012179",
          "name": "retrieveStep",
          "type": "ClassProperty"
        }
      },
      "description": "Read a step.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the step.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(StepMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the retrieved StepMetadata object, or an error response if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the `guid` is null or empty."
        }
      ],
      "name": "retrieveStep",
      "longname": "module:base/ViewOrchestratorSdk#retrieveStep",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read steps.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<StepMetadata>|ApiErrorResponse>} A promise resolving to an array of StepMetadata objects, or an error response.\r\n   */",
      "meta": {
        "range": [
          8011,
          8201
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 193,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012218",
          "name": "retrieveSteps",
          "type": "ClassProperty"
        }
      },
      "description": "Read steps.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<StepMetadata>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of StepMetadata objects, or an error response."
        }
      ],
      "name": "retrieveSteps",
      "longname": "module:base/ViewOrchestratorSdk#retrieveSteps",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve by GUID with subordinates and packages .\r\n   * @param {string} guid - The GUID of the step.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<StepMetadata>|ApiErrorResponse} A promise resolving to an array of StepMetadata objects, or an error response.\r\n   */",
      "meta": {
        "range": [
          8561,
          8898
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 203,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012244",
          "name": "retrievebyGUIDwithsubordinatesAndpackages",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve by GUID with subordinates and packages .",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the step.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<StepMetadata>",
              "ApiErrorResponse"
            ]
          },
          "description": "A promise resolving to an array of StepMetadata objects, or an error response."
        }
      ],
      "name": "retrievebyGUIDwithsubordinatesAndpackages",
      "longname": "module:base/ViewOrchestratorSdk#retrievebyGUIDwithsubordinatesAndpackages",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a step.\r\n   *\r\n   * @param {string} guid - The GUID of the step to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void>} A promise that resolves when the step is deleted.\r\n   * @throws {Error} If the `guid` is null or empty.\r\n   */",
      "meta": {
        "range": [
          9239,
          9521
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 218,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012283",
          "name": "deleteStep",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a step.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the step to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the step is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the `guid` is null or empty."
        }
      ],
      "name": "deleteStep",
      "longname": "module:base/ViewOrchestratorSdk#deleteStep",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a data flow.\r\n   *\r\n   * @param {Object} flow - The data flow object to create.\r\n   * @param {string} flow.GUID - The GUID of the data flow.\r\n   * @param {string} flow.TenantGUID - The Tenant GUID.\r\n   * @param {string} flow.Name - The name of the data flow.\r\n   * @param {string} flow.Description - The description of the data flow.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<DataFlow|null|ApiErrorResponse>} A promise resolving to the created DataFlow object, or an error response.\r\n   * @throws {Error} If the `flow` is null or invalid.\r\n   */",
      "meta": {
        "range": [
          10212,
          10503
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 241,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012322",
          "name": "createDataFlow",
          "type": "ClassProperty"
        }
      },
      "description": "Create a data flow.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The data flow object to create.",
          "name": "flow"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data flow.",
          "name": "flow.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The Tenant GUID.",
          "name": "flow.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The name of the data flow.",
          "name": "flow.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The description of the data flow.",
          "name": "flow.Description"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(DataFlow|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created DataFlow object, or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the `flow` is null or invalid."
        }
      ],
      "name": "createDataFlow",
      "longname": "module:base/ViewOrchestratorSdk#createDataFlow",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a data flow exists.\r\n   *\r\n   * @param {string} guid - The GUID of the data flow to check.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to `true` if the data flow exists, otherwise `false`.\r\n   * @throws {Error} If the `guid` is null or empty.\r\n   */",
      "meta": {
        "range": [
          10889,
          11149
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 257,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012360",
          "name": "existsDataFlow",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a data flow exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data flow to check.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to `true` if the data flow exists, otherwise `false`."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the `guid` is null or empty."
        }
      ],
      "name": "existsDataFlow",
      "longname": "module:base/ViewOrchestratorSdk#existsDataFlow",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a data flow.\r\n   *\r\n   * @param {string} guid - The GUID of the data flow to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<DataFlow|null|ApiErrorResponse>} A promise resolving to the retrieved DataFlow object, or an error response.\r\n   * @throws {Error} If the `guid` is null or empty.\r\n   */",
      "meta": {
        "range": [
          11552,
          11826
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 273,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012396",
          "name": "retrieveDataFlow",
          "type": "ClassProperty"
        }
      },
      "description": "Read a data flow.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data flow to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(DataFlow|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the retrieved DataFlow object, or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the `guid` is null or empty."
        }
      ],
      "name": "retrieveDataFlow",
      "longname": "module:base/ViewOrchestratorSdk#retrieveDataFlow",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read data flows.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<DataFlow>|ApiErrorResponse>} A promise resolving to an array of DataFlow objects, or an error response.\r\n   */",
      "meta": {
        "range": [
          12107,
          12301
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 287,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012433",
          "name": "retrieveDataFlows",
          "type": "ClassProperty"
        }
      },
      "description": "Read data flows.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<DataFlow>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of DataFlow objects, or an error response."
        }
      ],
      "name": "retrieveDataFlows",
      "longname": "module:base/ViewOrchestratorSdk#retrieveDataFlows",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve by GUID with steps.\r\n   * @param {string} guid - The GUID of the data flow to performance.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<DataFlow>|ApiErrorResponse>} A promise resolving to an array of DataFlow objects, or an error response.\r\n   */",
      "meta": {
        "range": [
          12659,
          12946
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 297,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012459",
          "name": "retrieveByGUIDWithSteps",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve by GUID with steps.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data flow to performance.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<DataFlow>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of DataFlow objects, or an error response."
        }
      ],
      "name": "retrieveByGUIDWithSteps",
      "longname": "module:base/ViewOrchestratorSdk#retrieveByGUIDWithSteps",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   *Retrieve request performance data.\r\n   * @param {string} guid - The GUID of the data flow to performance.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<DataFlow>|ApiErrorResponse} A promise resolving to an array of DataFlow objects, or an error response.\r\n   */",
      "meta": {
        "range": [
          13302,
          13618
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 310,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012496",
          "name": "retrieveRequestPerformanceData",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve request performance data.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data flow to performance.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<DataFlow>",
              "ApiErrorResponse"
            ]
          },
          "description": "A promise resolving to an array of DataFlow objects, or an error response."
        }
      ],
      "name": "retrieveRequestPerformanceData",
      "longname": "module:base/ViewOrchestratorSdk#retrieveRequestPerformanceData",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a data flow.\r\n   *\r\n   * @param {string} guid - The GUID of the data flow to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void|ApiErrorResponse>} A promise resolving to nothing if successful, or an error response if failure.\r\n   * @throws {Error} If the `guid` is null or empty.\r\n   */",
      "meta": {
        "range": [
          14017,
          14293
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 326,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012533",
          "name": "deleteDataFlow",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a data flow.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data flow to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(void|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to nothing if successful, or an error response if failure."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the `guid` is null or empty."
        }
      ],
      "name": "deleteDataFlow",
      "longname": "module:base/ViewOrchestratorSdk#deleteDataFlow",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read data flow logs.\r\n   *\r\n   * @param {string} dataFlowGuid - The GUID of the data flow.\r\n   * @param {string} requestGuid - The GUID of the request associated with the data flow logs.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<DataFlowLog>|ApiErrorResponse>} A promise resolving to an array of DataFlowLog objects, or an error response.\r\n   * @throws {Error} If either `dataFlowGuid` or `requestGuid` are null or empty.\r\n   */",
      "meta": {
        "range": [
          14872,
          15273
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 347,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012570",
          "name": "retrieveDataFlowLogs",
          "type": "ClassProperty"
        }
      },
      "description": "Read data flow logs.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data flow.",
          "name": "dataFlowGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the request associated with the data flow logs.",
          "name": "requestGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<DataFlowLog>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of DataFlowLog objects, or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If either `dataFlowGuid` or `requestGuid` are null or empty."
        }
      ],
      "name": "retrieveDataFlowLogs",
      "longname": "module:base/ViewOrchestratorSdk#retrieveDataFlowLogs",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read data flow logfile.\r\n   *\r\n   * @param {string} dataFlowGuid - The GUID of the data flow.\r\n   * @param {string} requestGuid - The GUID of the request associated with the logfile.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<string|null|ApiErrorResponse>} A promise resolving to the log file content as a string, or null if an error occurred.\r\n   * @throws {Error} If either `dataFlowGuid` or `requestGuid` are null or empty.\r\n   */",
      "meta": {
        "range": [
          15805,
          16196
        ],
        "filename": "ViewOrchestratorSdk.js",
        "lineno": 364,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator",
        "code": {
          "id": "astnode100012613",
          "name": "retrieveDataFlowLogfile",
          "type": "ClassProperty"
        }
      },
      "description": "Read data flow logfile.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data flow.",
          "name": "dataFlowGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the request associated with the logfile.",
          "name": "requestGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(string|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the log file content as a string, or null if an error occurred."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If either `dataFlowGuid` or `requestGuid` are null or empty."
        }
      ],
      "name": "retrieveDataFlowLogfile",
      "longname": "module:base/ViewOrchestratorSdk#retrieveDataFlowLogfile",
      "kind": "member",
      "memberof": "module:base/ViewOrchestratorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n * View Cleanup Pipeline SDK.\r\n */",
      "meta": {
        "range": [
          330,
          32102
        ],
        "filename": "ViewCleanupSdk.js",
        "lineno": 9,
        "columnno": 15,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100012678",
          "name": "module.exports",
          "type": "ClassDeclaration",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        }
      },
      "name": "exports",
      "longname": "module.exports",
      "kind": "class",
      "classdesc": "View Cleanup Pipeline SDK.",
      "memberof": "module",
      "scope": "static",
      "description": "Constructs a new ProcessorApi.",
      "alias": "module:base/ProcessorApi",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "endpoint"
        }
      ]
    },
    {
      "comment": "/**\r\n   * Cleanup a document. This variant is used by the storage server.\r\n   * @param {TenantMetadata} tenant - Tenant metadata.\r\n   * @param {number} tenant.id - Tenant ID (defaults to 0, throws error if set to less than 1).\r\n   * @param {string} tenant.GUID - Tenant's unique identifier (automatically generated if not provided).\r\n   * @param {string|null} tenant.ParentGUID - Parent tenant's GUID (optional).\r\n   * @param {string} tenant.Name - Tenant's name (default is an empty string).\r\n   * @param {string} tenant.Region - Region for the tenant (default: 'us-west-1').\r\n   * @param {string} tenant.S3BaseDomain - S3 base domain for the tenant.\r\n   * @param {string} tenant.RestBaseDomain - REST base domain for the tenant.\r\n   * @param {string} tenant.DefaultPoolGUID - Default pool's unique identifier for the tenant.\r\n   * @param {boolean} tenant.Active - Whether the tenant is active (default: true).\r\n   * @param {Date} tenant.CreatedUtc - Creation timestamp in UTC (default: current time).\r\n   * @param {Collection} collection - Collection metadata.\r\n   * @param {number} collection.id - Collection ID.\r\n   * @param {string} collection.GUID - Collection GUID (automatically generated if not provided).\r\n   * @param {string} collection.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} collection.Name - Name of the collection.\r\n   * @param {boolean} collection.AllowOverwrites - Indicates whether source documents can be overwritten (default is true).\r\n   * @param {string} collection.AdditionalData - Additional data (optional).\r\n   * @param {Date} collection.CreatedUtc - Creation timestamp in UTC.\r\n   * @param {StoragePool} pool - Storage pool metadata.\r\n   * @param {number} pool.id - Database row ID.\r\n   * @param {string} pool.GUID - Storage pool GUID (automatically generated if not provided).\r\n   * @param {string} pool.TenantGUID - Tenant GUID.\r\n   * @param {string} pool.EncryptionKeyGUID - Encryption key GUID.\r\n   * @param {string} pool.Name - Name of the storage pool.\r\n   * @param {string} pool.Provider - Provider of the storage pool (default is 'Disk').\r\n   * @param {string} pool.WriteMode - Object key write mode.\r\n   * @param {boolean} pool.UseSsl - Enable or disable SSL.\r\n   * @param {string} pool.Endpoint - Endpoint URL for the storage pool provider.\r\n   * @param {string} pool.AccessKey - Access key.\r\n   * @param {string} pool.SecretKey - Secret key.\r\n   * @param {string} pool.AwsRegion - AWS region.\r\n   * @param {string} pool.AwsBucket - AWS bucket.\r\n   * @param {string} pool.AwsBaseDomain - Base URL for AWS S3 compatible storage platforms.\r\n   * @param {string} pool.AwsBaseUrl - Base URL to use for objects.\r\n   * @param {string} pool.DiskDirectory - Disk directory.\r\n   * @param {string} pool.AzureAccount - Azure account.\r\n   * @param {string} pool.AzureContainer - Azure container.\r\n   * @param {string} pool.Compress - Compression type.\r\n   * @param {boolean} pool.EnableReadCaching - Flag to enable or disable read caching.\r\n   * @param {Date} pool.CreatedUtc - Creation timestamp in UTC.\r\n   * @param {BucketMetadata} bucket - Bucket metadata.\r\n   * @param {number} bucket.id - Bucket ID.\r\n   * @param {string} bucket.GUID - Bucket GUID (automatically generated if not provided).\r\n   * @param {string} bucket.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} bucket.PoolGUID - Pool GUID (automatically generated if not provided).\r\n   * @param {string} bucket.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} bucket.Category - Bucket category.\r\n   * @param {string} bucket.Name - Name of the bucket.\r\n   * @param {string} bucket.RegionString - Region string (default is 'us-west-1').\r\n   * @param {boolean} bucket.Versioning - Enable or disable versioning (default is true).\r\n   * @param {number|null} bucket.RetentionMinutes - Retention in minutes (optional).\r\n   * @param {number|null} bucket.MaxUploadSize - Maximum upload size (optional).\r\n   * @param {number} bucket.MaxMultipartUploadSeconds - Maximum multipart upload seconds (default is seven days).\r\n   * @param {Date} bucket.LastAccessUtc - Last access timestamp in UTC.\r\n   * @param {Date} bucket.CreatedUtc - Created timestamp in UTC.\r\n   * @param {Object} bucket.Owner Information about the credential.\r\n   * @param {string} bucket.Owner.GUID - User's unique identifier (automatically generated if not provided).\r\n   * @param {string} bucket.Owner.TenantGUID - Tenant's unique identifier (automatically generated if not provided).\r\n   * @param {string} bucket.Owner.FirstName - User's first name.\r\n   * @param {string} bucket.Owner.LastName - User's last name.\r\n   * @param {string} bucket.Owner.Notes - Any additional notes for the user.\r\n   * @param {string} bucket.Owner.Email - User's email address.\r\n   * @param {string} bucket.Owner.PasswordSha256 - SHA-256 hashed password (not serialized).\r\n   * @param {boolean} bucket.Owner.Active - Whether the user is active (default: true).\r\n   * @param {Date} bucket.Owner.CreatedUtc - Date and time the user was created (in UTC, default: current time).\r\n   * @param {ObjectMetadata} obj - Object metadata.\r\n   * @param {string} obj.guid - The GUID of the object.\r\n   * @param {string} obj.parentGUID - The parent GUID.\r\n   * @param {string} obj.tenantGUID - The tenant GUID.\r\n   * @param {string} obj.tenantName - The tenant name.\r\n   * @param {string} obj.nodeGUID - The node GUID.\r\n   * @param {string} obj.poolGUID - The pool GUID.\r\n   * @param {string} obj.bucketGUID - The bucket GUID.\r\n   * @param {string} obj.bucketName - The bucket name.\r\n   * @param {string} obj.ownerGUID - The owner GUID.\r\n   * @param {string} obj.encryptionKeyGUID - The encryption key GUID.\r\n   * @param {string} obj.dataCatalogDocumentGUID - The data catalog document GUID.\r\n   * @param {string} obj.dataRepositoryGUID - The data repository GUID.\r\n   * @param {string} obj.graphRepositoryGUID - The graph repository GUID.\r\n   * @param {string} obj.graphNodeIdentifier - The graph node identifier.\r\n   * @param {string} obj.dataFlowRequestGUID - The data flow request GUID.\r\n   * @param {string} obj.key - The key.\r\n   * @param {string} obj.version - The version.\r\n   * @param {boolean} obj.isLatest - Indicates if this is the latest version.\r\n   * @param {boolean} obj.isDeleteMarker - Indicates if this is a delete marker.\r\n   * @param {boolean} obj.isLocal - Indicates if the object is local.\r\n   * @param {string} obj.contentType - The content type.\r\n   * @param {DocumentTypeEnum} obj.documentType - The document type.\r\n   * @param {number} obj.contentLength - The length of the content.\r\n   * @param {string} obj.sourceUrl - The source URL.\r\n   * @param {string} obj.md5Hash - The MD5 hash.\r\n   * @param {string} obj.sha1Hash - The SHA1 hash.\r\n   * @param {string} obj.sha256Hash - The SHA256 hash.\r\n   * @param {Date|null} obj.expirationUtc - The expiration timestamp in UTC.\r\n   * @param {Date} obj.lastAccessUtc - The last access timestamp in UTC.\r\n   * @param {Date} obj.lastModifiedUtc - The last modified timestamp in UTC.\r\n   * @param {Date} obj.createdUtc - The creation timestamp in UTC.\r\n   * @param {byte[]} obj.data - The data of the object.\r\n   * @param {MetadataRule} mdRule - Metadata rule.\r\n   * @param {string} mdRule.GUID - Metadata rule GUID (automatically generated if not provided).\r\n   * @param {string} mdRule.TenantGUID - Tenant GUID (default is null).\r\n   * @param {string} mdRule.BucketGUID - Bucket GUID (default is null).\r\n   * @param {string} mdRule.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} mdRule.Name - Name of the rule (default is null).\r\n   * @param {string} mdRule.ContentType - Content type (default is \"text/plain\").\r\n   * @param {string} mdRule.Prefix - Prefix (default is null).\r\n   * @param {string} mdRule.Suffix - Suffix (default is null).\r\n   * @param {string} mdRule.ProcessingEndpoint - Processing endpoint (default is localhost).\r\n   * @param {string} mdRule.CleanupEndpoint - Cleanup endpoint (default is localhost).\r\n   * @param {string} mdRule.TypeDetectorEndpoint - Type detector endpoint (default is localhost).\r\n   * @param {string} mdRule.SemanticCellEndpoint - Semantic cell endpoint (default is localhost).\r\n   * @param {number} mdRule.MaxChunkContentLength - Maximum chunk content length (default is 512).\r\n   * @param {number} mdRule.ShiftSize - Shift size (default is 512).\r\n   * @param {string} mdRule.UdrEndpoint - UDR endpoint (default is localhost).\r\n   * @param {string} mdRule.DataCatalogType - Data catalog type (default is DataCatalogTypeEnum.Lexi).\r\n   * @param {string} mdRule.DataCatalogEndpoint - Data catalog endpoint (default is localhost).\r\n   * @param {string} mdRule.DataCatalogCollection - Data catalog collection identifier (default is null).\r\n   * @param {string} mdRule.GraphRepositoryGUID - Graph repository GUID (default is null).\r\n   * @param {number} mdRule.TopTerms - Number of top terms to request (default is 25).\r\n   * @param {boolean} mdRule.CaseInsensitive - Enable case insensitive processing (default is true).\r\n   * @param {boolean} mdRule.IncludeFlattened - Enable inclusion of flattened representation (default is true).\r\n   * @param {string} mdRule.TargetBucketGUID - Target bucket GUID (default is null).\r\n   * @param {number} mdRule.MaxContentLength - Maximum content length (default is 16 * 1024 * 1024).\r\n   * @param {number|null} mdRule.RetentionMinutes - Minutes to retain generated document (default is null).\r\n   * @param {Date} mdRule.CreatedUtc - Creation timestamp (default is current UTC time).\r\n   * @param {EmbeddingsRule} embedRule - Embeddings rule.\r\n   * @param {string} embedRule.GUID - Embeddings rule GUID (automatically generated if not provided).\r\n   * @param {string} embedRule.TenantGUID - Tenant GUID (default is null).\r\n   * @param {string} embedRule.BucketGUID - Bucket GUID (default is null).\r\n   * @param {string} embedRule.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} embedRule.Name - Name of the rule (default is null).\r\n   * @param {string} embedRule.ContentType - Content type (default is \"text/plain\").\r\n   * @param {string} embedRule.Prefix - Prefix (default is null).\r\n   * @param {string} embedRule.Suffix - Suffix (default is null).\r\n   * @param {string} embedRule.TargetBucketGUID - Target bucket GUID (default is null).\r\n   * @param {string} embedRule.GraphRepositoryGUID - Graph repository GUID (default is null).\r\n   * @param {string} embedRule.VectorRepositoryGUID - Vector repository GUID (default is null).\r\n   * @param {string} embedRule.DataFlowEndpoint - Data flow endpoint (default is localhost).\r\n   * @param {string} embedRule.EmbeddingsGenerator - Embeddings generator (default is EmbeddingsGeneratorEnum.LCProxy).\r\n   * @param {string} embedRule.GeneratorUrl - Embeddings generator URL (default is localhost).\r\n   * @param {string} embedRule.GeneratorApiKey - Embeddings provider API key (default is null).\r\n   * @param {number} embedRule.BatchSize - Maximum number of chunks to process per request (default is 16).\r\n   * @param {number} embedRule.MaxGeneratorTasks - Maximum number of parallel embeddings generation tasks (default is 16).\r\n   * @param {number} embedRule.MaxRetries - Maximum number of retries per task (default is 3).\r\n   * @param {number} embedRule.MaxFailures - Maximum number of failures before failing the operation (default is 3).\r\n   * @param {string} embedRule.VectorStoreUrl - Vector store URL (default is localhost).\r\n   * @param {number} embedRule.MaxContentLength - Maximum content length (default is 16 * 1024 * 1024).\r\n   * @param {number|null} embedRule.RetentionMinutes - Minutes to retain the generated document (default is null).\r\n   * @param {Date} embedRule.CreatedUtc - Creation timestamp (default is current UTC time).\r\n   * @param {VectorRepository} vectorRepo - Vector repository.\r\n   * @param {string} vectorRepo.GUID - Repository GUID (automatically generated if not provided).\r\n   * @param {string} vectorRepo.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} vectorRepo.name - Name of the repository (default is 'My vector repository').\r\n   * @param {string} vectorRepo.repositoryType - Type of vector repository.\r\n   * @param {string} vectorRepo.endpointUrl - Endpoint URL for the repository.\r\n   * @param {string} vectorRepo.apiKey - API key for authentication.\r\n   * @param {string} vectorRepo.model - Embedding model to be used (default is 'all-MiniLM-L6-v2').\r\n   * @param {number} vectorRepo.dimensionality - Dimensionality of embeddings.\r\n   * @param {string} vectorRepo.databaseHostname - Hostname of the database.\r\n   * @param {string} vectorRepo.databaseName - Name of the database.\r\n   * @param {string} vectorRepo.databaseTable - Table name in the database.\r\n   * @param {number} vectorRepo.databasePort - Database port.\r\n   * @param {string} vectorRepo.databaseUser - Database username.\r\n   * @param {string} vectorRepo.databasePassword - Database password.\r\n   * @param {string} vectorRepo.promptPrefix - Prefix to prepend to prompts.\r\n   * @param {string} vectorRepo.promptSuffix - Suffix to append to prompts.\r\n   * @param {Date} vectorRepo.createdUtc - Creation timestamp in UTC.\r\n   * @param {GraphRepository} graphRepo - Graph repository.\r\n   * @param {string} graphRepo.GUID - GUID of the graph repository (auto-generated if not provided).\r\n   * @param {string} graphRepo.TenantGUID - Tenant GUID (auto-generated if not provided).\r\n   * @param {string} graphRepo.Name - Name of the graph.\r\n   * @param {string} graphRepo.RepositoryType - Type of graph graph.\r\n   * @param {string} graphRepo.EndpointUrl - Endpoint URL.\r\n   * @param {string} graphRepo.ApiKey - API key for the graph.\r\n   * @param {string} graphRepo.Username - Username for authentication.\r\n   * @param {string} graphRepo.Password - Password for authentication.\r\n   * @param {string} graphRepo.Hostname - Hostname for the graph.\r\n   * @param {number} graphRepo.Port - Port number for the graph (default is 0).\r\n   * @param {string} graphRepo.GraphIdentifier - Identifier of the graph.\r\n   * @param {Date} graphRepo.CreatedUtc - Creation timestamp in UTC (defaults to current UTC time).\r\n   * @param {AbortSignal} token - Cancellation token.\r\n   */",
      "meta": {
        "range": [
          15132,
          17073
        ],
        "filename": "ViewCleanupSdk.js",
        "lineno": 213,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100012695",
          "name": "cleanupStorageServer",
          "type": "MethodDefinition",
          "paramnames": [
            "tenant",
            "collection",
            "pool",
            "bucket",
            "obj",
            "mdRule",
            "embedRule",
            "vectorRepo",
            "graphRepo",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Cleanup a document. This variant is used by the storage server.",
      "params": [
        {
          "type": {
            "names": [
              "TenantMetadata"
            ]
          },
          "description": "Tenant metadata.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Tenant ID (defaults to 0, throws error if set to less than 1).",
          "name": "tenant.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's unique identifier (automatically generated if not provided).",
          "name": "tenant.GUID"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "Parent tenant's GUID (optional).",
          "name": "tenant.ParentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's name (default is an empty string).",
          "name": "tenant.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Region for the tenant (default: 'us-west-1').",
          "name": "tenant.Region"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 base domain for the tenant.",
          "name": "tenant.S3BaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "REST base domain for the tenant.",
          "name": "tenant.RestBaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Default pool's unique identifier for the tenant.",
          "name": "tenant.DefaultPoolGUID"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether the tenant is active (default: true).",
          "name": "tenant.Active"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (default: current time).",
          "name": "tenant.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Collection"
            ]
          },
          "description": "Collection metadata.",
          "name": "collection"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Collection ID.",
          "name": "collection.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Collection GUID (automatically generated if not provided).",
          "name": "collection.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "collection.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the collection.",
          "name": "collection.Name"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates whether source documents can be overwritten (default is true).",
          "name": "collection.AllowOverwrites"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Additional data (optional).",
          "name": "collection.AdditionalData"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "collection.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "StoragePool"
            ]
          },
          "description": "Storage pool metadata.",
          "name": "pool"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Database row ID.",
          "name": "pool.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Storage pool GUID (automatically generated if not provided).",
          "name": "pool.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID.",
          "name": "pool.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Encryption key GUID.",
          "name": "pool.EncryptionKeyGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the storage pool.",
          "name": "pool.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Provider of the storage pool (default is 'Disk').",
          "name": "pool.Provider"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object key write mode.",
          "name": "pool.WriteMode"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable or disable SSL.",
          "name": "pool.UseSsl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL for the storage pool provider.",
          "name": "pool.Endpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key.",
          "name": "pool.AccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Secret key.",
          "name": "pool.SecretKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "AWS region.",
          "name": "pool.AwsRegion"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "AWS bucket.",
          "name": "pool.AwsBucket"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Base URL for AWS S3 compatible storage platforms.",
          "name": "pool.AwsBaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Base URL to use for objects.",
          "name": "pool.AwsBaseUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Disk directory.",
          "name": "pool.DiskDirectory"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure account.",
          "name": "pool.AzureAccount"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure container.",
          "name": "pool.AzureContainer"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Compression type.",
          "name": "pool.Compress"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Flag to enable or disable read caching.",
          "name": "pool.EnableReadCaching"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "pool.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "BucketMetadata"
            ]
          },
          "description": "Bucket metadata.",
          "name": "bucket"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Bucket ID.",
          "name": "bucket.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (automatically generated if not provided).",
          "name": "bucket.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "bucket.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Pool GUID (automatically generated if not provided).",
          "name": "bucket.PoolGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "bucket.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket category.",
          "name": "bucket.Category"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the bucket.",
          "name": "bucket.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Region string (default is 'us-west-1').",
          "name": "bucket.RegionString"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable or disable versioning (default is true).",
          "name": "bucket.Versioning"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Retention in minutes (optional).",
          "name": "bucket.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Maximum upload size (optional).",
          "name": "bucket.MaxUploadSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum multipart upload seconds (default is seven days).",
          "name": "bucket.MaxMultipartUploadSeconds"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Last access timestamp in UTC.",
          "name": "bucket.LastAccessUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Created timestamp in UTC.",
          "name": "bucket.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the credential.",
          "name": "bucket.Owner"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's unique identifier (automatically generated if not provided).",
          "name": "bucket.Owner.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's unique identifier (automatically generated if not provided).",
          "name": "bucket.Owner.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's first name.",
          "name": "bucket.Owner.FirstName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's last name.",
          "name": "bucket.Owner.LastName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Any additional notes for the user.",
          "name": "bucket.Owner.Notes"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's email address.",
          "name": "bucket.Owner.Email"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "SHA-256 hashed password (not serialized).",
          "name": "bucket.Owner.PasswordSha256"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether the user is active (default: true).",
          "name": "bucket.Owner.Active"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Date and time the user was created (in UTC, default: current time).",
          "name": "bucket.Owner.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "ObjectMetadata"
            ]
          },
          "description": "Object metadata.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the object.",
          "name": "obj.guid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The parent GUID.",
          "name": "obj.parentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The tenant GUID.",
          "name": "obj.tenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The tenant name.",
          "name": "obj.tenantName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The node GUID.",
          "name": "obj.nodeGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The pool GUID.",
          "name": "obj.poolGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The bucket GUID.",
          "name": "obj.bucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The bucket name.",
          "name": "obj.bucketName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The owner GUID.",
          "name": "obj.ownerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The encryption key GUID.",
          "name": "obj.encryptionKeyGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The data catalog document GUID.",
          "name": "obj.dataCatalogDocumentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The data repository GUID.",
          "name": "obj.dataRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The graph repository GUID.",
          "name": "obj.graphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The graph node identifier.",
          "name": "obj.graphNodeIdentifier"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The data flow request GUID.",
          "name": "obj.dataFlowRequestGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key.",
          "name": "obj.key"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The version.",
          "name": "obj.version"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if this is the latest version.",
          "name": "obj.isLatest"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if this is a delete marker.",
          "name": "obj.isDeleteMarker"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if the object is local.",
          "name": "obj.isLocal"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The content type.",
          "name": "obj.contentType"
        },
        {
          "type": {
            "names": [
              "DocumentTypeEnum"
            ]
          },
          "description": "The document type.",
          "name": "obj.documentType"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The length of the content.",
          "name": "obj.contentLength"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The source URL.",
          "name": "obj.sourceUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The MD5 hash.",
          "name": "obj.md5Hash"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The SHA1 hash.",
          "name": "obj.sha1Hash"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The SHA256 hash.",
          "name": "obj.sha256Hash"
        },
        {
          "type": {
            "names": [
              "Date",
              "null"
            ]
          },
          "description": "The expiration timestamp in UTC.",
          "name": "obj.expirationUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "The last access timestamp in UTC.",
          "name": "obj.lastAccessUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "The last modified timestamp in UTC.",
          "name": "obj.lastModifiedUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "The creation timestamp in UTC.",
          "name": "obj.createdUtc"
        },
        {
          "type": {
            "names": [
              "Array.<byte>"
            ]
          },
          "description": "The data of the object.",
          "name": "obj.data"
        },
        {
          "type": {
            "names": [
              "MetadataRule"
            ]
          },
          "description": "Metadata rule.",
          "name": "mdRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Metadata rule GUID (automatically generated if not provided).",
          "name": "mdRule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (default is null).",
          "name": "mdRule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (default is null).",
          "name": "mdRule.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "mdRule.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the rule (default is null).",
          "name": "mdRule.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content type (default is \"text/plain\").",
          "name": "mdRule.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix (default is null).",
          "name": "mdRule.Prefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix (default is null).",
          "name": "mdRule.Suffix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Processing endpoint (default is localhost).",
          "name": "mdRule.ProcessingEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Cleanup endpoint (default is localhost).",
          "name": "mdRule.CleanupEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type detector endpoint (default is localhost).",
          "name": "mdRule.TypeDetectorEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Semantic cell endpoint (default is localhost).",
          "name": "mdRule.SemanticCellEndpoint"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum chunk content length (default is 512).",
          "name": "mdRule.MaxChunkContentLength"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Shift size (default is 512).",
          "name": "mdRule.ShiftSize"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "UDR endpoint (default is localhost).",
          "name": "mdRule.UdrEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog type (default is DataCatalogTypeEnum.Lexi).",
          "name": "mdRule.DataCatalogType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog endpoint (default is localhost).",
          "name": "mdRule.DataCatalogEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog collection identifier (default is null).",
          "name": "mdRule.DataCatalogCollection"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository GUID (default is null).",
          "name": "mdRule.GraphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Number of top terms to request (default is 25).",
          "name": "mdRule.TopTerms"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable case insensitive processing (default is true).",
          "name": "mdRule.CaseInsensitive"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable inclusion of flattened representation (default is true).",
          "name": "mdRule.IncludeFlattened"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Target bucket GUID (default is null).",
          "name": "mdRule.TargetBucketGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum content length (default is 16 * 1024 * 1024).",
          "name": "mdRule.MaxContentLength"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Minutes to retain generated document (default is null).",
          "name": "mdRule.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp (default is current UTC time).",
          "name": "mdRule.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "EmbeddingsRule"
            ]
          },
          "description": "Embeddings rule.",
          "name": "embedRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings rule GUID (automatically generated if not provided).",
          "name": "embedRule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (default is null).",
          "name": "embedRule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (default is null).",
          "name": "embedRule.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "embedRule.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the rule (default is null).",
          "name": "embedRule.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content type (default is \"text/plain\").",
          "name": "embedRule.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix (default is null).",
          "name": "embedRule.Prefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix (default is null).",
          "name": "embedRule.Suffix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Target bucket GUID (default is null).",
          "name": "embedRule.TargetBucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository GUID (default is null).",
          "name": "embedRule.GraphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector repository GUID (default is null).",
          "name": "embedRule.VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data flow endpoint (default is localhost).",
          "name": "embedRule.DataFlowEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings generator (default is EmbeddingsGeneratorEnum.LCProxy).",
          "name": "embedRule.EmbeddingsGenerator"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings generator URL (default is localhost).",
          "name": "embedRule.GeneratorUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings provider API key (default is null).",
          "name": "embedRule.GeneratorApiKey"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of chunks to process per request (default is 16).",
          "name": "embedRule.BatchSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of parallel embeddings generation tasks (default is 16).",
          "name": "embedRule.MaxGeneratorTasks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of retries per task (default is 3).",
          "name": "embedRule.MaxRetries"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of failures before failing the operation (default is 3).",
          "name": "embedRule.MaxFailures"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector store URL (default is localhost).",
          "name": "embedRule.VectorStoreUrl"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum content length (default is 16 * 1024 * 1024).",
          "name": "embedRule.MaxContentLength"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Minutes to retain the generated document (default is null).",
          "name": "embedRule.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp (default is current UTC time).",
          "name": "embedRule.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "VectorRepository"
            ]
          },
          "description": "Vector repository.",
          "name": "vectorRepo"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository GUID (automatically generated if not provided).",
          "name": "vectorRepo.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "vectorRepo.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository (default is 'My vector repository').",
          "name": "vectorRepo.name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of vector repository.",
          "name": "vectorRepo.repositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL for the repository.",
          "name": "vectorRepo.endpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "API key for authentication.",
          "name": "vectorRepo.apiKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embedding model to be used (default is 'all-MiniLM-L6-v2').",
          "name": "vectorRepo.model"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Dimensionality of embeddings.",
          "name": "vectorRepo.dimensionality"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname of the database.",
          "name": "vectorRepo.databaseHostname"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the database.",
          "name": "vectorRepo.databaseName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Table name in the database.",
          "name": "vectorRepo.databaseTable"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Database port.",
          "name": "vectorRepo.databasePort"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Database username.",
          "name": "vectorRepo.databaseUser"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Database password.",
          "name": "vectorRepo.databasePassword"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix to prepend to prompts.",
          "name": "vectorRepo.promptPrefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix to append to prompts.",
          "name": "vectorRepo.promptSuffix"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "vectorRepo.createdUtc"
        },
        {
          "type": {
            "names": [
              "GraphRepository"
            ]
          },
          "description": "Graph repository.",
          "name": "graphRepo"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the graph repository (auto-generated if not provided).",
          "name": "graphRepo.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (auto-generated if not provided).",
          "name": "graphRepo.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the graph.",
          "name": "graphRepo.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of graph graph.",
          "name": "graphRepo.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL.",
          "name": "graphRepo.EndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "API key for the graph.",
          "name": "graphRepo.ApiKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Username for authentication.",
          "name": "graphRepo.Username"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Password for authentication.",
          "name": "graphRepo.Password"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname for the graph.",
          "name": "graphRepo.Hostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Port number for the graph (default is 0).",
          "name": "graphRepo.Port"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Identifier of the graph.",
          "name": "graphRepo.GraphIdentifier"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (defaults to current UTC time).",
          "name": "graphRepo.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "description": "Cancellation token.",
          "name": "token"
        }
      ],
      "name": "cleanupStorageServer",
      "longname": "cleanupStorageServer",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Cleanup a document. This variant is used by the data crawler.\r\n   *\r\n   * @param {Object} tenant - Tenant metadata.\r\n   * @param {number} tenant.id - Tenant ID (defaults to 0, throws error if set to less than 1).\r\n   * @param {string} tenant.GUID - Tenant's unique identifier (automatically generated if not provided).\r\n   * @param {string|null} tenant.ParentGUID - Parent tenant's GUID (optional).\r\n   * @param {string} tenant.Name - Tenant's name (default is an empty string).\r\n   * @param {string} tenant.Region - Region for the tenant (default: 'us-west-1').\r\n   * @param {string} tenant.S3BaseDomain - S3 base domain for the tenant.\r\n   * @param {string} tenant.RestBaseDomain - REST base domain for the tenant.\r\n   * @param {string} tenant.DefaultPoolGUID - Default pool's unique identifier for the tenant.\r\n   * @param {boolean} tenant.Active - Whether the tenant is active (default: true).\r\n   * @param {Date} tenant.CreatedUtc - Creation timestamp in UTC (default: current time).\r\n   * @param {Object} collection - Collection metadata.\r\n   * @param {number} collection.id - Collection ID.\r\n   * @param {string} collection.GUID - Collection GUID (automatically generated if not provided).\r\n   * @param {string} collection.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} collection.Name - Name of the collection.\r\n   * @param {boolean} collection.AllowOverwrites - Indicates whether source documents can be overwritten (default is true).\r\n   * @param {string} collection.AdditionalData - Additional data (optional).\r\n   * @param {Date} collection.CreatedUtc - Creation timestamp in UTC.\r\n   * @param {Object} repo - Data repository.\r\n   * @param {number} repo.Id - ID (must be greater than 0).\r\n   * @param {string} repo.GUID - Data repository GUID (automatically generated if not provided).\r\n   * @param {string} repo.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} repo.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} repo.Name - Name of the repository (default is \"My file repository\").\r\n   * @param {string} repo.RepositoryType - Repository type (default is DataRepositoryTypeEnum.File).\r\n   * @param {boolean} repo.UseSsl - Boolean flag to enable SSL (default is false).\r\n   * @param {boolean} repo.IncludeSubdirectories - Include subdirectories (default is true).\r\n   * @param {string} repo.DiskDirectory - Disk directory (default is null).\r\n   * @param {string} repo.S3EndpointUrl - S3 endpoint URL (default is null).\r\n   * @param {string} repo.S3BaseUrl - S3 base URL (default is null).\r\n   * @param {string} repo.S3AccessKey - S3 access key (default is null).\r\n   * @param {string} repo.S3SecretKey - S3 secret key (default is null).\r\n   * @param {string} repo.S3BucketName - S3 bucket name (default is null).\r\n   * @param {string} repo.S3Region - S3 region (default is null).\r\n   * @param {string} repo.AzureEndpointUrl - Azure endpoint URL (default is null).\r\n   * @param {string} repo.AzureAccountName - Azure account name (default is null).\r\n   * @param {string} repo.AzureContainerName - Azure container name (default is null).\r\n   * @param {string} repo.AzureAccessKey - Azure access key (default is null).\r\n   * @param {string} repo.CifsHostname - CIFS hostname (default is null).\r\n   * @param {string} repo.CifsUsername - CIFS username (default is null).\r\n   * @param {string} repo.CifsPassword - CIFS password (default is null).\r\n   * @param {string} repo.CifsShareName - CIFS share name (default is null).\r\n   * @param {string} repo.NfsHostname - NFS hostname (default is null).\r\n   * @param {number} repo.NfsUserId - NFS user ID (must be non-negative).\r\n   * @param {number} repo.NfsGroupId - NFS group ID (must be non-negative).\r\n   * @param {string} repo.NfsShareName - NFS share name (default is null).\r\n   * @param {string} repo.NfsVersion - NFS version (default is null).\r\n   * @param {Date} repo.CreatedUtc - Created timestamp (default is current UTC time).\r\n   * @param {Object} obj - Object metadata.\r\n   * @param {string} obj.guid - The GUID of the object.\r\n   * @param {string} obj.parentGUID - The parent GUID.\r\n   * @param {string} obj.tenantGUID - The tenant GUID.\r\n   * @param {string} obj.tenantName - The tenant name.\r\n   * @param {string} obj.nodeGUID - The node GUID.\r\n   * @param {string} obj.poolGUID - The pool GUID.\r\n   * @param {string} obj.bucketGUID - The bucket GUID.\r\n   * @param {string} obj.bucketName - The bucket name.\r\n   * @param {string} obj.ownerGUID - The owner GUID.\r\n   * @param {string} obj.encryptionKeyGUID - The encryption key GUID.\r\n   * @param {string} obj.dataCatalogDocumentGUID - The data catalog document GUID.\r\n   * @param {string} obj.dataRepositoryGUID - The data repository GUID.\r\n   * @param {string} obj.graphRepositoryGUID - The graph repository GUID.\r\n   * @param {string} obj.graphNodeIdentifier - The graph node identifier.\r\n   * @param {string} obj.dataFlowRequestGUID - The data flow request GUID.\r\n   * @param {string} obj.key - The key.\r\n   * @param {string} obj.version - The version.\r\n   * @param {boolean} obj.isLatest - Indicates if this is the latest version.\r\n   * @param {boolean} obj.isDeleteMarker - Indicates if this is a delete marker.\r\n   * @param {boolean} obj.isLocal - Indicates if the object is local.\r\n   * @param {string} obj.contentType - The content type.\r\n   * @param {DocumentTypeEnum} obj.documentType - The document type.\r\n   * @param {number} obj.contentLength - The length of the content.\r\n   * @param {string} obj.sourceUrl - The source URL.\r\n   * @param {string} obj.md5Hash - The MD5 hash.\r\n   * @param {string} obj.sha1Hash - The SHA1 hash.\r\n   * @param {string} obj.sha256Hash - The SHA256 hash.\r\n   * @param {Date|null} obj.expirationUtc - The expiration timestamp in UTC.\r\n   * @param {Date} obj.lastAccessUtc - The last access timestamp in UTC.\r\n   * @param {Date} obj.lastModifiedUtc - The last modified timestamp in UTC.\r\n   * @param {Date} obj.createdUtc - The creation timestamp in UTC.\r\n   * @param {byte[]} obj.data - The data of the object.\r\n   * @param {Object} mdRule - Metadata rule.\r\n   * @param {string} mdRule.GUID - Metadata rule GUID (automatically generated if not provided).\r\n   * @param {string} mdRule.TenantGUID - Tenant GUID (default is null).\r\n   * @param {string} mdRule.BucketGUID - Bucket GUID (default is null).\r\n   * @param {string} mdRule.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} mdRule.Name - Name of the rule (default is null).\r\n   * @param {string} mdRule.ContentType - Content type (default is \"text/plain\").\r\n   * @param {string} mdRule.Prefix - Prefix (default is null).\r\n   * @param {string} mdRule.Suffix - Suffix (default is null).\r\n   * @param {string} mdRule.ProcessingEndpoint - Processing endpoint (default is localhost).\r\n   * @param {string} mdRule.CleanupEndpoint - Cleanup endpoint (default is localhost).\r\n   * @param {string} mdRule.TypeDetectorEndpoint - Type detector endpoint (default is localhost).\r\n   * @param {string} mdRule.SemanticCellEndpoint - Semantic cell endpoint (default is localhost).\r\n   * @param {number} mdRule.MaxChunkContentLength - Maximum chunk content length (default is 512).\r\n   * @param {number} mdRule.ShiftSize - Shift size (default is 512).\r\n   * @param {string} mdRule.UdrEndpoint - UDR endpoint (default is localhost).\r\n   * @param {string} mdRule.DataCatalogType - Data catalog type (default is DataCatalogTypeEnum.Lexi).\r\n   * @param {string} mdRule.DataCatalogEndpoint - Data catalog endpoint (default is localhost).\r\n   * @param {string} mdRule.DataCatalogCollection - Data catalog collection identifier (default is null).\r\n   * @param {string} mdRule.GraphRepositoryGUID - Graph repository GUID (default is null).\r\n   * @param {number} mdRule.TopTerms - Number of top terms to request (default is 25).\r\n   * @param {boolean} mdRule.CaseInsensitive - Enable case insensitive processing (default is true).\r\n   * @param {boolean} mdRule.IncludeFlattened - Enable inclusion of flattened representation (default is true).\r\n   * @param {string} mdRule.TargetBucketGUID - Target bucket GUID (default is null).\r\n   * @param {number} mdRule.MaxContentLength - Maximum content length (default is 16 * 1024 * 1024).\r\n   * @param {number|null} mdRule.RetentionMinutes - Minutes to retain generated document (default is null).\r\n   * @param {Date} mdRule.CreatedUtc - Creation timestamp (default is current UTC time).\r\n   * @param {Object} embedRule - Embeddings rule.\r\n   * @param {string} embedRule.GUID - Embeddings rule GUID (automatically generated if not provided).\r\n   * @param {string} embedRule.TenantGUID - Tenant GUID (default is null).\r\n   * @param {string} embedRule.BucketGUID - Bucket GUID (default is null).\r\n   * @param {string} embedRule.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} embedRule.Name - Name of the rule (default is null).\r\n   * @param {string} embedRule.ContentType - Content type (default is \"text/plain\").\r\n   * @param {string} embedRule.Prefix - Prefix (default is null).\r\n   * @param {string} embedRule.Suffix - Suffix (default is null).\r\n   * @param {string} embedRule.TargetBucketGUID - Target bucket GUID (default is null).\r\n   * @param {string} embedRule.GraphRepositoryGUID - Graph repository GUID (default is null).\r\n   * @param {string} embedRule.VectorRepositoryGUID - Vector repository GUID (default is null).\r\n   * @param {string} embedRule.DataFlowEndpoint - Data flow endpoint (default is localhost).\r\n   * @param {string} embedRule.EmbeddingsGenerator - Embeddings generator (default is EmbeddingsGeneratorEnum.LCProxy).\r\n   * @param {string} embedRule.GeneratorUrl - Embeddings generator URL (default is localhost).\r\n   * @param {string} embedRule.GeneratorApiKey - Embeddings provider API key (default is null).\r\n   * @param {number} embedRule.BatchSize - Maximum number of chunks to process per request (default is 16).\r\n   * @param {number} embedRule.MaxGeneratorTasks - Maximum number of parallel embeddings generation tasks (default is 16).\r\n   * @param {number} embedRule.MaxRetries - Maximum number of retries per task (default is 3).\r\n   * @param {number} embedRule.MaxFailures - Maximum number of failures before failing the operation (default is 3).\r\n   * @param {string} embedRule.VectorStoreUrl - Vector store URL (default is localhost).\r\n   * @param {number} embedRule.MaxContentLength - Maximum content length (default is 16 * 1024 * 1024).\r\n   * @param {number|null} embedRule.RetentionMinutes - Minutes to retain the generated document (default is null).\r\n   * @param {Date} embedRule.CreatedUtc - Creation timestamp (default is current UTC time).\r\n   * @param {Object} vectorRepo - Vector repository.\r\n   * @param {string} vectorRepo.GUID - Repository GUID (automatically generated if not provided).\r\n   * @param {string} vectorRepo.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} vectorRepo.name - Name of the repository (default is 'My vector repository').\r\n   * @param {string} vectorRepo.repositoryType - Type of vector repository.\r\n   * @param {string} vectorRepo.endpointUrl - Endpoint URL for the repository.\r\n   * @param {string} vectorRepo.apiKey - API key for authentication.\r\n   * @param {string} vectorRepo.model - Embedding model to be used (default is 'all-MiniLM-L6-v2').\r\n   * @param {number} vectorRepo.dimensionality - Dimensionality of embeddings.\r\n   * @param {string} vectorRepo.databaseHostname - Hostname of the database.\r\n   * @param {string} vectorRepo.databaseName - Name of the database.\r\n   * @param {string} vectorRepo.databaseTable - Table name in the database.\r\n   * @param {number} vectorRepo.databasePort - Database port.\r\n   * @param {string} vectorRepo.databaseUser - Database username.\r\n   * @param {string} vectorRepo.databasePassword - Database password.\r\n   * @param {string} vectorRepo.promptPrefix - Prefix to prepend to prompts.\r\n   * @param {string} vectorRepo.promptSuffix - Suffix to append to prompts.\r\n   * @param {Date} vectorRepo.createdUtc - Creation timestamp in UTC.\r\n   * @param {Object} graphRepo - Graph repository.\r\n   * @param {string} graphRepo.GUID - GUID of the graph repository (auto-generated if not provided).\r\n   * @param {string} graphRepo.TenantGUID - Tenant GUID (auto-generated if not provided).\r\n   * @param {string} graphRepo.Name - Name of the graph.\r\n   * @param {string} graphRepo.RepositoryType - Type of graph graph.\r\n   * @param {string} graphRepo.EndpointUrl - Endpoint URL.\r\n   * @param {string} graphRepo.ApiKey - API key for the graph.\r\n   * @param {string} graphRepo.Username - Username for authentication.\r\n   * @param {string} graphRepo.Password - Password for authentication.\r\n   * @param {string} graphRepo.Hostname - Hostname for the graph.\r\n   * @param {number} graphRepo.Port - Port number for the graph (default is 0).\r\n   * @param {string} graphRepo.GraphIdentifier - Identifier of the graph.\r\n   * @param {Date} graphRepo.CreatedUtc - Creation timestamp in UTC (defaults to current UTC time).\r\n   * @param {AbortSignal} token - Cancellation token.\r\n   *\r\n   */",
      "meta": {
        "range": [
          30261,
          32099
        ],
        "filename": "ViewCleanupSdk.js",
        "lineno": 448,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100012888",
          "name": "cleanupDataCrawler",
          "type": "MethodDefinition",
          "paramnames": [
            "tenant",
            "collection",
            "repo",
            "obj",
            "mdRule",
            "embedRule",
            "vectorRepo",
            "graphRepo",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Cleanup a document. This variant is used by the data crawler.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Tenant metadata.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Tenant ID (defaults to 0, throws error if set to less than 1).",
          "name": "tenant.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's unique identifier (automatically generated if not provided).",
          "name": "tenant.GUID"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "Parent tenant's GUID (optional).",
          "name": "tenant.ParentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's name (default is an empty string).",
          "name": "tenant.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Region for the tenant (default: 'us-west-1').",
          "name": "tenant.Region"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 base domain for the tenant.",
          "name": "tenant.S3BaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "REST base domain for the tenant.",
          "name": "tenant.RestBaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Default pool's unique identifier for the tenant.",
          "name": "tenant.DefaultPoolGUID"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether the tenant is active (default: true).",
          "name": "tenant.Active"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (default: current time).",
          "name": "tenant.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Collection metadata.",
          "name": "collection"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Collection ID.",
          "name": "collection.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Collection GUID (automatically generated if not provided).",
          "name": "collection.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "collection.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the collection.",
          "name": "collection.Name"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates whether source documents can be overwritten (default is true).",
          "name": "collection.AllowOverwrites"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Additional data (optional).",
          "name": "collection.AdditionalData"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "collection.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Data repository.",
          "name": "repo"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "ID (must be greater than 0).",
          "name": "repo.Id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data repository GUID (automatically generated if not provided).",
          "name": "repo.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "repo.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "repo.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository (default is \"My file repository\").",
          "name": "repo.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository type (default is DataRepositoryTypeEnum.File).",
          "name": "repo.RepositoryType"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Boolean flag to enable SSL (default is false).",
          "name": "repo.UseSsl"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Include subdirectories (default is true).",
          "name": "repo.IncludeSubdirectories"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Disk directory (default is null).",
          "name": "repo.DiskDirectory"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 endpoint URL (default is null).",
          "name": "repo.S3EndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 base URL (default is null).",
          "name": "repo.S3BaseUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 access key (default is null).",
          "name": "repo.S3AccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 secret key (default is null).",
          "name": "repo.S3SecretKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 bucket name (default is null).",
          "name": "repo.S3BucketName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 region (default is null).",
          "name": "repo.S3Region"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure endpoint URL (default is null).",
          "name": "repo.AzureEndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure account name (default is null).",
          "name": "repo.AzureAccountName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure container name (default is null).",
          "name": "repo.AzureContainerName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure access key (default is null).",
          "name": "repo.AzureAccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS hostname (default is null).",
          "name": "repo.CifsHostname"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS username (default is null).",
          "name": "repo.CifsUsername"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS password (default is null).",
          "name": "repo.CifsPassword"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS share name (default is null).",
          "name": "repo.CifsShareName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "NFS hostname (default is null).",
          "name": "repo.NfsHostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "NFS user ID (must be non-negative).",
          "name": "repo.NfsUserId"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "NFS group ID (must be non-negative).",
          "name": "repo.NfsGroupId"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "NFS share name (default is null).",
          "name": "repo.NfsShareName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "NFS version (default is null).",
          "name": "repo.NfsVersion"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Created timestamp (default is current UTC time).",
          "name": "repo.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Object metadata.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the object.",
          "name": "obj.guid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The parent GUID.",
          "name": "obj.parentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The tenant GUID.",
          "name": "obj.tenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The tenant name.",
          "name": "obj.tenantName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The node GUID.",
          "name": "obj.nodeGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The pool GUID.",
          "name": "obj.poolGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The bucket GUID.",
          "name": "obj.bucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The bucket name.",
          "name": "obj.bucketName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The owner GUID.",
          "name": "obj.ownerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The encryption key GUID.",
          "name": "obj.encryptionKeyGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The data catalog document GUID.",
          "name": "obj.dataCatalogDocumentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The data repository GUID.",
          "name": "obj.dataRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The graph repository GUID.",
          "name": "obj.graphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The graph node identifier.",
          "name": "obj.graphNodeIdentifier"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The data flow request GUID.",
          "name": "obj.dataFlowRequestGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key.",
          "name": "obj.key"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The version.",
          "name": "obj.version"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if this is the latest version.",
          "name": "obj.isLatest"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if this is a delete marker.",
          "name": "obj.isDeleteMarker"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if the object is local.",
          "name": "obj.isLocal"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The content type.",
          "name": "obj.contentType"
        },
        {
          "type": {
            "names": [
              "DocumentTypeEnum"
            ]
          },
          "description": "The document type.",
          "name": "obj.documentType"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The length of the content.",
          "name": "obj.contentLength"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The source URL.",
          "name": "obj.sourceUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The MD5 hash.",
          "name": "obj.md5Hash"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The SHA1 hash.",
          "name": "obj.sha1Hash"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The SHA256 hash.",
          "name": "obj.sha256Hash"
        },
        {
          "type": {
            "names": [
              "Date",
              "null"
            ]
          },
          "description": "The expiration timestamp in UTC.",
          "name": "obj.expirationUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "The last access timestamp in UTC.",
          "name": "obj.lastAccessUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "The last modified timestamp in UTC.",
          "name": "obj.lastModifiedUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "The creation timestamp in UTC.",
          "name": "obj.createdUtc"
        },
        {
          "type": {
            "names": [
              "Array.<byte>"
            ]
          },
          "description": "The data of the object.",
          "name": "obj.data"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Metadata rule.",
          "name": "mdRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Metadata rule GUID (automatically generated if not provided).",
          "name": "mdRule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (default is null).",
          "name": "mdRule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (default is null).",
          "name": "mdRule.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "mdRule.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the rule (default is null).",
          "name": "mdRule.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content type (default is \"text/plain\").",
          "name": "mdRule.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix (default is null).",
          "name": "mdRule.Prefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix (default is null).",
          "name": "mdRule.Suffix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Processing endpoint (default is localhost).",
          "name": "mdRule.ProcessingEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Cleanup endpoint (default is localhost).",
          "name": "mdRule.CleanupEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type detector endpoint (default is localhost).",
          "name": "mdRule.TypeDetectorEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Semantic cell endpoint (default is localhost).",
          "name": "mdRule.SemanticCellEndpoint"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum chunk content length (default is 512).",
          "name": "mdRule.MaxChunkContentLength"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Shift size (default is 512).",
          "name": "mdRule.ShiftSize"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "UDR endpoint (default is localhost).",
          "name": "mdRule.UdrEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog type (default is DataCatalogTypeEnum.Lexi).",
          "name": "mdRule.DataCatalogType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog endpoint (default is localhost).",
          "name": "mdRule.DataCatalogEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog collection identifier (default is null).",
          "name": "mdRule.DataCatalogCollection"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository GUID (default is null).",
          "name": "mdRule.GraphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Number of top terms to request (default is 25).",
          "name": "mdRule.TopTerms"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable case insensitive processing (default is true).",
          "name": "mdRule.CaseInsensitive"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable inclusion of flattened representation (default is true).",
          "name": "mdRule.IncludeFlattened"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Target bucket GUID (default is null).",
          "name": "mdRule.TargetBucketGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum content length (default is 16 * 1024 * 1024).",
          "name": "mdRule.MaxContentLength"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Minutes to retain generated document (default is null).",
          "name": "mdRule.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp (default is current UTC time).",
          "name": "mdRule.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Embeddings rule.",
          "name": "embedRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings rule GUID (automatically generated if not provided).",
          "name": "embedRule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (default is null).",
          "name": "embedRule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (default is null).",
          "name": "embedRule.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "embedRule.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the rule (default is null).",
          "name": "embedRule.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content type (default is \"text/plain\").",
          "name": "embedRule.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix (default is null).",
          "name": "embedRule.Prefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix (default is null).",
          "name": "embedRule.Suffix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Target bucket GUID (default is null).",
          "name": "embedRule.TargetBucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository GUID (default is null).",
          "name": "embedRule.GraphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector repository GUID (default is null).",
          "name": "embedRule.VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data flow endpoint (default is localhost).",
          "name": "embedRule.DataFlowEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings generator (default is EmbeddingsGeneratorEnum.LCProxy).",
          "name": "embedRule.EmbeddingsGenerator"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings generator URL (default is localhost).",
          "name": "embedRule.GeneratorUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings provider API key (default is null).",
          "name": "embedRule.GeneratorApiKey"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of chunks to process per request (default is 16).",
          "name": "embedRule.BatchSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of parallel embeddings generation tasks (default is 16).",
          "name": "embedRule.MaxGeneratorTasks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of retries per task (default is 3).",
          "name": "embedRule.MaxRetries"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of failures before failing the operation (default is 3).",
          "name": "embedRule.MaxFailures"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector store URL (default is localhost).",
          "name": "embedRule.VectorStoreUrl"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum content length (default is 16 * 1024 * 1024).",
          "name": "embedRule.MaxContentLength"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Minutes to retain the generated document (default is null).",
          "name": "embedRule.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp (default is current UTC time).",
          "name": "embedRule.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Vector repository.",
          "name": "vectorRepo"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository GUID (automatically generated if not provided).",
          "name": "vectorRepo.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "vectorRepo.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository (default is 'My vector repository').",
          "name": "vectorRepo.name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of vector repository.",
          "name": "vectorRepo.repositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL for the repository.",
          "name": "vectorRepo.endpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "API key for authentication.",
          "name": "vectorRepo.apiKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embedding model to be used (default is 'all-MiniLM-L6-v2').",
          "name": "vectorRepo.model"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Dimensionality of embeddings.",
          "name": "vectorRepo.dimensionality"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname of the database.",
          "name": "vectorRepo.databaseHostname"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the database.",
          "name": "vectorRepo.databaseName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Table name in the database.",
          "name": "vectorRepo.databaseTable"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Database port.",
          "name": "vectorRepo.databasePort"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Database username.",
          "name": "vectorRepo.databaseUser"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Database password.",
          "name": "vectorRepo.databasePassword"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix to prepend to prompts.",
          "name": "vectorRepo.promptPrefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix to append to prompts.",
          "name": "vectorRepo.promptSuffix"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "vectorRepo.createdUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Graph repository.",
          "name": "graphRepo"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the graph repository (auto-generated if not provided).",
          "name": "graphRepo.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (auto-generated if not provided).",
          "name": "graphRepo.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the graph.",
          "name": "graphRepo.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of graph graph.",
          "name": "graphRepo.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL.",
          "name": "graphRepo.EndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "API key for the graph.",
          "name": "graphRepo.ApiKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Username for authentication.",
          "name": "graphRepo.Username"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Password for authentication.",
          "name": "graphRepo.Password"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname for the graph.",
          "name": "graphRepo.Hostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Port number for the graph (default is 0).",
          "name": "graphRepo.Port"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Identifier of the graph.",
          "name": "graphRepo.GraphIdentifier"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (defaults to current UTC time).",
          "name": "graphRepo.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "description": "Cancellation token.",
          "name": "token"
        }
      ],
      "name": "cleanupDataCrawler",
      "longname": "cleanupDataCrawler",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Constructs a new ProcessorApi.\r\n   * @alias module:base/ProcessorApi\r\n   * @class\r\n   * @param {string} tenantGuid\r\n   * @param {string} accessKey\r\n   * @param {string} endpoint\r\n   */",
      "meta": {
        "range": [
          556,
          652
        ],
        "filename": "ViewLexiEmbeddingsSdk.js",
        "lineno": 16,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100013101",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new ProcessorApi.",
      "alias": "module:base/ProcessorApi",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "endpoint"
        }
      ],
      "name": "module:base/ProcessorApi",
      "longname": "module:base/ProcessorApi",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Process Lexi Embeddings document.\r\n   * @param {Object} tenant - Tenant metadata.\r\n   * @param {number} tenant.id - Tenant ID (defaults to 0, throws error if set to less than 1).\r\n   * @param {string} tenant.GUID - Tenant's unique identifier (automatically generated if not provided).\r\n   * @param {string|null} tenant.ParentGUID - Parent tenant's GUID (optional).\r\n   * @param {string} tenant.Name - Tenant's name (default is an empty string).\r\n   * @param {string} tenant.Region - Region for the tenant (default: 'us-west-1').\r\n   * @param {string} tenant.S3BaseDomain - S3 base domain for the tenant.\r\n   * @param {string} tenant.RestBaseDomain - REST base domain for the tenant.\r\n   * @param {string} tenant.DefaultPoolGUID - Default pool's unique identifier for the tenant.\r\n   * @param {boolean} tenant.Active - Whether the tenant is active (default: true).\r\n   * @param {Date} tenant.CreatedUtc - Creation timestamp in UTC (default: current time).\r\n   * @param {Object} collection - Collection metadata.\r\n   * @param {number} collection.id - Collection ID.\r\n   * @param {string} collection.GUID - Collection GUID (automatically generated if not provided).\r\n   * @param {string} collection.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} collection.Name - Name of the collection.\r\n   * @param {boolean} collection.AllowOverwrites - Indicates whether source documents can be overwritten (default is true).\r\n   * @param {string} collection.AdditionalData - Additional data (optional).\r\n   * @param {Date} collection.CreatedUtc - Creation timestamp in UTC.\r\n   * @param {Object} results - Search results.\r\n   * @param {boolean} results.Success - Indicates if the parser was successful.\r\n   * @param {Timestamp} results.Timestamp - Timestamps.\r\n   * @param {string} results.DataFlowRequestGUID - Data flow request GUID.\r\n   * @param {boolean} results.EndOfResults - Boolean indicating end of results.\r\n   * @param {string} results.ContinuationToken - Continuation token for search continuation.\r\n   * @param {number} results.RecordsRemaining - Number of candidate records remaining in the search.\r\n   * @param {Array<Object>} results.Documents - Documents that matched the query.\r\n   * @param {Array<Object>} results.Embeddings - Embeddings documents generated from matched documents.\r\n   * @param {Object} embedRule - Embeddings rule.\r\n   * @param {string} embedRule.GUID - Embeddings rule GUID (automatically generated if not provided).\r\n   * @param {string} embedRule.TenantGUID - Tenant GUID (default is null).\r\n   * @param {string} embedRule.BucketGUID - Bucket GUID (default is null).\r\n   * @param {string} embedRule.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} embedRule.Name - Name of the rule (default is null).\r\n   * @param {string} embedRule.ContentType - Content type (default is \"text/plain\").\r\n   * @param {string} embedRule.Prefix - Prefix (default is null).\r\n   * @param {string} embedRule.Suffix - Suffix (default is null).\r\n   * @param {string} embedRule.TargetBucketGUID - Target bucket GUID (default is null).\r\n   * @param {string} embedRule.GraphRepositoryGUID - Graph repository GUID (default is null).\r\n   * @param {string} embedRule.VectorRepositoryGUID - Vector repository GUID (default is null).\r\n   * @param {string} embedRule.DataFlowEndpoint - Data flow endpoint (default is localhost).\r\n   * @param {string} embedRule.EmbeddingsGenerator - Embeddings generator (default is EmbeddingsGeneratorEnum.LCProxy).\r\n   * @param {string} embedRule.GeneratorUrl - Embeddings generator URL (default is localhost).\r\n   * @param {string} embedRule.GeneratorApiKey - Embeddings provider API key (default is null).\r\n   * @param {number} embedRule.BatchSize - Maximum number of chunks to process per request (default is 16).\r\n   * @param {number} embedRule.MaxGeneratorTasks - Maximum number of parallel embeddings generation tasks (default is 16).\r\n   * @param {number} embedRule.MaxRetries - Maximum number of retries per task (default is 3).\r\n   * @param {number} embedRule.MaxFailures - Maximum number of failures before failing the operation (default is 3).\r\n   * @param {string} embedRule.VectorStoreUrl - Vector store URL (default is localhost).\r\n   * @param {number} embedRule.MaxContentLength - Maximum content length (default is 16 * 1024 * 1024).\r\n   * @param {number|null} embedRule.RetentionMinutes - Minutes to retain the generated document (default is null).\r\n   * @param {Date} embedRule.CreatedUtc - Creation timestamp (default is current UTC time).\r\n   * @param {Object} vectorRepo - Vector repository.\r\n   * @param {string} vectorRepo.GUID - Repository GUID (automatically generated if not provided).\r\n   * @param {string} vectorRepo.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} vectorRepo.name - Name of the repository (default is 'My vector repository').\r\n   * @param {string} vectorRepo.repositoryType - Type of vector repository.\r\n   * @param {string} vectorRepo.endpointUrl - Endpoint URL for the repository.\r\n   * @param {string} vectorRepo.apiKey - API key for authentication.\r\n   * @param {string} vectorRepo.model - Embedding model to be used (default is 'all-MiniLM-L6-v2').\r\n   * @param {number} vectorRepo.dimensionality - Dimensionality of embeddings.\r\n   * @param {string} vectorRepo.databaseHostname - Hostname of the database.\r\n   * @param {string} vectorRepo.databaseName - Name of the database.\r\n   * @param {string} vectorRepo.databaseTable - Table name in the database.\r\n   * @param {number} vectorRepo.databasePort - Database port.\r\n   * @param {string} vectorRepo.databaseUser - Database username.\r\n   * @param {string} vectorRepo.databasePassword - Database password.\r\n   * @param {string} vectorRepo.promptPrefix - Prefix to prepend to prompts.\r\n   * @param {string} vectorRepo.promptSuffix - Suffix to append to prompts.\r\n   * @param {Date} vectorRepo.createdUtc - Creation timestamp in UTC.\r\n   * @param {Object} graphRepo - Graph repository.\r\n   * @param {string} graphRepo.GUID - GUID of the graph repository (auto-generated if not provided).\r\n   * @param {string} graphRepo.TenantGUID - Tenant GUID (auto-generated if not provided).\r\n   * @param {string} graphRepo.Name - Name of the graph.\r\n   * @param {string} graphRepo.RepositoryType - Type of graph graph.\r\n   * @param {string} graphRepo.EndpointUrl - Endpoint URL.\r\n   * @param {string} graphRepo.ApiKey - API key for the graph.\r\n   * @param {string} graphRepo.Username - Username for authentication.\r\n   * @param {string} graphRepo.Password - Password for authentication.\r\n   * @param {string} graphRepo.Hostname - Hostname for the graph.\r\n   * @param {number} graphRepo.Port - Port number for the graph (default is 0).\r\n   * @param {string} graphRepo.GraphIdentifier - Identifier of the graph.\r\n   * @param {Date} graphRepo.CreatedUtc - Creation timestamp in UTC (defaults to current UTC time).\r\n   * @param {AbortSignal} [token] - Cancellation token.\r\n   */",
      "meta": {
        "range": [
          7812,
          9942
        ],
        "filename": "ViewLexiEmbeddingsSdk.js",
        "lineno": 113,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100013114",
          "name": "processLexiEmbeddings",
          "type": "ClassProperty"
        }
      },
      "description": "Process Lexi Embeddings document.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Tenant metadata.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Tenant ID (defaults to 0, throws error if set to less than 1).",
          "name": "tenant.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's unique identifier (automatically generated if not provided).",
          "name": "tenant.GUID"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "Parent tenant's GUID (optional).",
          "name": "tenant.ParentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's name (default is an empty string).",
          "name": "tenant.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Region for the tenant (default: 'us-west-1').",
          "name": "tenant.Region"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 base domain for the tenant.",
          "name": "tenant.S3BaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "REST base domain for the tenant.",
          "name": "tenant.RestBaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Default pool's unique identifier for the tenant.",
          "name": "tenant.DefaultPoolGUID"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether the tenant is active (default: true).",
          "name": "tenant.Active"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (default: current time).",
          "name": "tenant.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Collection metadata.",
          "name": "collection"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Collection ID.",
          "name": "collection.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Collection GUID (automatically generated if not provided).",
          "name": "collection.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "collection.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the collection.",
          "name": "collection.Name"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates whether source documents can be overwritten (default is true).",
          "name": "collection.AllowOverwrites"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Additional data (optional).",
          "name": "collection.AdditionalData"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "collection.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Search results.",
          "name": "results"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if the parser was successful.",
          "name": "results.Success"
        },
        {
          "type": {
            "names": [
              "Timestamp"
            ]
          },
          "description": "Timestamps.",
          "name": "results.Timestamp"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data flow request GUID.",
          "name": "results.DataFlowRequestGUID"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Boolean indicating end of results.",
          "name": "results.EndOfResults"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Continuation token for search continuation.",
          "name": "results.ContinuationToken"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Number of candidate records remaining in the search.",
          "name": "results.RecordsRemaining"
        },
        {
          "type": {
            "names": [
              "Array.<Object>"
            ]
          },
          "description": "Documents that matched the query.",
          "name": "results.Documents"
        },
        {
          "type": {
            "names": [
              "Array.<Object>"
            ]
          },
          "description": "Embeddings documents generated from matched documents.",
          "name": "results.Embeddings"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Embeddings rule.",
          "name": "embedRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings rule GUID (automatically generated if not provided).",
          "name": "embedRule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (default is null).",
          "name": "embedRule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (default is null).",
          "name": "embedRule.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "embedRule.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the rule (default is null).",
          "name": "embedRule.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content type (default is \"text/plain\").",
          "name": "embedRule.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix (default is null).",
          "name": "embedRule.Prefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix (default is null).",
          "name": "embedRule.Suffix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Target bucket GUID (default is null).",
          "name": "embedRule.TargetBucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository GUID (default is null).",
          "name": "embedRule.GraphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector repository GUID (default is null).",
          "name": "embedRule.VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data flow endpoint (default is localhost).",
          "name": "embedRule.DataFlowEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings generator (default is EmbeddingsGeneratorEnum.LCProxy).",
          "name": "embedRule.EmbeddingsGenerator"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings generator URL (default is localhost).",
          "name": "embedRule.GeneratorUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings provider API key (default is null).",
          "name": "embedRule.GeneratorApiKey"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of chunks to process per request (default is 16).",
          "name": "embedRule.BatchSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of parallel embeddings generation tasks (default is 16).",
          "name": "embedRule.MaxGeneratorTasks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of retries per task (default is 3).",
          "name": "embedRule.MaxRetries"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of failures before failing the operation (default is 3).",
          "name": "embedRule.MaxFailures"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector store URL (default is localhost).",
          "name": "embedRule.VectorStoreUrl"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum content length (default is 16 * 1024 * 1024).",
          "name": "embedRule.MaxContentLength"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Minutes to retain the generated document (default is null).",
          "name": "embedRule.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp (default is current UTC time).",
          "name": "embedRule.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Vector repository.",
          "name": "vectorRepo"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository GUID (automatically generated if not provided).",
          "name": "vectorRepo.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "vectorRepo.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository (default is 'My vector repository').",
          "name": "vectorRepo.name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of vector repository.",
          "name": "vectorRepo.repositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL for the repository.",
          "name": "vectorRepo.endpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "API key for authentication.",
          "name": "vectorRepo.apiKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embedding model to be used (default is 'all-MiniLM-L6-v2').",
          "name": "vectorRepo.model"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Dimensionality of embeddings.",
          "name": "vectorRepo.dimensionality"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname of the database.",
          "name": "vectorRepo.databaseHostname"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the database.",
          "name": "vectorRepo.databaseName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Table name in the database.",
          "name": "vectorRepo.databaseTable"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Database port.",
          "name": "vectorRepo.databasePort"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Database username.",
          "name": "vectorRepo.databaseUser"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Database password.",
          "name": "vectorRepo.databasePassword"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix to prepend to prompts.",
          "name": "vectorRepo.promptPrefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix to append to prompts.",
          "name": "vectorRepo.promptSuffix"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "vectorRepo.createdUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Graph repository.",
          "name": "graphRepo"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the graph repository (auto-generated if not provided).",
          "name": "graphRepo.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (auto-generated if not provided).",
          "name": "graphRepo.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the graph.",
          "name": "graphRepo.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of graph graph.",
          "name": "graphRepo.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL.",
          "name": "graphRepo.EndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "API key for the graph.",
          "name": "graphRepo.ApiKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Username for authentication.",
          "name": "graphRepo.Username"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Password for authentication.",
          "name": "graphRepo.Password"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname for the graph.",
          "name": "graphRepo.Hostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Port number for the graph (default is 0).",
          "name": "graphRepo.Port"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Identifier of the graph.",
          "name": "graphRepo.GraphIdentifier"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (defaults to current UTC time).",
          "name": "graphRepo.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Cancellation token.",
          "name": "token"
        }
      ],
      "name": "processLexiEmbeddings",
      "longname": "module.exports#processLexiEmbeddings",
      "kind": "member",
      "memberof": "module.exports",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Constructs a new ProcessorApi.\r\n   * @alias module:base/ProcessorApi\r\n   * @class\r\n   * @param {string} tenantGuid\r\n   * @param {string} accessKey\r\n   * @param {string} endpoint\r\n   */",
      "meta": {
        "range": [
          703,
          799
        ],
        "filename": "ViewProcessorSdk.js",
        "lineno": 18,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100013356",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new ProcessorApi.",
      "alias": "module:base/ProcessorApi",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "endpoint"
        }
      ],
      "name": "module:base/ProcessorApi",
      "longname": "module:base/ProcessorApi",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Process a document. This variant is used by the storage server.\r\n   * @param {Object} tenant - Tenant metadata.\r\n   * @param {number} tenant.id - Tenant ID (defaults to 0, throws error if set to less than 1).\r\n   * @param {string} tenant.GUID - Tenant's unique identifier (automatically generated if not provided).\r\n   * @param {string|null} tenant.ParentGUID - Parent tenant's GUID (optional).\r\n   * @param {string} tenant.Name - Tenant's name (default is an empty string).\r\n   * @param {string} tenant.Region - Region for the tenant (default: 'us-west-1').\r\n   * @param {string} tenant.S3BaseDomain - S3 base domain for the tenant.\r\n   * @param {string} tenant.RestBaseDomain - REST base domain for the tenant.\r\n   * @param {string} tenant.DefaultPoolGUID - Default pool's unique identifier for the tenant.\r\n   * @param {boolean} tenant.Active - Whether the tenant is active (default: true).\r\n   * @param {Date} tenant.CreatedUtc - Creation timestamp in UTC (default: current time).\r\n   * @param {Object} collection - Collection metadata.\r\n   * @param {number} collection.id - Collection ID.\r\n   * @param {string} collection.GUID - Collection GUID (automatically generated if not provided).\r\n   * @param {string} collection.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} collection.Name - Name of the collection.\r\n   * @param {boolean} collection.AllowOverwrites - Indicates whether source documents can be overwritten (default is true).\r\n   * @param {string} collection.AdditionalData - Additional data (optional).\r\n   * @param {Date} collection.CreatedUtc - Creation timestamp in UTC.\r\n   * @param {Object} pool - Storage pool metadata.\r\n   * @param {number} pool.id - Database row ID.\r\n   * @param {string} pool.GUID - Storage pool GUID (automatically generated if not provided).\r\n   * @param {string} pool.TenantGUID - Tenant GUID.\r\n   * @param {string} pool.EncryptionKeyGUID - Encryption key GUID.\r\n   * @param {string} pool.Name - Name of the storage pool.\r\n   * @param {string} pool.Provider - Provider of the storage pool (default is 'Disk').\r\n   * @param {string} pool.WriteMode - Object key write mode.\r\n   * @param {boolean} pool.UseSsl - Enable or disable SSL.\r\n   * @param {string} pool.Endpoint - Endpoint URL for the storage pool provider.\r\n   * @param {string} pool.AccessKey - Access key.\r\n   * @param {string} pool.SecretKey - Secret key.\r\n   * @param {string} pool.AwsRegion - AWS region.\r\n   * @param {string} pool.AwsBucket - AWS bucket.\r\n   * @param {string} pool.AwsBaseDomain - Base URL for AWS S3 compatible storage platforms.\r\n   * @param {string} pool.AwsBaseUrl - Base URL to use for objects.\r\n   * @param {string} pool.DiskDirectory - Disk directory.\r\n   * @param {string} pool.AzureAccount - Azure account.\r\n   * @param {string} pool.AzureContainer - Azure container.\r\n   * @param {string} pool.Compress - Compression type.\r\n   * @param {boolean} pool.EnableReadCaching - Flag to enable or disable read caching.\r\n   * @param {Date} pool.CreatedUtc - Creation timestamp in UTC.\r\n   * @param {Object} bucket - Bucket metadata.\r\n   * @param {number} bucket.id - Bucket ID.\r\n   * @param {string} bucket.GUID - Bucket GUID (automatically generated if not provided).\r\n   * @param {string} bucket.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} bucket.PoolGUID - Pool GUID (automatically generated if not provided).\r\n   * @param {string} bucket.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} bucket.Category - Bucket category.\r\n   * @param {string} bucket.Name - Name of the bucket.\r\n   * @param {string} bucket.RegionString - Region string (default is 'us-west-1').\r\n   * @param {boolean} bucket.Versioning - Enable or disable versioning (default is true).\r\n   * @param {number|null} bucket.RetentionMinutes - Retention in minutes (optional).\r\n   * @param {number|null} bucket.MaxUploadSize - Maximum upload size (optional).\r\n   * @param {number} bucket.MaxMultipartUploadSeconds - Maximum multipart upload seconds (default is seven days).\r\n   * @param {Date} bucket.LastAccessUtc - Last access timestamp in UTC.\r\n   * @param {Date} bucket.CreatedUtc - Created timestamp in UTC.\r\n   * @param {Object} bucket.Owner Information about the credential.\r\n   * @param {string} bucket.Owner.GUID - User's unique identifier (automatically generated if not provided).\r\n   * @param {string} bucket.Owner.TenantGUID - Tenant's unique identifier (automatically generated if not provided).\r\n   * @param {string} bucket.Owner.FirstName - User's first name.\r\n   * @param {string} bucket.Owner.LastName - User's last name.\r\n   * @param {string} bucket.Owner.Notes - Any additional notes for the user.\r\n   * @param {string} bucket.Owner.Email - User's email address.\r\n   * @param {string} bucket.Owner.PasswordSha256 - SHA-256 hashed password (not serialized).\r\n   * @param {boolean} bucket.Owner.Active - Whether the user is active (default: true).\r\n   * @param {Date} bucket.Owner.CreatedUtc - Date and time the user was created (in UTC, default: current time).\r\n   * @param {Object} obj - Object metadata.\r\n   * @param {string} obj.guid - The GUID of the object.\r\n   * @param {string} obj.parentGUID - The parent GUID.\r\n   * @param {string} obj.tenantGUID - The tenant GUID.\r\n   * @param {string} obj.tenantName - The tenant name.\r\n   * @param {string} obj.nodeGUID - The node GUID.\r\n   * @param {string} obj.poolGUID - The pool GUID.\r\n   * @param {string} obj.bucketGUID - The bucket GUID.\r\n   * @param {string} obj.bucketName - The bucket name.\r\n   * @param {string} obj.ownerGUID - The owner GUID.\r\n   * @param {string} obj.encryptionKeyGUID - The encryption key GUID.\r\n   * @param {string} obj.dataCatalogDocumentGUID - The data catalog document GUID.\r\n   * @param {string} obj.dataRepositoryGUID - The data repository GUID.\r\n   * @param {string} obj.graphRepositoryGUID - The graph repository GUID.\r\n   * @param {string} obj.graphNodeIdentifier - The graph node identifier.\r\n   * @param {string} obj.dataFlowRequestGUID - The data flow request GUID.\r\n   * @param {string} obj.key - The key.\r\n   * @param {string} obj.version - The version.\r\n   * @param {boolean} obj.isLatest - Indicates if this is the latest version.\r\n   * @param {boolean} obj.isDeleteMarker - Indicates if this is a delete marker.\r\n   * @param {boolean} obj.isLocal - Indicates if the object is local.\r\n   * @param {string} obj.contentType - The content type.\r\n   * @param {DocumentTypeEnum} obj.documentType - The document type.\r\n   * @param {number} obj.contentLength - The length of the content.\r\n   * @param {string} obj.sourceUrl - The source URL.\r\n   * @param {string} obj.md5Hash - The MD5 hash.\r\n   * @param {string} obj.sha1Hash - The SHA1 hash.\r\n   * @param {string} obj.sha256Hash - The SHA256 hash.\r\n   * @param {Date|null} obj.expirationUtc - The expiration timestamp in UTC.\r\n   * @param {Date} obj.lastAccessUtc - The last access timestamp in UTC.\r\n   * @param {Date} obj.lastModifiedUtc - The last modified timestamp in UTC.\r\n   * @param {Date} obj.createdUtc - The creation timestamp in UTC.\r\n   * @param {byte[]} obj.data - The data of the object.\r\n   * @param {Object} mdRule - Metadata rule.\r\n   * @param {string} mdRule.GUID - Metadata rule GUID (automatically generated if not provided).\r\n   * @param {string} mdRule.TenantGUID - Tenant GUID (default is null).\r\n   * @param {string} mdRule.BucketGUID - Bucket GUID (default is null).\r\n   * @param {string} mdRule.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} mdRule.Name - Name of the rule (default is null).\r\n   * @param {string} mdRule.ContentType - Content type (default is \"text/plain\").\r\n   * @param {string} mdRule.Prefix - Prefix (default is null).\r\n   * @param {string} mdRule.Suffix - Suffix (default is null).\r\n   * @param {string} mdRule.ProcessingEndpoint - Processing endpoint (default is localhost).\r\n   * @param {string} mdRule.CleanupEndpoint - Cleanup endpoint (default is localhost).\r\n   * @param {string} mdRule.TypeDetectorEndpoint - Type detector endpoint (default is localhost).\r\n   * @param {string} mdRule.SemanticCellEndpoint - Semantic cell endpoint (default is localhost).\r\n   * @param {number} mdRule.MaxChunkContentLength - Maximum chunk content length (default is 512).\r\n   * @param {number} mdRule.ShiftSize - Shift size (default is 512).\r\n   * @param {string} mdRule.UdrEndpoint - UDR endpoint (default is localhost).\r\n   * @param {string} mdRule.DataCatalogType - Data catalog type (default is DataCatalogTypeEnum.Lexi).\r\n   * @param {string} mdRule.DataCatalogEndpoint - Data catalog endpoint (default is localhost).\r\n   * @param {string} mdRule.DataCatalogCollection - Data catalog collection identifier (default is null).\r\n   * @param {string} mdRule.GraphRepositoryGUID - Graph repository GUID (default is null).\r\n   * @param {number} mdRule.TopTerms - Number of top terms to request (default is 25).\r\n   * @param {boolean} mdRule.CaseInsensitive - Enable case insensitive processing (default is true).\r\n   * @param {boolean} mdRule.IncludeFlattened - Enable inclusion of flattened representation (default is true).\r\n   * @param {string} mdRule.TargetBucketGUID - Target bucket GUID (default is null).\r\n   * @param {number} mdRule.MaxContentLength - Maximum content length (default is 16 * 1024 * 1024).\r\n   * @param {number|null} mdRule.RetentionMinutes - Minutes to retain generated document (default is null).\r\n   * @param {Date} mdRule.CreatedUtc - Creation timestamp (default is current UTC time).\r\n   * @param {Object} embedRule - Embeddings rule.\r\n   * @param {string} embedRule.GUID - Embeddings rule GUID (automatically generated if not provided).\r\n   * @param {string} embedRule.TenantGUID - Tenant GUID (default is null).\r\n   * @param {string} embedRule.BucketGUID - Bucket GUID (default is null).\r\n   * @param {string} embedRule.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} embedRule.Name - Name of the rule (default is null).\r\n   * @param {string} embedRule.ContentType - Content type (default is \"text/plain\").\r\n   * @param {string} embedRule.Prefix - Prefix (default is null).\r\n   * @param {string} embedRule.Suffix - Suffix (default is null).\r\n   * @param {string} embedRule.TargetBucketGUID - Target bucket GUID (default is null).\r\n   * @param {string} embedRule.GraphRepositoryGUID - Graph repository GUID (default is null).\r\n   * @param {string} embedRule.VectorRepositoryGUID - Vector repository GUID (default is null).\r\n   * @param {string} embedRule.DataFlowEndpoint - Data flow endpoint (default is localhost).\r\n   * @param {string} embedRule.EmbeddingsGenerator - Embeddings generator (default is EmbeddingsGeneratorEnum.LCProxy).\r\n   * @param {string} embedRule.GeneratorUrl - Embeddings generator URL (default is localhost).\r\n   * @param {string} embedRule.GeneratorApiKey - Embeddings provider API key (default is null).\r\n   * @param {number} embedRule.BatchSize - Maximum number of chunks to process per request (default is 16).\r\n   * @param {number} embedRule.MaxGeneratorTasks - Maximum number of parallel embeddings generation tasks (default is 16).\r\n   * @param {number} embedRule.MaxRetries - Maximum number of retries per task (default is 3).\r\n   * @param {number} embedRule.MaxFailures - Maximum number of failures before failing the operation (default is 3).\r\n   * @param {string} embedRule.VectorStoreUrl - Vector store URL (default is localhost).\r\n   * @param {number} embedRule.MaxContentLength - Maximum content length (default is 16 * 1024 * 1024).\r\n   * @param {number|null} embedRule.RetentionMinutes - Minutes to retain the generated document (default is null).\r\n   * @param {Date} embedRule.CreatedUtc - Creation timestamp (default is current UTC time).\r\n   * @param {Object} vectorRepo - Vector repository.\r\n   * @param {string} vectorRepo.GUID - Repository GUID (automatically generated if not provided).\r\n   * @param {string} vectorRepo.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} vectorRepo.name - Name of the repository (default is 'My vector repository').\r\n   * @param {string} vectorRepo.repositoryType - Type of vector repository.\r\n   * @param {string} vectorRepo.endpointUrl - Endpoint URL for the repository.\r\n   * @param {string} vectorRepo.apiKey - API key for authentication.\r\n   * @param {string} vectorRepo.model - Embedding model to be used (default is 'all-MiniLM-L6-v2').\r\n   * @param {number} vectorRepo.dimensionality - Dimensionality of embeddings.\r\n   * @param {string} vectorRepo.databaseHostname - Hostname of the database.\r\n   * @param {string} vectorRepo.databaseName - Name of the database.\r\n   * @param {string} vectorRepo.databaseTable - Table name in the database.\r\n   * @param {number} vectorRepo.databasePort - Database port.\r\n   * @param {string} vectorRepo.databaseUser - Database username.\r\n   * @param {string} vectorRepo.databasePassword - Database password.\r\n   * @param {string} vectorRepo.promptPrefix - Prefix to prepend to prompts.\r\n   * @param {string} vectorRepo.promptSuffix - Suffix to append to prompts.\r\n   * @param {Date} vectorRepo.createdUtc - Creation timestamp in UTC.\r\n   * @param {Object} graphRepo - Graph repository.\r\n   * @param {string} graphRepo.GUID - GUID of the graph repository (auto-generated if not provided).\r\n   * @param {string} graphRepo.TenantGUID - Tenant GUID (auto-generated if not provided).\r\n   * @param {string} graphRepo.Name - Name of the graph.\r\n   * @param {string} graphRepo.RepositoryType - Type of graph graph.\r\n   * @param {string} graphRepo.EndpointUrl - Endpoint URL.\r\n   * @param {string} graphRepo.ApiKey - API key for the graph.\r\n   * @param {string} graphRepo.Username - Username for authentication.\r\n   * @param {string} graphRepo.Password - Password for authentication.\r\n   * @param {string} graphRepo.Hostname - Hostname for the graph.\r\n   * @param {number} graphRepo.Port - Port number for the graph (default is 0).\r\n   * @param {string} graphRepo.GraphIdentifier - Identifier of the graph.\r\n   * @param {Date} graphRepo.CreatedUtc - Creation timestamp in UTC (defaults to current UTC time).\r\n   * @param {AbortSignal} token - Cancellation token.\r\n   */",
      "meta": {
        "range": [
          15195,
          17094
        ],
        "filename": "ViewProcessorSdk.js",
        "lineno": 213,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100013369",
          "name": "processStorageServer",
          "type": "MethodDefinition",
          "paramnames": [
            "tenant",
            "collection",
            "pool",
            "bucket",
            "obj",
            "mdRule",
            "embedRule",
            "vectorRepo",
            "graphRepo",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process a document. This variant is used by the storage server.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Tenant metadata.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Tenant ID (defaults to 0, throws error if set to less than 1).",
          "name": "tenant.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's unique identifier (automatically generated if not provided).",
          "name": "tenant.GUID"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "Parent tenant's GUID (optional).",
          "name": "tenant.ParentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's name (default is an empty string).",
          "name": "tenant.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Region for the tenant (default: 'us-west-1').",
          "name": "tenant.Region"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 base domain for the tenant.",
          "name": "tenant.S3BaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "REST base domain for the tenant.",
          "name": "tenant.RestBaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Default pool's unique identifier for the tenant.",
          "name": "tenant.DefaultPoolGUID"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether the tenant is active (default: true).",
          "name": "tenant.Active"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (default: current time).",
          "name": "tenant.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Collection metadata.",
          "name": "collection"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Collection ID.",
          "name": "collection.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Collection GUID (automatically generated if not provided).",
          "name": "collection.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "collection.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the collection.",
          "name": "collection.Name"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates whether source documents can be overwritten (default is true).",
          "name": "collection.AllowOverwrites"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Additional data (optional).",
          "name": "collection.AdditionalData"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "collection.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Storage pool metadata.",
          "name": "pool"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Database row ID.",
          "name": "pool.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Storage pool GUID (automatically generated if not provided).",
          "name": "pool.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID.",
          "name": "pool.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Encryption key GUID.",
          "name": "pool.EncryptionKeyGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the storage pool.",
          "name": "pool.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Provider of the storage pool (default is 'Disk').",
          "name": "pool.Provider"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object key write mode.",
          "name": "pool.WriteMode"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable or disable SSL.",
          "name": "pool.UseSsl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL for the storage pool provider.",
          "name": "pool.Endpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key.",
          "name": "pool.AccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Secret key.",
          "name": "pool.SecretKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "AWS region.",
          "name": "pool.AwsRegion"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "AWS bucket.",
          "name": "pool.AwsBucket"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Base URL for AWS S3 compatible storage platforms.",
          "name": "pool.AwsBaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Base URL to use for objects.",
          "name": "pool.AwsBaseUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Disk directory.",
          "name": "pool.DiskDirectory"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure account.",
          "name": "pool.AzureAccount"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure container.",
          "name": "pool.AzureContainer"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Compression type.",
          "name": "pool.Compress"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Flag to enable or disable read caching.",
          "name": "pool.EnableReadCaching"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "pool.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Bucket metadata.",
          "name": "bucket"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Bucket ID.",
          "name": "bucket.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (automatically generated if not provided).",
          "name": "bucket.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "bucket.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Pool GUID (automatically generated if not provided).",
          "name": "bucket.PoolGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "bucket.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket category.",
          "name": "bucket.Category"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the bucket.",
          "name": "bucket.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Region string (default is 'us-west-1').",
          "name": "bucket.RegionString"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable or disable versioning (default is true).",
          "name": "bucket.Versioning"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Retention in minutes (optional).",
          "name": "bucket.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Maximum upload size (optional).",
          "name": "bucket.MaxUploadSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum multipart upload seconds (default is seven days).",
          "name": "bucket.MaxMultipartUploadSeconds"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Last access timestamp in UTC.",
          "name": "bucket.LastAccessUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Created timestamp in UTC.",
          "name": "bucket.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the credential.",
          "name": "bucket.Owner"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's unique identifier (automatically generated if not provided).",
          "name": "bucket.Owner.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's unique identifier (automatically generated if not provided).",
          "name": "bucket.Owner.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's first name.",
          "name": "bucket.Owner.FirstName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's last name.",
          "name": "bucket.Owner.LastName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Any additional notes for the user.",
          "name": "bucket.Owner.Notes"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's email address.",
          "name": "bucket.Owner.Email"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "SHA-256 hashed password (not serialized).",
          "name": "bucket.Owner.PasswordSha256"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether the user is active (default: true).",
          "name": "bucket.Owner.Active"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Date and time the user was created (in UTC, default: current time).",
          "name": "bucket.Owner.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Object metadata.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the object.",
          "name": "obj.guid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The parent GUID.",
          "name": "obj.parentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The tenant GUID.",
          "name": "obj.tenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The tenant name.",
          "name": "obj.tenantName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The node GUID.",
          "name": "obj.nodeGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The pool GUID.",
          "name": "obj.poolGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The bucket GUID.",
          "name": "obj.bucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The bucket name.",
          "name": "obj.bucketName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The owner GUID.",
          "name": "obj.ownerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The encryption key GUID.",
          "name": "obj.encryptionKeyGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The data catalog document GUID.",
          "name": "obj.dataCatalogDocumentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The data repository GUID.",
          "name": "obj.dataRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The graph repository GUID.",
          "name": "obj.graphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The graph node identifier.",
          "name": "obj.graphNodeIdentifier"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The data flow request GUID.",
          "name": "obj.dataFlowRequestGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key.",
          "name": "obj.key"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The version.",
          "name": "obj.version"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if this is the latest version.",
          "name": "obj.isLatest"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if this is a delete marker.",
          "name": "obj.isDeleteMarker"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if the object is local.",
          "name": "obj.isLocal"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The content type.",
          "name": "obj.contentType"
        },
        {
          "type": {
            "names": [
              "DocumentTypeEnum"
            ]
          },
          "description": "The document type.",
          "name": "obj.documentType"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The length of the content.",
          "name": "obj.contentLength"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The source URL.",
          "name": "obj.sourceUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The MD5 hash.",
          "name": "obj.md5Hash"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The SHA1 hash.",
          "name": "obj.sha1Hash"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The SHA256 hash.",
          "name": "obj.sha256Hash"
        },
        {
          "type": {
            "names": [
              "Date",
              "null"
            ]
          },
          "description": "The expiration timestamp in UTC.",
          "name": "obj.expirationUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "The last access timestamp in UTC.",
          "name": "obj.lastAccessUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "The last modified timestamp in UTC.",
          "name": "obj.lastModifiedUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "The creation timestamp in UTC.",
          "name": "obj.createdUtc"
        },
        {
          "type": {
            "names": [
              "Array.<byte>"
            ]
          },
          "description": "The data of the object.",
          "name": "obj.data"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Metadata rule.",
          "name": "mdRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Metadata rule GUID (automatically generated if not provided).",
          "name": "mdRule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (default is null).",
          "name": "mdRule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (default is null).",
          "name": "mdRule.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "mdRule.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the rule (default is null).",
          "name": "mdRule.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content type (default is \"text/plain\").",
          "name": "mdRule.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix (default is null).",
          "name": "mdRule.Prefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix (default is null).",
          "name": "mdRule.Suffix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Processing endpoint (default is localhost).",
          "name": "mdRule.ProcessingEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Cleanup endpoint (default is localhost).",
          "name": "mdRule.CleanupEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type detector endpoint (default is localhost).",
          "name": "mdRule.TypeDetectorEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Semantic cell endpoint (default is localhost).",
          "name": "mdRule.SemanticCellEndpoint"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum chunk content length (default is 512).",
          "name": "mdRule.MaxChunkContentLength"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Shift size (default is 512).",
          "name": "mdRule.ShiftSize"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "UDR endpoint (default is localhost).",
          "name": "mdRule.UdrEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog type (default is DataCatalogTypeEnum.Lexi).",
          "name": "mdRule.DataCatalogType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog endpoint (default is localhost).",
          "name": "mdRule.DataCatalogEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog collection identifier (default is null).",
          "name": "mdRule.DataCatalogCollection"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository GUID (default is null).",
          "name": "mdRule.GraphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Number of top terms to request (default is 25).",
          "name": "mdRule.TopTerms"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable case insensitive processing (default is true).",
          "name": "mdRule.CaseInsensitive"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable inclusion of flattened representation (default is true).",
          "name": "mdRule.IncludeFlattened"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Target bucket GUID (default is null).",
          "name": "mdRule.TargetBucketGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum content length (default is 16 * 1024 * 1024).",
          "name": "mdRule.MaxContentLength"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Minutes to retain generated document (default is null).",
          "name": "mdRule.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp (default is current UTC time).",
          "name": "mdRule.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Embeddings rule.",
          "name": "embedRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings rule GUID (automatically generated if not provided).",
          "name": "embedRule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (default is null).",
          "name": "embedRule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (default is null).",
          "name": "embedRule.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "embedRule.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the rule (default is null).",
          "name": "embedRule.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content type (default is \"text/plain\").",
          "name": "embedRule.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix (default is null).",
          "name": "embedRule.Prefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix (default is null).",
          "name": "embedRule.Suffix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Target bucket GUID (default is null).",
          "name": "embedRule.TargetBucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository GUID (default is null).",
          "name": "embedRule.GraphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector repository GUID (default is null).",
          "name": "embedRule.VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data flow endpoint (default is localhost).",
          "name": "embedRule.DataFlowEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings generator (default is EmbeddingsGeneratorEnum.LCProxy).",
          "name": "embedRule.EmbeddingsGenerator"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings generator URL (default is localhost).",
          "name": "embedRule.GeneratorUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings provider API key (default is null).",
          "name": "embedRule.GeneratorApiKey"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of chunks to process per request (default is 16).",
          "name": "embedRule.BatchSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of parallel embeddings generation tasks (default is 16).",
          "name": "embedRule.MaxGeneratorTasks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of retries per task (default is 3).",
          "name": "embedRule.MaxRetries"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of failures before failing the operation (default is 3).",
          "name": "embedRule.MaxFailures"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector store URL (default is localhost).",
          "name": "embedRule.VectorStoreUrl"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum content length (default is 16 * 1024 * 1024).",
          "name": "embedRule.MaxContentLength"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Minutes to retain the generated document (default is null).",
          "name": "embedRule.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp (default is current UTC time).",
          "name": "embedRule.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Vector repository.",
          "name": "vectorRepo"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository GUID (automatically generated if not provided).",
          "name": "vectorRepo.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "vectorRepo.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository (default is 'My vector repository').",
          "name": "vectorRepo.name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of vector repository.",
          "name": "vectorRepo.repositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL for the repository.",
          "name": "vectorRepo.endpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "API key for authentication.",
          "name": "vectorRepo.apiKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embedding model to be used (default is 'all-MiniLM-L6-v2').",
          "name": "vectorRepo.model"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Dimensionality of embeddings.",
          "name": "vectorRepo.dimensionality"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname of the database.",
          "name": "vectorRepo.databaseHostname"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the database.",
          "name": "vectorRepo.databaseName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Table name in the database.",
          "name": "vectorRepo.databaseTable"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Database port.",
          "name": "vectorRepo.databasePort"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Database username.",
          "name": "vectorRepo.databaseUser"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Database password.",
          "name": "vectorRepo.databasePassword"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix to prepend to prompts.",
          "name": "vectorRepo.promptPrefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix to append to prompts.",
          "name": "vectorRepo.promptSuffix"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "vectorRepo.createdUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Graph repository.",
          "name": "graphRepo"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the graph repository (auto-generated if not provided).",
          "name": "graphRepo.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (auto-generated if not provided).",
          "name": "graphRepo.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the graph.",
          "name": "graphRepo.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of graph graph.",
          "name": "graphRepo.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL.",
          "name": "graphRepo.EndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "API key for the graph.",
          "name": "graphRepo.ApiKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Username for authentication.",
          "name": "graphRepo.Username"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Password for authentication.",
          "name": "graphRepo.Password"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname for the graph.",
          "name": "graphRepo.Hostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Port number for the graph (default is 0).",
          "name": "graphRepo.Port"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Identifier of the graph.",
          "name": "graphRepo.GraphIdentifier"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (defaults to current UTC time).",
          "name": "graphRepo.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "description": "Cancellation token.",
          "name": "token"
        }
      ],
      "name": "processStorageServer",
      "longname": "processStorageServer",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Process a document. This variant is used by the data crawler.\r\n   * @param {Object} tenant - Tenant metadata.\r\n   * @param {number} tenant.id - Tenant ID (defaults to 0, throws error if set to less than 1).\r\n   * @param {string} tenant.GUID - Tenant's unique identifier (automatically generated if not provided).\r\n   * @param {string|null} tenant.ParentGUID - Parent tenant's GUID (optional).\r\n   * @param {string} tenant.Name - Tenant's name (default is an empty string).\r\n   * @param {string} tenant.Region - Region for the tenant (default: 'us-west-1').\r\n   * @param {string} tenant.S3BaseDomain - S3 base domain for the tenant.\r\n   * @param {string} tenant.RestBaseDomain - REST base domain for the tenant.\r\n   * @param {string} tenant.DefaultPoolGUID - Default pool's unique identifier for the tenant.\r\n   * @param {boolean} tenant.Active - Whether the tenant is active (default: true).\r\n   * @param {Date} tenant.CreatedUtc - Creation timestamp in UTC (default: current time).\r\n   * @param {Object} collection - Collection metadata.\r\n   * @param {number} collection.id - Collection ID.\r\n   * @param {string} collection.GUID - Collection GUID (automatically generated if not provided).\r\n   * @param {string} collection.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} collection.Name - Name of the collection.\r\n   * @param {boolean} collection.AllowOverwrites - Indicates whether source documents can be overwritten (default is true).\r\n   * @param {string} collection.AdditionalData - Additional data (optional).\r\n   * @param {Date} collection.CreatedUtc - Creation timestamp in UTC.\r\n   * @param {Object} repo - Data repository.\r\n   * @param {number} repo.Id - ID (must be greater than 0).\r\n   * @param {string} repo.GUID - Data repository GUID (automatically generated if not provided).\r\n   * @param {string} repo.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} repo.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} repo.Name - Name of the repository (default is \"My file repository\").\r\n   * @param {string} repo.RepositoryType - Repository type (default is DataRepositoryTypeEnum.File).\r\n   * @param {boolean} repo.UseSsl - Boolean flag to enable SSL (default is false).\r\n   * @param {boolean} repo.IncludeSubdirectories - Include subdirectories (default is true).\r\n   * @param {string} repo.DiskDirectory - Disk directory (default is null).\r\n   * @param {string} repo.S3EndpointUrl - S3 endpoint URL (default is null).\r\n   * @param {string} repo.S3BaseUrl - S3 base URL (default is null).\r\n   * @param {string} repo.S3AccessKey - S3 access key (default is null).\r\n   * @param {string} repo.S3SecretKey - S3 secret key (default is null).\r\n   * @param {string} repo.S3BucketName - S3 bucket name (default is null).\r\n   * @param {string} repo.S3Region - S3 region (default is null).\r\n   * @param {string} repo.AzureEndpointUrl - Azure endpoint URL (default is null).\r\n   * @param {string} repo.AzureAccountName - Azure account name (default is null).\r\n   * @param {string} repo.AzureContainerName - Azure container name (default is null).\r\n   * @param {string} repo.AzureAccessKey - Azure access key (default is null).\r\n   * @param {string} repo.CifsHostname - CIFS hostname (default is null).\r\n   * @param {string} repo.CifsUsername - CIFS username (default is null).\r\n   * @param {string} repo.CifsPassword - CIFS password (default is null).\r\n   * @param {string} repo.CifsShareName - CIFS share name (default is null).\r\n   * @param {string} repo.NfsHostname - NFS hostname (default is null).\r\n   * @param {number} repo.NfsUserId - NFS user ID (must be non-negative).\r\n   * @param {number} repo.NfsGroupId - NFS group ID (must be non-negative).\r\n   * @param {string} repo.NfsShareName - NFS share name (default is null).\r\n   * @param {string} repo.NfsVersion - NFS version (default is null).\r\n   * @param {Date} repo.CreatedUtc - Created timestamp (default is current UTC time).\r\n   * @param {Object} obj - Object metadata.\r\n   * @param {string} obj.guid - The GUID of the object.\r\n   * @param {string} obj.parentGUID - The parent GUID.\r\n   * @param {string} obj.tenantGUID - The tenant GUID.\r\n   * @param {string} obj.tenantName - The tenant name.\r\n   * @param {string} obj.nodeGUID - The node GUID.\r\n   * @param {string} obj.poolGUID - The pool GUID.\r\n   * @param {string} obj.bucketGUID - The bucket GUID.\r\n   * @param {string} obj.bucketName - The bucket name.\r\n   * @param {string} obj.ownerGUID - The owner GUID.\r\n   * @param {string} obj.encryptionKeyGUID - The encryption key GUID.\r\n   * @param {string} obj.dataCatalogDocumentGUID - The data catalog document GUID.\r\n   * @param {string} obj.dataRepositoryGUID - The data repository GUID.\r\n   * @param {string} obj.graphRepositoryGUID - The graph repository GUID.\r\n   * @param {string} obj.graphNodeIdentifier - The graph node identifier.\r\n   * @param {string} obj.dataFlowRequestGUID - The data flow request GUID.\r\n   * @param {string} obj.key - The key.\r\n   * @param {string} obj.version - The version.\r\n   * @param {boolean} obj.isLatest - Indicates if this is the latest version.\r\n   * @param {boolean} obj.isDeleteMarker - Indicates if this is a delete marker.\r\n   * @param {boolean} obj.isLocal - Indicates if the object is local.\r\n   * @param {string} obj.contentType - The content type.\r\n   * @param {DocumentTypeEnum} obj.documentType - The document type.\r\n   * @param {number} obj.contentLength - The length of the content.\r\n   * @param {string} obj.sourceUrl - The source URL.\r\n   * @param {string} obj.md5Hash - The MD5 hash.\r\n   * @param {string} obj.sha1Hash - The SHA1 hash.\r\n   * @param {string} obj.sha256Hash - The SHA256 hash.\r\n   * @param {Date|null} obj.expirationUtc - The expiration timestamp in UTC.\r\n   * @param {Date} obj.lastAccessUtc - The last access timestamp in UTC.\r\n   * @param {Date} obj.lastModifiedUtc - The last modified timestamp in UTC.\r\n   * @param {Date} obj.createdUtc - The creation timestamp in UTC.\r\n   * @param {byte[]} obj.data - The data of the object.\r\n   * @param {Object} mdRule - Metadata rule.\r\n   * @param {string} mdRule.GUID - Metadata rule GUID (automatically generated if not provided).\r\n   * @param {string} mdRule.TenantGUID - Tenant GUID (default is null).\r\n   * @param {string} mdRule.BucketGUID - Bucket GUID (default is null).\r\n   * @param {string} mdRule.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} mdRule.Name - Name of the rule (default is null).\r\n   * @param {string} mdRule.ContentType - Content type (default is \"text/plain\").\r\n   * @param {string} mdRule.Prefix - Prefix (default is null).\r\n   * @param {string} mdRule.Suffix - Suffix (default is null).\r\n   * @param {string} mdRule.ProcessingEndpoint - Processing endpoint (default is localhost).\r\n   * @param {string} mdRule.CleanupEndpoint - Cleanup endpoint (default is localhost).\r\n   * @param {string} mdRule.TypeDetectorEndpoint - Type detector endpoint (default is localhost).\r\n   * @param {string} mdRule.SemanticCellEndpoint - Semantic cell endpoint (default is localhost).\r\n   * @param {number} mdRule.MaxChunkContentLength - Maximum chunk content length (default is 512).\r\n   * @param {number} mdRule.ShiftSize - Shift size (default is 512).\r\n   * @param {string} mdRule.UdrEndpoint - UDR endpoint (default is localhost).\r\n   * @param {string} mdRule.DataCatalogType - Data catalog type (default is DataCatalogTypeEnum.Lexi).\r\n   * @param {string} mdRule.DataCatalogEndpoint - Data catalog endpoint (default is localhost).\r\n   * @param {string} mdRule.DataCatalogCollection - Data catalog collection identifier (default is null).\r\n   * @param {string} mdRule.GraphRepositoryGUID - Graph repository GUID (default is null).\r\n   * @param {number} mdRule.TopTerms - Number of top terms to request (default is 25).\r\n   * @param {boolean} mdRule.CaseInsensitive - Enable case insensitive processing (default is true).\r\n   * @param {boolean} mdRule.IncludeFlattened - Enable inclusion of flattened representation (default is true).\r\n   * @param {string} mdRule.TargetBucketGUID - Target bucket GUID (default is null).\r\n   * @param {number} mdRule.MaxContentLength - Maximum content length (default is 16 * 1024 * 1024).\r\n   * @param {number|null} mdRule.RetentionMinutes - Minutes to retain generated document (default is null).\r\n   * @param {Date} mdRule.CreatedUtc - Creation timestamp (default is current UTC time).\r\n   * @param {Object} embedRule - Embeddings rule.\r\n   * @param {string} embedRule.GUID - Embeddings rule GUID (automatically generated if not provided).\r\n   * @param {string} embedRule.TenantGUID - Tenant GUID (default is null).\r\n   * @param {string} embedRule.BucketGUID - Bucket GUID (default is null).\r\n   * @param {string} embedRule.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} embedRule.Name - Name of the rule (default is null).\r\n   * @param {string} embedRule.ContentType - Content type (default is \"text/plain\").\r\n   * @param {string} embedRule.Prefix - Prefix (default is null).\r\n   * @param {string} embedRule.Suffix - Suffix (default is null).\r\n   * @param {string} embedRule.TargetBucketGUID - Target bucket GUID (default is null).\r\n   * @param {string} embedRule.GraphRepositoryGUID - Graph repository GUID (default is null).\r\n   * @param {string} embedRule.VectorRepositoryGUID - Vector repository GUID (default is null).\r\n   * @param {string} embedRule.DataFlowEndpoint - Data flow endpoint (default is localhost).\r\n   * @param {string} embedRule.EmbeddingsGenerator - Embeddings generator (default is EmbeddingsGeneratorEnum.LCProxy).\r\n   * @param {string} embedRule.GeneratorUrl - Embeddings generator URL (default is localhost).\r\n   * @param {string} embedRule.GeneratorApiKey - Embeddings provider API key (default is null).\r\n   * @param {number} embedRule.BatchSize - Maximum number of chunks to process per request (default is 16).\r\n   * @param {number} embedRule.MaxGeneratorTasks - Maximum number of parallel embeddings generation tasks (default is 16).\r\n   * @param {number} embedRule.MaxRetries - Maximum number of retries per task (default is 3).\r\n   * @param {number} embedRule.MaxFailures - Maximum number of failures before failing the operation (default is 3).\r\n   * @param {string} embedRule.VectorStoreUrl - Vector store URL (default is localhost).\r\n   * @param {number} embedRule.MaxContentLength - Maximum content length (default is 16 * 1024 * 1024).\r\n   * @param {number|null} embedRule.RetentionMinutes - Minutes to retain the generated document (default is null).\r\n   * @param {Date} embedRule.CreatedUtc - Creation timestamp (default is current UTC time).\r\n   * @param {Object} vectorRepo - Vector repository.\r\n   * @param {string} vectorRepo.GUID - Repository GUID (automatically generated if not provided).\r\n   * @param {string} vectorRepo.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} vectorRepo.name - Name of the repository (default is 'My vector repository').\r\n   * @param {string} vectorRepo.repositoryType - Type of vector repository.\r\n   * @param {string} vectorRepo.endpointUrl - Endpoint URL for the repository.\r\n   * @param {string} vectorRepo.apiKey - API key for authentication.\r\n   * @param {string} vectorRepo.model - Embedding model to be used (default is 'all-MiniLM-L6-v2').\r\n   * @param {number} vectorRepo.dimensionality - Dimensionality of embeddings.\r\n   * @param {string} vectorRepo.databaseHostname - Hostname of the database.\r\n   * @param {string} vectorRepo.databaseName - Name of the database.\r\n   * @param {string} vectorRepo.databaseTable - Table name in the database.\r\n   * @param {number} vectorRepo.databasePort - Database port.\r\n   * @param {string} vectorRepo.databaseUser - Database username.\r\n   * @param {string} vectorRepo.databasePassword - Database password.\r\n   * @param {string} vectorRepo.promptPrefix - Prefix to prepend to prompts.\r\n   * @param {string} vectorRepo.promptSuffix - Suffix to append to prompts.\r\n   * @param {Date} vectorRepo.createdUtc - Creation timestamp in UTC.\r\n   * @param {Object} graphRepo - Graph repository.\r\n   * @param {string} graphRepo.GUID - GUID of the graph repository (auto-generated if not provided).\r\n   * @param {string} graphRepo.TenantGUID - Tenant GUID (auto-generated if not provided).\r\n   * @param {string} graphRepo.Name - Name of the graph.\r\n   * @param {string} graphRepo.RepositoryType - Type of graph graph.\r\n   * @param {string} graphRepo.EndpointUrl - Endpoint URL.\r\n   * @param {string} graphRepo.ApiKey - API key for the graph.\r\n   * @param {string} graphRepo.Username - Username for authentication.\r\n   * @param {string} graphRepo.Password - Password for authentication.\r\n   * @param {string} graphRepo.Hostname - Hostname for the graph.\r\n   * @param {number} graphRepo.Port - Port number for the graph (default is 0).\r\n   * @param {string} graphRepo.GraphIdentifier - Identifier of the graph.\r\n   * @param {Date} graphRepo.CreatedUtc - Creation timestamp in UTC (defaults to current UTC time).\r\n   * @param {AbortSignal} token - Cancellation token.\r\n   */",
      "meta": {
        "range": [
          30270,
          32103
        ],
        "filename": "ViewProcessorSdk.js",
        "lineno": 447,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100013558",
          "name": "processCrawler",
          "type": "MethodDefinition",
          "paramnames": [
            "tenant",
            "collection",
            "repo",
            "obj",
            "mdRule",
            "embedRule",
            "vectorRepo",
            "graphRepo",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process a document. This variant is used by the data crawler.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Tenant metadata.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Tenant ID (defaults to 0, throws error if set to less than 1).",
          "name": "tenant.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's unique identifier (automatically generated if not provided).",
          "name": "tenant.GUID"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "Parent tenant's GUID (optional).",
          "name": "tenant.ParentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's name (default is an empty string).",
          "name": "tenant.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Region for the tenant (default: 'us-west-1').",
          "name": "tenant.Region"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 base domain for the tenant.",
          "name": "tenant.S3BaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "REST base domain for the tenant.",
          "name": "tenant.RestBaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Default pool's unique identifier for the tenant.",
          "name": "tenant.DefaultPoolGUID"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether the tenant is active (default: true).",
          "name": "tenant.Active"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (default: current time).",
          "name": "tenant.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Collection metadata.",
          "name": "collection"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Collection ID.",
          "name": "collection.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Collection GUID (automatically generated if not provided).",
          "name": "collection.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "collection.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the collection.",
          "name": "collection.Name"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates whether source documents can be overwritten (default is true).",
          "name": "collection.AllowOverwrites"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Additional data (optional).",
          "name": "collection.AdditionalData"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "collection.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Data repository.",
          "name": "repo"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "ID (must be greater than 0).",
          "name": "repo.Id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data repository GUID (automatically generated if not provided).",
          "name": "repo.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "repo.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "repo.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository (default is \"My file repository\").",
          "name": "repo.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository type (default is DataRepositoryTypeEnum.File).",
          "name": "repo.RepositoryType"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Boolean flag to enable SSL (default is false).",
          "name": "repo.UseSsl"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Include subdirectories (default is true).",
          "name": "repo.IncludeSubdirectories"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Disk directory (default is null).",
          "name": "repo.DiskDirectory"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 endpoint URL (default is null).",
          "name": "repo.S3EndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 base URL (default is null).",
          "name": "repo.S3BaseUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 access key (default is null).",
          "name": "repo.S3AccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 secret key (default is null).",
          "name": "repo.S3SecretKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 bucket name (default is null).",
          "name": "repo.S3BucketName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 region (default is null).",
          "name": "repo.S3Region"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure endpoint URL (default is null).",
          "name": "repo.AzureEndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure account name (default is null).",
          "name": "repo.AzureAccountName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure container name (default is null).",
          "name": "repo.AzureContainerName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure access key (default is null).",
          "name": "repo.AzureAccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS hostname (default is null).",
          "name": "repo.CifsHostname"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS username (default is null).",
          "name": "repo.CifsUsername"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS password (default is null).",
          "name": "repo.CifsPassword"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS share name (default is null).",
          "name": "repo.CifsShareName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "NFS hostname (default is null).",
          "name": "repo.NfsHostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "NFS user ID (must be non-negative).",
          "name": "repo.NfsUserId"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "NFS group ID (must be non-negative).",
          "name": "repo.NfsGroupId"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "NFS share name (default is null).",
          "name": "repo.NfsShareName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "NFS version (default is null).",
          "name": "repo.NfsVersion"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Created timestamp (default is current UTC time).",
          "name": "repo.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Object metadata.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the object.",
          "name": "obj.guid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The parent GUID.",
          "name": "obj.parentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The tenant GUID.",
          "name": "obj.tenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The tenant name.",
          "name": "obj.tenantName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The node GUID.",
          "name": "obj.nodeGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The pool GUID.",
          "name": "obj.poolGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The bucket GUID.",
          "name": "obj.bucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The bucket name.",
          "name": "obj.bucketName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The owner GUID.",
          "name": "obj.ownerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The encryption key GUID.",
          "name": "obj.encryptionKeyGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The data catalog document GUID.",
          "name": "obj.dataCatalogDocumentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The data repository GUID.",
          "name": "obj.dataRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The graph repository GUID.",
          "name": "obj.graphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The graph node identifier.",
          "name": "obj.graphNodeIdentifier"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The data flow request GUID.",
          "name": "obj.dataFlowRequestGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key.",
          "name": "obj.key"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The version.",
          "name": "obj.version"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if this is the latest version.",
          "name": "obj.isLatest"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if this is a delete marker.",
          "name": "obj.isDeleteMarker"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if the object is local.",
          "name": "obj.isLocal"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The content type.",
          "name": "obj.contentType"
        },
        {
          "type": {
            "names": [
              "DocumentTypeEnum"
            ]
          },
          "description": "The document type.",
          "name": "obj.documentType"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The length of the content.",
          "name": "obj.contentLength"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The source URL.",
          "name": "obj.sourceUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The MD5 hash.",
          "name": "obj.md5Hash"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The SHA1 hash.",
          "name": "obj.sha1Hash"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The SHA256 hash.",
          "name": "obj.sha256Hash"
        },
        {
          "type": {
            "names": [
              "Date",
              "null"
            ]
          },
          "description": "The expiration timestamp in UTC.",
          "name": "obj.expirationUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "The last access timestamp in UTC.",
          "name": "obj.lastAccessUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "The last modified timestamp in UTC.",
          "name": "obj.lastModifiedUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "The creation timestamp in UTC.",
          "name": "obj.createdUtc"
        },
        {
          "type": {
            "names": [
              "Array.<byte>"
            ]
          },
          "description": "The data of the object.",
          "name": "obj.data"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Metadata rule.",
          "name": "mdRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Metadata rule GUID (automatically generated if not provided).",
          "name": "mdRule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (default is null).",
          "name": "mdRule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (default is null).",
          "name": "mdRule.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "mdRule.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the rule (default is null).",
          "name": "mdRule.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content type (default is \"text/plain\").",
          "name": "mdRule.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix (default is null).",
          "name": "mdRule.Prefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix (default is null).",
          "name": "mdRule.Suffix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Processing endpoint (default is localhost).",
          "name": "mdRule.ProcessingEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Cleanup endpoint (default is localhost).",
          "name": "mdRule.CleanupEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type detector endpoint (default is localhost).",
          "name": "mdRule.TypeDetectorEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Semantic cell endpoint (default is localhost).",
          "name": "mdRule.SemanticCellEndpoint"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum chunk content length (default is 512).",
          "name": "mdRule.MaxChunkContentLength"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Shift size (default is 512).",
          "name": "mdRule.ShiftSize"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "UDR endpoint (default is localhost).",
          "name": "mdRule.UdrEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog type (default is DataCatalogTypeEnum.Lexi).",
          "name": "mdRule.DataCatalogType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog endpoint (default is localhost).",
          "name": "mdRule.DataCatalogEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog collection identifier (default is null).",
          "name": "mdRule.DataCatalogCollection"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository GUID (default is null).",
          "name": "mdRule.GraphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Number of top terms to request (default is 25).",
          "name": "mdRule.TopTerms"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable case insensitive processing (default is true).",
          "name": "mdRule.CaseInsensitive"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable inclusion of flattened representation (default is true).",
          "name": "mdRule.IncludeFlattened"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Target bucket GUID (default is null).",
          "name": "mdRule.TargetBucketGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum content length (default is 16 * 1024 * 1024).",
          "name": "mdRule.MaxContentLength"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Minutes to retain generated document (default is null).",
          "name": "mdRule.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp (default is current UTC time).",
          "name": "mdRule.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Embeddings rule.",
          "name": "embedRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings rule GUID (automatically generated if not provided).",
          "name": "embedRule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (default is null).",
          "name": "embedRule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (default is null).",
          "name": "embedRule.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "embedRule.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the rule (default is null).",
          "name": "embedRule.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content type (default is \"text/plain\").",
          "name": "embedRule.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix (default is null).",
          "name": "embedRule.Prefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix (default is null).",
          "name": "embedRule.Suffix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Target bucket GUID (default is null).",
          "name": "embedRule.TargetBucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository GUID (default is null).",
          "name": "embedRule.GraphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector repository GUID (default is null).",
          "name": "embedRule.VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data flow endpoint (default is localhost).",
          "name": "embedRule.DataFlowEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings generator (default is EmbeddingsGeneratorEnum.LCProxy).",
          "name": "embedRule.EmbeddingsGenerator"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings generator URL (default is localhost).",
          "name": "embedRule.GeneratorUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings provider API key (default is null).",
          "name": "embedRule.GeneratorApiKey"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of chunks to process per request (default is 16).",
          "name": "embedRule.BatchSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of parallel embeddings generation tasks (default is 16).",
          "name": "embedRule.MaxGeneratorTasks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of retries per task (default is 3).",
          "name": "embedRule.MaxRetries"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of failures before failing the operation (default is 3).",
          "name": "embedRule.MaxFailures"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector store URL (default is localhost).",
          "name": "embedRule.VectorStoreUrl"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum content length (default is 16 * 1024 * 1024).",
          "name": "embedRule.MaxContentLength"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Minutes to retain the generated document (default is null).",
          "name": "embedRule.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp (default is current UTC time).",
          "name": "embedRule.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Vector repository.",
          "name": "vectorRepo"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository GUID (automatically generated if not provided).",
          "name": "vectorRepo.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "vectorRepo.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository (default is 'My vector repository').",
          "name": "vectorRepo.name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of vector repository.",
          "name": "vectorRepo.repositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL for the repository.",
          "name": "vectorRepo.endpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "API key for authentication.",
          "name": "vectorRepo.apiKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embedding model to be used (default is 'all-MiniLM-L6-v2').",
          "name": "vectorRepo.model"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Dimensionality of embeddings.",
          "name": "vectorRepo.dimensionality"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname of the database.",
          "name": "vectorRepo.databaseHostname"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the database.",
          "name": "vectorRepo.databaseName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Table name in the database.",
          "name": "vectorRepo.databaseTable"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Database port.",
          "name": "vectorRepo.databasePort"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Database username.",
          "name": "vectorRepo.databaseUser"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Database password.",
          "name": "vectorRepo.databasePassword"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix to prepend to prompts.",
          "name": "vectorRepo.promptPrefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix to append to prompts.",
          "name": "vectorRepo.promptSuffix"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "vectorRepo.createdUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Graph repository.",
          "name": "graphRepo"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the graph repository (auto-generated if not provided).",
          "name": "graphRepo.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (auto-generated if not provided).",
          "name": "graphRepo.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the graph.",
          "name": "graphRepo.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of graph graph.",
          "name": "graphRepo.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL.",
          "name": "graphRepo.EndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "API key for the graph.",
          "name": "graphRepo.ApiKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Username for authentication.",
          "name": "graphRepo.Username"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Password for authentication.",
          "name": "graphRepo.Password"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname for the graph.",
          "name": "graphRepo.Hostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Port number for the graph (default is 0).",
          "name": "graphRepo.Port"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Identifier of the graph.",
          "name": "graphRepo.GraphIdentifier"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (defaults to current UTC time).",
          "name": "graphRepo.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "description": "Cancellation token.",
          "name": "token"
        }
      ],
      "name": "processCrawler",
      "longname": "processCrawler",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * @param {object} document - The document object to be processed.\r\n   * @param {string} document.DocumentType - Specifies the type of the document (e.g., \"Text\").\r\n   * @param {object} document.MetadataRule - The rules governing the semantic cell extraction process.\r\n   * @param {string} document.MetadataRule.SemanticCellEndpoint - The API endpoint URL for processing semantic cells.\r\n   * @param {number} document.MetadataRule.MinChunkContentLength - The minimum character length allowed for a content chunk.\r\n   * @param {number} document.MetadataRule.MaxChunkContentLength - The maximum character length allowed for a content chunk.\r\n   * @param {number} document.MetadataRule.ShiftSize - The shift size for chunk overlaps (in characters).\r\n   * @param {string} document.Data - The base64-encoded string representing the content of the document to be analyzed.\r\n   * @param {object} [cancelToken] - (Optional) A cancel token object to abort the request if needed.\r\n   *\r\n   */",
      "meta": {
        "range": [
          33102,
          33436
        ],
        "filename": "ViewProcessorSdk.js",
        "lineno": 513,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100013746",
          "name": "semanticCell",
          "type": "ClassProperty"
        }
      },
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "description": "The document object to be processed.",
          "name": "document"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Specifies the type of the document (e.g., \"Text\").",
          "name": "document.DocumentType"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "description": "The rules governing the semantic cell extraction process.",
          "name": "document.MetadataRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The API endpoint URL for processing semantic cells.",
          "name": "document.MetadataRule.SemanticCellEndpoint"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The minimum character length allowed for a content chunk.",
          "name": "document.MetadataRule.MinChunkContentLength"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The maximum character length allowed for a content chunk.",
          "name": "document.MetadataRule.MaxChunkContentLength"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The shift size for chunk overlaps (in characters).",
          "name": "document.MetadataRule.ShiftSize"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The base64-encoded string representing the content of the document to be analyzed.",
          "name": "document.Data"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "(Optional) A cancel token object to abort the request if needed.",
          "name": "cancelToken"
        }
      ],
      "name": "semanticCell",
      "longname": "module.exports#semanticCell",
      "kind": "member",
      "memberof": "module.exports",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n * View Type Detector SDK.\r\n * @module base/ViewTypeDetectorSdk\r\n * @version 0.1.0\r\n */",
      "meta": {
        "filename": "ViewTypeDetectorSdk.js",
        "lineno": 7,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {}
      },
      "description": "View Type Detector SDK.",
      "kind": "module",
      "name": "base/ViewTypeDetectorSdk",
      "version": "0.1.0",
      "longname": "module:base/ViewTypeDetectorSdk"
    },
    {
      "comment": "/**\r\n   * Constructs a new ViewTypeDetectorSdk.\r\n   * @alias module:base/ViewTypeDetectorSdk\r\n   * @class\r\n   * @param {string} tenantGuid\r\n   * @param {string} accessKey\r\n   * @param {string} endpoint\r\n   */",
      "meta": {
        "range": [
          735,
          831
        ],
        "filename": "ViewTypeDetectorSdk.js",
        "lineno": 21,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100013816",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new ViewTypeDetectorSdk.",
      "alias": "module:base/ViewTypeDetectorSdk",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "endpoint"
        }
      ],
      "name": "module:base/ViewTypeDetectorSdk",
      "longname": "module:base/ViewTypeDetectorSdk"
    },
    {
      "comment": "/**\r\n   * Determine a document type.\r\n   * @param {Uint8Array} data - The data to send in the request body.\r\n   * @param {string} [contentType=\"application/octet-stream\"] - The content type of the document.\r\n   * @param {object} [cancelToken] - Optional cancel token to abort the request.\r\n   * @returns {Promise<TypeResult|null>} The result of the document type detection.\r\n   */",
      "meta": {
        "range": [
          1351,
          2522
        ],
        "filename": "ViewTypeDetectorSdk.js",
        "lineno": 38,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100013829",
          "name": "process",
          "type": "MethodDefinition",
          "paramnames": [
            "data",
            "contentType",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Determine a document type.",
      "params": [
        {
          "type": {
            "names": [
              "Uint8Array"
            ]
          },
          "description": "The data to send in the request body.",
          "name": "data"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": "\"application/octet-stream\"",
          "description": "The content type of the document.",
          "name": "contentType"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancel token to abort the request.",
          "name": "cancelToken",
          "defaultvalue": null
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(TypeResult|null)>"
            ]
          },
          "description": "The result of the document type detection."
        }
      ],
      "name": "process",
      "longname": "module:base/ViewTypeDetectorSdk#process",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewTypeDetectorSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Determine a document type.\r\n   * @param {object} data - The data to send in the request body.\r\n   * @param\r\n   * @param {object} [cancelToken] - Optional cancel token to abort the request.\r\n   * @returns {Promise<TypeResult|null>} The result of the document type detection.\r\n   */",
      "meta": {
        "range": [
          2822,
          3147
        ],
        "filename": "ViewTypeDetectorSdk.js",
        "lineno": 81,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100013964",
          "name": "typeDetector",
          "type": "ClassProperty"
        }
      },
      "description": "Determine a document type.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "description": "The data to send in the request body.",
          "name": "data"
        },
        {},
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional cancel token to abort the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(TypeResult|null)>"
            ]
          },
          "description": "The result of the document type detection."
        }
      ],
      "name": "typeDetector",
      "longname": "module:base/ViewTypeDetectorSdk#typeDetector",
      "kind": "member",
      "memberof": "module:base/ViewTypeDetectorSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Constructs a new ProcessorApi.\r\n   * @alias module:base/ProcessorApi\r\n   * @class\r\n   * @param {string} tenantGuid\r\n   * @param {string} accessKey\r\n   * @param {string} endpoint\r\n   */",
      "meta": {
        "range": [
          623,
          719
        ],
        "filename": "ViewUdrGeneratorSdk.js",
        "lineno": 17,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100014034",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new ProcessorApi.",
      "alias": "module:base/ProcessorApi",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "endpoint"
        }
      ],
      "name": "module:base/ProcessorApi",
      "longname": "module:base/ProcessorApi",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Process Udr Generator.\r\n   * @param {Object} doc - The document request object to process.\r\n   * @param {string} [doc.GUID] - The GUID of the document (automatically generated if not provided).\r\n   * @param {string} [doc.Type=DocumentTypeEnum.Unknown] - The type of the document (default is `DocumentTypeEnum.Unknown`).\r\n   * @param {string} [doc.Key=null] - The key associated with the document (default is `null`).\r\n   * @param {string} [doc.ContentType=null] - The content type of the document (default is `null`).\r\n   * @param {string} [doc.SemanticCellSplitCharacter='\\r\\n'] - The character used to split semantic cells (default is `'\\r\\n'`).\r\n   * @param {number} [doc.MaxChunkContentLength=512] - The maximum chunk content length (default is `512`).\r\n   * @param {boolean} [doc.IncludeFlattened=true] - Flag to enable flattened representation of the document (default is `true`).\r\n   * @param {boolean} [doc.CaseInsensitive=true] - Flag to enable case-insensitive processing (default is `true`).\r\n   * @param {number} [doc.TopTerms=10] - The number of top terms to request (default is `10`).\r\n   * @param {string} [doc.AdditionalData=null] - Additional data associated with the document (default is `null`).\r\n   * @param {Object} [doc.Metadata={}] - Metadata associated with the document (default is an empty object).\r\n   * @param {Uint8Array} doc.Data - The data of the document (this is required).\r\n   * @param {MetadataRule} [doc.MetadataRule=null] - Metadata rule associated with the document (default is `null`).\r\n   * @param {string} [filename] - Filename containing data. Setting this value will overwrite the 'Data' property in the document request.\r\n   * @param {AbortSignal} [token] - Cancellation token.\r\n   * @returns {Promise<UdrDocument>} - Document response.\r\n   */",
      "meta": {
        "range": [
          2656,
          3840
        ],
        "filename": "ViewUdrGeneratorSdk.js",
        "lineno": 47,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100014047",
          "name": "processDocument",
          "type": "MethodDefinition",
          "paramnames": [
            "doc",
            "filename",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process Udr Generator.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The document request object to process.",
          "name": "doc"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "The GUID of the document (automatically generated if not provided).",
          "name": "doc.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": "DocumentTypeEnum.Unknown",
          "description": "The type of the document (default is `DocumentTypeEnum.Unknown`).",
          "name": "doc.Type"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The key associated with the document (default is `null`).",
          "name": "doc.Key"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The content type of the document (default is `null`).",
          "name": "doc.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": "'\\r\\n'",
          "description": "The character used to split semantic cells (default is `'\\r\\n'`).",
          "name": "doc.SemanticCellSplitCharacter"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 512,
          "description": "The maximum chunk content length (default is `512`).",
          "name": "doc.MaxChunkContentLength"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "optional": true,
          "defaultvalue": true,
          "description": "Flag to enable flattened representation of the document (default is `true`).",
          "name": "doc.IncludeFlattened"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "optional": true,
          "defaultvalue": true,
          "description": "Flag to enable case-insensitive processing (default is `true`).",
          "name": "doc.CaseInsensitive"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 10,
          "description": "The number of top terms to request (default is `10`).",
          "name": "doc.TopTerms"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Additional data associated with the document (default is `null`).",
          "name": "doc.AdditionalData"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "Metadata associated with the document (default is an empty object).",
          "name": "doc.Metadata"
        },
        {
          "type": {
            "names": [
              "Uint8Array"
            ]
          },
          "description": "The data of the document (this is required).",
          "name": "doc.Data"
        },
        {
          "type": {
            "names": [
              "MetadataRule"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Metadata rule associated with the document (default is `null`).",
          "name": "doc.MetadataRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Filename containing data. Setting this value will overwrite the 'Data' property in the document request.",
          "name": "filename"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Cancellation token.",
          "name": "token"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<UdrDocument>"
            ]
          },
          "description": "- Document response."
        }
      ],
      "name": "processDocument",
      "longname": "processDocument",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Process data table.\r\n   * @param {Object} dt - The data table request object to process.\r\n   * @param {string} dt.GUID - The GUID of the data table request (automatically generated if not provided).\r\n   * @param {string} [dt.DatabaseType='Sqlite'] - The database type (default is `Sqlite`).\r\n   * @param {string} [dt.Hostname=null] - The hostname (default is `null`).\r\n   * @param {number} [dt.Port=0] - The port number (default is `0`).\r\n   * @param {string} [dt.Username=null] - The username (default is `null`).\r\n   * @param {string} [dt.Password=null] - The password (default is `null`).\r\n   * @param {string} [dt.DatabaseName=null] - The database name (default is `null`).\r\n   * @param {string} [dt.Query=null] - The query string (default is `null`).\r\n   * @param {boolean} [dt.IncludeFlattened=true] - Flag to enable flattened representation of the document (default is `true`).\r\n   * @param {boolean} [dt.CaseInsensitive=true] - Flag to enable case-insensitive processing (default is `true`).\r\n   * @param {number} [dt.TopTerms=10] - The number of top terms to request (default is `10`).\r\n   * @param {string} [dt.AdditionalData=null] - Additional data associated with the data table request (default is `null`).\r\n   * @param {Object} [dt.Metadata={}] - Metadata associated with the data table request (default is an empty object).\r\n   * @param {Uint8Array} dt.SqliteFileData - The Sqlite file data (this is required).\r\n   * @param {string} [filename] - Filename containing data.\r\n   * @param {AbortSignal} [token] - Cancellation token.\r\n   * @returns {Promise<UdrDocument>} - Document response.\r\n   */",
      "meta": {
        "range": [
          5469,
          6894
        ],
        "filename": "ViewUdrGeneratorSdk.js",
        "lineno": 99,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100014183",
          "name": "processDataTable",
          "type": "MethodDefinition",
          "paramnames": [
            "dt",
            "filename",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process data table.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The data table request object to process.",
          "name": "dt"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data table request (automatically generated if not provided).",
          "name": "dt.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": "'Sqlite'",
          "description": "The database type (default is `Sqlite`).",
          "name": "dt.DatabaseType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The hostname (default is `null`).",
          "name": "dt.Hostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 0,
          "description": "The port number (default is `0`).",
          "name": "dt.Port"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The username (default is `null`).",
          "name": "dt.Username"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The password (default is `null`).",
          "name": "dt.Password"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The database name (default is `null`).",
          "name": "dt.DatabaseName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The query string (default is `null`).",
          "name": "dt.Query"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "optional": true,
          "defaultvalue": true,
          "description": "Flag to enable flattened representation of the document (default is `true`).",
          "name": "dt.IncludeFlattened"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "optional": true,
          "defaultvalue": true,
          "description": "Flag to enable case-insensitive processing (default is `true`).",
          "name": "dt.CaseInsensitive"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 10,
          "description": "The number of top terms to request (default is `10`).",
          "name": "dt.TopTerms"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Additional data associated with the data table request (default is `null`).",
          "name": "dt.AdditionalData"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "defaultvalue": "{}",
          "description": "Metadata associated with the data table request (default is an empty object).",
          "name": "dt.Metadata"
        },
        {
          "type": {
            "names": [
              "Uint8Array"
            ]
          },
          "description": "The Sqlite file data (this is required).",
          "name": "dt.SqliteFileData"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Filename containing data.",
          "name": "filename"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Cancellation token.",
          "name": "token"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<UdrDocument>"
            ]
          },
          "description": "- Document response."
        }
      ],
      "name": "processDataTable",
      "longname": "processDataTable",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Helper function to read file data.\r\n   * @param {string} filename - Filename containing the data.\r\n   * @param {AbortSignal} [token] - Cancellation token.\r\n   * @returns {Promise<Uint8Array>} - File data.\r\n   */",
      "meta": {
        "range": [
          7125,
          7323
        ],
        "filename": "ViewUdrGeneratorSdk.js",
        "lineno": 143,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100014353",
          "name": "readFile",
          "type": "MethodDefinition",
          "paramnames": [
            "filename",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Helper function to read file data.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Filename containing the data.",
          "name": "filename"
        },
        {
          "type": {
            "names": [
              "AbortSignal"
            ]
          },
          "optional": true,
          "description": "Cancellation token.",
          "name": "token"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Uint8Array>"
            ]
          },
          "description": "- File data."
        }
      ],
      "name": "readFile",
      "longname": "readFile",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Process the provided document object and apply metadata rules and configurations.\r\n   *\r\n   * @param {object} document - The document object to be processed.\r\n   * @param {string} document.GUID - Unique identifier for the document (e.g., \"00000000-0000-0000-0000-000000000000\").\r\n   * @param {string} document.Key - File name or identifier of the document (e.g., \"testfile.text\").\r\n   * @param {string} document.ContentType - MIME type of the document content (e.g., \"text/plain\").\r\n   * @param {string} document.Type - Document type (e.g., \"Pdf\").\r\n   * @param {boolean} document.IncludeFlattened - Indicates whether flattened metadata should be included in the processing.\r\n   * @param {boolean} document.CaseInsensitive - Indicates whether the metadata processing should be case-insensitive.\r\n   * @param {number} document.TopTerms - Number of top terms to be extracted (e.g., 10).\r\n   * @param {string} document.AdditionalData - Additional information or context related to the document (base64-encoded).\r\n   * @param {object} document.Metadata - Metadata object containing key-value pairs of document metadata.\r\n   * @param {string} document.Metadata.foo - Example metadata field with a value (e.g., \"bar\").\r\n   * @param {object} document.MetadataRule - Configuration rules for metadata extraction and processing.\r\n   * @param {string} document.MetadataRule.GUID - Unique identifier for the metadata rule.\r\n   * @param {string} document.MetadataRule.TenantGUID - Unique identifier for the tenant (e.g., \"default\").\r\n   * @param {string} document.MetadataRule.BucketGUID - Unique identifier for the data bucket (e.g., \"data\").\r\n   * @param {string} document.MetadataRule.OwnerGUID - Unique identifier for the owner of the metadata rule (e.g., \"default\").\r\n   * @param {string} document.MetadataRule.Name - Name of the metadata rule (e.g., \"My metadata rule\").\r\n   * @param {string} document.MetadataRule.ContentType - MIME type of the content associated with the rule (e.g., \"text/plain\").\r\n   * @param {string} document.MetadataRule.UdrEndpoint - API endpoint for processing user-defined rules (e.g., \"http://localhost:8000/\").\r\n   * @param {string} document.MetadataRule.DataCatalogType - Type of data catalog (e.g., \"Lexi\").\r\n   * @param {string} document.MetadataRule.DataCatalogEndpoint - API endpoint for the data catalog (e.g., \"http://localhost:8000/\").\r\n   * @param {string} document.MetadataRule.DataCatalogCollection - Data catalog collection name (e.g., \"default\").\r\n   * @param {number} document.MetadataRule.TopTerms - Number of top terms to extract in metadata processing.\r\n   * @param {boolean} document.MetadataRule.CaseInsensitive - Indicates whether metadata rule processing is case-insensitive.\r\n   * @param {boolean} document.MetadataRule.IncludeFlattened - Indicates whether flattened metadata should be included in the result.\r\n   * @param {string} document.MetadataRule.TargetBucketGUID - GUID of the target bucket for processed metadata (e.g., \"metadata\").\r\n   * @param {string} document.Data - Base64-encoded string representing the document content to be analyzed.\r\n   * @param {object} [cancelToken] - (Optional) A cancel token object to abort the request if needed.\r\n   */",
      "meta": {
        "range": [
          10548,
          10863
        ],
        "filename": "ViewUdrGeneratorSdk.js",
        "lineno": 181,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor",
        "code": {
          "id": "astnode100014381",
          "name": "UdrDocument",
          "type": "ClassProperty"
        }
      },
      "description": "Process the provided document object and apply metadata rules and configurations.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "description": "The document object to be processed.",
          "name": "document"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Unique identifier for the document (e.g., \"00000000-0000-0000-0000-000000000000\").",
          "name": "document.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "File name or identifier of the document (e.g., \"testfile.text\").",
          "name": "document.Key"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "MIME type of the document content (e.g., \"text/plain\").",
          "name": "document.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Document type (e.g., \"Pdf\").",
          "name": "document.Type"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates whether flattened metadata should be included in the processing.",
          "name": "document.IncludeFlattened"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates whether the metadata processing should be case-insensitive.",
          "name": "document.CaseInsensitive"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Number of top terms to be extracted (e.g., 10).",
          "name": "document.TopTerms"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Additional information or context related to the document (base64-encoded).",
          "name": "document.AdditionalData"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "description": "Metadata object containing key-value pairs of document metadata.",
          "name": "document.Metadata"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Example metadata field with a value (e.g., \"bar\").",
          "name": "document.Metadata.foo"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "description": "Configuration rules for metadata extraction and processing.",
          "name": "document.MetadataRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Unique identifier for the metadata rule.",
          "name": "document.MetadataRule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Unique identifier for the tenant (e.g., \"default\").",
          "name": "document.MetadataRule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Unique identifier for the data bucket (e.g., \"data\").",
          "name": "document.MetadataRule.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Unique identifier for the owner of the metadata rule (e.g., \"default\").",
          "name": "document.MetadataRule.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the metadata rule (e.g., \"My metadata rule\").",
          "name": "document.MetadataRule.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "MIME type of the content associated with the rule (e.g., \"text/plain\").",
          "name": "document.MetadataRule.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "API endpoint for processing user-defined rules (e.g., \"http://localhost:8000/\").",
          "name": "document.MetadataRule.UdrEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of data catalog (e.g., \"Lexi\").",
          "name": "document.MetadataRule.DataCatalogType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "API endpoint for the data catalog (e.g., \"http://localhost:8000/\").",
          "name": "document.MetadataRule.DataCatalogEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog collection name (e.g., \"default\").",
          "name": "document.MetadataRule.DataCatalogCollection"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Number of top terms to extract in metadata processing.",
          "name": "document.MetadataRule.TopTerms"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates whether metadata rule processing is case-insensitive.",
          "name": "document.MetadataRule.CaseInsensitive"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates whether flattened metadata should be included in the result.",
          "name": "document.MetadataRule.IncludeFlattened"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the target bucket for processed metadata (e.g., \"metadata\").",
          "name": "document.MetadataRule.TargetBucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Base64-encoded string representing the document content to be analyzed.",
          "name": "document.Data"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "(Optional) A cancel token object to abort the request if needed.",
          "name": "cancelToken"
        }
      ],
      "name": "UdrDocument",
      "longname": "module.exports#UdrDocument",
      "kind": "member",
      "memberof": "module.exports",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n * View Semantic Cell SDK.\r\n * @module base/ViewSemanticCellSdk\r\n * @version 0.1.0\r\n */",
      "meta": {
        "filename": "ViewSemanticCellSdk.js",
        "lineno": 5,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Semantic",
        "code": {}
      },
      "description": "View Semantic Cell SDK.",
      "kind": "module",
      "name": "base/ViewSemanticCellSdk",
      "version": "0.1.0",
      "longname": "module:base/ViewSemanticCellSdk"
    },
    {
      "comment": "/**\r\n   * Constructs a new ViewSemanticCellSdk.\r\n   * @alias module:base/ViewSemanticCellSdk\r\n   * @class\r\n   * @param {string} endpoint - Endpoint URL (default is \"http://localhost:8341/\").\r\n   */",
      "meta": {
        "range": [
          568,
          685
        ],
        "filename": "ViewSemanticCellSdk.js",
        "lineno": 17,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Semantic",
        "code": {
          "id": "astnode100014439",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new ViewSemanticCellSdk.",
      "alias": "module:base/ViewSemanticCellSdk",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL (default is \"http://localhost:8341/\").",
          "name": "endpoint"
        }
      ],
      "name": "module:base/ViewSemanticCellSdk",
      "longname": "module:base/ViewSemanticCellSdk"
    },
    {
      "comment": "/**\r\n   * Extract semantic cells from a document.\r\n   * @param {Object} scReq - The semantic cell extraction request.\r\n   * @param {string} scReq.DocumentType - The document type (default is `DocumentTypeEnum.Unknown`).\r\n   * @param {number} scReq.MinChunkContentLength - The minimum chunk content length (default is 2).\r\n   * @param {number} scReq.MaxChunkContentLength - The maximum chunk content length (default is 512).\r\n   * @param {number} scReq.ShiftSize - The shift size (default is 512).\r\n   * @param {PdfOptions} scReq.Pdf - The PDF options (default is a new instance of `PdfOptions`).\r\n   * @param {MetadataRule} scReq.MetadataRule - The metadata rule containing the endpoint (default is null).\r\n   * @param {Uint8Array} scReq.Data - The data to be included in the extraction (default is null).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<SemanticCellResponse|null>} A promise resolving to the extracted SemanticCellResponse or null.\r\n   * @throws {Error} If the request is invalid.\r\n   */",
      "meta": {
        "range": [
          1775,
          2462
        ],
        "filename": "ViewSemanticCellSdk.js",
        "lineno": 36,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Semantic",
        "code": {
          "id": "astnode100014456",
          "name": "processRaw",
          "type": "ClassProperty"
        }
      },
      "description": "Extract semantic cells from a document.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "The semantic cell extraction request.",
          "name": "scReq"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The document type (default is `DocumentTypeEnum.Unknown`).",
          "name": "scReq.DocumentType"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The minimum chunk content length (default is 2).",
          "name": "scReq.MinChunkContentLength"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The maximum chunk content length (default is 512).",
          "name": "scReq.MaxChunkContentLength"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The shift size (default is 512).",
          "name": "scReq.ShiftSize"
        },
        {
          "type": {
            "names": [
              "PdfOptions"
            ]
          },
          "description": "The PDF options (default is a new instance of `PdfOptions`).",
          "name": "scReq.Pdf"
        },
        {
          "type": {
            "names": [
              "MetadataRule"
            ]
          },
          "description": "The metadata rule containing the endpoint (default is null).",
          "name": "scReq.MetadataRule"
        },
        {
          "type": {
            "names": [
              "Uint8Array"
            ]
          },
          "description": "The data to be included in the extraction (default is null).",
          "name": "scReq.Data"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(SemanticCellResponse|null)>"
            ]
          },
          "description": "A promise resolving to the extracted SemanticCellResponse or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the request is invalid."
        }
      ],
      "name": "processRaw",
      "longname": "module:base/ViewSemanticCellSdk#processRaw",
      "kind": "member",
      "memberof": "module:base/ViewSemanticCellSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Extract semantic cells from a document.\r\n   *\r\n   * @param {Object} docType - Document type.\r\n   * @param {Object} mdRule - Metadata rule containing configuration for the extraction.\r\n   * @param {string} mdRule.GUID - Metadata rule GUID (automatically generated if not provided).\r\n   * @param {string} mdRule.TenantGUID - Tenant GUID (default is null).\r\n   * @param {string} mdRule.BucketGUID - Bucket GUID (default is null).\r\n   * @param {string} mdRule.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} mdRule.Name - Name of the rule (default is null).\r\n   * @param {string} mdRule.ContentType - Content type (default is \"text/plain\").\r\n   * @param {string} mdRule.Prefix - Prefix (default is null).\r\n   * @param {string} mdRule.Suffix - Suffix (default is null).\r\n   * @param {string} mdRule.ProcessingEndpoint - Processing endpoint (default is localhost).\r\n   * @param {string} mdRule.CleanupEndpoint - Cleanup endpoint (default is localhost).\r\n   * @param {string} mdRule.TypeDetectorEndpoint - Type detector endpoint (default is localhost).\r\n   * @param {string} mdRule.SemanticCellEndpoint - Semantic cell endpoint (default is localhost).\r\n   * @param {number} mdRule.MaxChunkContentLength - Maximum chunk content length (default is 512).\r\n   * @param {number} mdRule.ShiftSize - Shift size (default is 512).\r\n   * @param {string} mdRule.UdrEndpoint - UDR endpoint (default is localhost).\r\n   * @param {string} mdRule.DataCatalogType - Data catalog type (default is \"Lexi\").\r\n   * @param {string} mdRule.DataCatalogEndpoint - Data catalog endpoint (default is localhost).\r\n   * @param {string} mdRule.DataCatalogCollection - Data catalog collection identifier (default is null).\r\n   * @param {string} mdRule.GraphRepositoryGUID - Graph repository GUID (default is null).\r\n   * @param {number} mdRule.TopTerms - Number of top terms to request (default is 25).\r\n   * @param {boolean} mdRule.CaseInsensitive - Enable case insensitive processing (default is true).\r\n   * @param {boolean} mdRule.IncludeFlattened - Enable inclusion of flattened representation (default is true).\r\n   * @param {string} mdRule.TargetBucketGUID - Target bucket GUID (default is null).\r\n   * @param {number} mdRule.MaxContentLength - Maximum content length (default is 16 * 1024 * 1024).\r\n   * @param {number|null} mdRule.RetentionMinutes - Minutes to retain generated document (default is null).\r\n   * @param {Date} mdRule.CreatedUtc - Creation timestamp (default is current UTC time).\r\n   * @param {Uint8Array} data - Data.\r\n   * @param {number} [maxChunkContentLength=512] - Maximum chunk content length.\r\n   * @param {number} [shiftSize=512] - Shift size.\r\n   * @param {Object} pdfOptions - PDF options for processing.\r\n   * @param {string} pdfOptions.Mode - The PDF processing mode (default is \"BoundingBoxExtraction\").\r\n   * @param {boolean} pdfOptions.ReturnMarkup - True to indicate that the marked-up PDF including bounding boxes should be returned (default is false).\r\n   * @param {boolean} pdfOptions.RetainArtifact - True to indicate that the marked-up PDF file should be preserved in the temporary directory (default is false).\r\n   * @param {object} [cancelToken] - Optional object with an abort method to cancel the request.\r\n   * @returns {Promise<SemanticCellResponse>} A promise resolving to the semantic cell response.\r\n   * @throws {Error} If data is null or empty, or if the metadata rule is null.\r\n   */",
      "meta": {
        "range": [
          5926,
          6633
        ],
        "filename": "ViewSemanticCellSdk.js",
        "lineno": 96,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Semantic",
        "code": {
          "id": "astnode100014533",
          "name": "process",
          "type": "ClassProperty"
        }
      },
      "description": "Extract semantic cells from a document.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Document type.",
          "name": "docType"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Metadata rule containing configuration for the extraction.",
          "name": "mdRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Metadata rule GUID (automatically generated if not provided).",
          "name": "mdRule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (default is null).",
          "name": "mdRule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (default is null).",
          "name": "mdRule.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "mdRule.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the rule (default is null).",
          "name": "mdRule.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content type (default is \"text/plain\").",
          "name": "mdRule.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix (default is null).",
          "name": "mdRule.Prefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix (default is null).",
          "name": "mdRule.Suffix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Processing endpoint (default is localhost).",
          "name": "mdRule.ProcessingEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Cleanup endpoint (default is localhost).",
          "name": "mdRule.CleanupEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type detector endpoint (default is localhost).",
          "name": "mdRule.TypeDetectorEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Semantic cell endpoint (default is localhost).",
          "name": "mdRule.SemanticCellEndpoint"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum chunk content length (default is 512).",
          "name": "mdRule.MaxChunkContentLength"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Shift size (default is 512).",
          "name": "mdRule.ShiftSize"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "UDR endpoint (default is localhost).",
          "name": "mdRule.UdrEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog type (default is \"Lexi\").",
          "name": "mdRule.DataCatalogType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog endpoint (default is localhost).",
          "name": "mdRule.DataCatalogEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog collection identifier (default is null).",
          "name": "mdRule.DataCatalogCollection"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository GUID (default is null).",
          "name": "mdRule.GraphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Number of top terms to request (default is 25).",
          "name": "mdRule.TopTerms"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable case insensitive processing (default is true).",
          "name": "mdRule.CaseInsensitive"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable inclusion of flattened representation (default is true).",
          "name": "mdRule.IncludeFlattened"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Target bucket GUID (default is null).",
          "name": "mdRule.TargetBucketGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum content length (default is 16 * 1024 * 1024).",
          "name": "mdRule.MaxContentLength"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Minutes to retain generated document (default is null).",
          "name": "mdRule.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp (default is current UTC time).",
          "name": "mdRule.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "Uint8Array"
            ]
          },
          "description": "Data.",
          "name": "data"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 512,
          "description": "Maximum chunk content length.",
          "name": "maxChunkContentLength"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 512,
          "description": "Shift size.",
          "name": "shiftSize"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "PDF options for processing.",
          "name": "pdfOptions"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The PDF processing mode (default is \"BoundingBoxExtraction\").",
          "name": "pdfOptions.Mode"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "True to indicate that the marked-up PDF including bounding boxes should be returned (default is false).",
          "name": "pdfOptions.ReturnMarkup"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "True to indicate that the marked-up PDF file should be preserved in the temporary directory (default is false).",
          "name": "pdfOptions.RetainArtifact"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an abort method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<SemanticCellResponse>"
            ]
          },
          "description": "A promise resolving to the semantic cell response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If data is null or empty, or if the metadata rule is null."
        }
      ],
      "name": "process",
      "longname": "module:base/ViewSemanticCellSdk#process",
      "kind": "member",
      "memberof": "module:base/ViewSemanticCellSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n * Storage service.\r\n * @module base/ViewStorageSdk\r\n * @version 0.1.0\r\n */",
      "meta": {
        "filename": "ViewStorageSdk.js",
        "lineno": 11,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {}
      },
      "description": "Storage service.",
      "kind": "module",
      "name": "base/ViewStorageSdk",
      "version": "0.1.0",
      "longname": "module:base/ViewStorageSdk"
    },
    {
      "comment": "/**\r\n   * Constructs a new StorageApi.\r\n   * @alias module:base/StorageApi\r\n   * @class\r\n   * @param {string} tenantGuid\r\n   * @param {string} accessKey\r\n   * @param {string} endpoint\r\n   */",
      "meta": {
        "range": [
          919,
          1015
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 25,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100014652",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new StorageApi.",
      "alias": "module:base/StorageApi",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "endpoint"
        }
      ],
      "name": "module:base/StorageApi",
      "longname": "module:base/StorageApi",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Retrieve List of Buckets.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<BucketMetadata|null|ApiErrorResponse>} A promise resolving to the Bucket object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          1505,
          1709
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 44,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100014665",
          "name": "retrieveAllBuckets",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve List of Buckets.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(BucketMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the Bucket object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveAllBuckets",
      "longname": "module:base/ViewStorageSdk#retrieveAllBuckets",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve List of Objects.\r\n   * @param {string} guid - The GUID of the BucketMetadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<BucketMetadata|null|ApiErrorResponse>} A promise resolving to the Bucket object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          2123,
          2430
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 58,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100014692",
          "name": "retrieveBuckets",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve List of Objects.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the BucketMetadata.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(BucketMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the Bucket object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveBuckets",
      "longname": "module:base/ViewStorageSdk#retrieveBuckets",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve bucket by Guid.\r\n   *\r\n   * @param {string} guid - The GUID of the bucket to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<BucketMetadata|null|ApiErrorResponse>} A promise resolving to the Bucket object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          2830,
          3146
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 74,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100014732",
          "name": "retrieveBucketByGuid",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve bucket by Guid.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(BucketMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the Bucket object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveBucketByGuid",
      "longname": "module:base/ViewStorageSdk#retrieveBucketByGuid",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write Bucket data.\r\n   * @param {Object} metadata Information about the bucket metadata.\r\n   * @param {string} metadata.PoolGUID - Pool GUID (automatically generated if not provided).\r\n   * @param {string} metadata.Name - Name of the bucket.\r\n   * @param {string} metadata.RegionString - Region string (default is 'us-west-1').\r\n   * @param {boolean} metadata.Versioning - Enable or disable versioning (default is true).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<BucketMetadata|null|ApiErrorResponse>} A promise resolving to the created Bucket object or null if the creation fails.\r\n   * @throws {Error} If the node is null or empty.\r\n   */",
      "meta": {
        "range": [
          3888,
          4199
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 93,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100014774",
          "name": "writeBucket",
          "type": "ClassProperty"
        }
      },
      "description": "Write Bucket data.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the bucket metadata.",
          "name": "metadata"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Pool GUID (automatically generated if not provided).",
          "name": "metadata.PoolGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the bucket.",
          "name": "metadata.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Region string (default is 'us-west-1').",
          "name": "metadata.RegionString"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable or disable versioning (default is true).",
          "name": "metadata.Versioning"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(BucketMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Bucket object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the node is null or empty."
        }
      ],
      "name": "writeBucket",
      "longname": "module:base/ViewStorageSdk#writeBucket",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update Bucket data.\r\n   * @param {Object} metadata Information about the bucket metadata.\r\n   * @param {string} metadata.GUID - Bucket GUID (automatically generated if not provided).\r\n   * @param {string} metadata.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} metadata.PoolGUID - Pool GUID (automatically generated if not provided).\r\n   * @param {string} metadata.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} metadata.Name - Name of the bucket.\r\n   * @param {string} metadata.RegionString - Region string (default is 'us-west-1').\r\n   * @param {boolean} metadata.Versioning - Enable or disable versioning (default is true).\r\n   * @param {number|null} metadata.RetentionMinutes - Retention in minutes (optional).\r\n   * @param {Date} metadata.LastAccessUtc - Last access timestamp in UTC.\r\n   * @param {Date} metadata.CreatedUtc - Created timestamp in UTC.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<BucketMetadata|null|ApiErrorResponse>} A promise resolving to the created Bucket object or null if the creation fails.\r\n   * @throws {Error} If the node is null or empty.\r\n   */",
      "meta": {
        "range": [
          5462,
          5901
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 118,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100014813",
          "name": "updateBucket",
          "type": "ClassProperty"
        }
      },
      "description": "Update Bucket data.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the bucket metadata.",
          "name": "metadata"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (automatically generated if not provided).",
          "name": "metadata.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "metadata.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Pool GUID (automatically generated if not provided).",
          "name": "metadata.PoolGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "metadata.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the bucket.",
          "name": "metadata.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Region string (default is 'us-west-1').",
          "name": "metadata.RegionString"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable or disable versioning (default is true).",
          "name": "metadata.Versioning"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Retention in minutes (optional).",
          "name": "metadata.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Last access timestamp in UTC.",
          "name": "metadata.LastAccessUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Created timestamp in UTC.",
          "name": "metadata.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(BucketMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Bucket object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the node is null or empty."
        }
      ],
      "name": "updateBucket",
      "longname": "module:base/ViewStorageSdk#updateBucket",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a bucket.\r\n   *\r\n   * @param {string} guid - The GUID of the bucket to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Boolean|ApiErrorResponse>} A promise that resolves when the bucket is deleted.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          6268,
          6553
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 137,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100014868",
          "name": "deleteBucket",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a bucket.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves when the bucket is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "deleteBucket",
      "longname": "module:base/ViewStorageSdk#deleteBucket",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve tag by bucketGuid.\r\n   *\r\n   * @param {string} guid - GUID of the bucket.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<TagMetaData|null|ApiErrorResponse>} A promise resolving to the TagMetadata object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          6942,
          7256
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 153,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100014907",
          "name": "retrieveTagByBucket",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve tag by bucketGuid.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the bucket.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(TagMetaData|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the TagMetadata object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveTagByBucket",
      "longname": "module:base/ViewStorageSdk#retrieveTagByBucket",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete tag by bucketGuid.\r\n   *\r\n   * @param {string} guid - GUID of the bucket to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void>} A promise that resolves when the bucket is deleted.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          7608,
          7900
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 169,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100014949",
          "name": "deleteTag",
          "type": "ClassProperty"
        }
      },
      "description": "Delete tag by bucketGuid.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the bucket to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the bucket is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteTag",
      "longname": "module:base/ViewStorageSdk#deleteTag",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write Tag .\r\n   * @param {string} guid - The GUID of the bucket.\r\n   * @param {Object} tagMetaData Information about the tag .\r\n   * @param {string} tagMetaData.Key - Key associated with the metadata.\r\n   * @param {string} tagMetaData.Value - Value associated with the metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<ObjectMetadata|null|ApiErrorResponse>} A promise resolving to the created ObjectMetadata object or null if the creation fails.\r\n   * @throws {Error} If the ObjectMetadata is null or empty.\r\n   */",
      "meta": {
        "range": [
          8518,
          8960
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 187,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100014990",
          "name": "writeTagForBucket",
          "type": "ClassProperty"
        }
      },
      "description": "Write Tag .",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the tag .",
          "name": "tagMetaData"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Key associated with the metadata.",
          "name": "tagMetaData.Key"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Value associated with the metadata.",
          "name": "tagMetaData.Value"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(ObjectMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created ObjectMetadata object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the ObjectMetadata is null or empty."
        }
      ],
      "name": "writeTagForBucket",
      "longname": "module:base/ViewStorageSdk#writeTagForBucket",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve tag by bucketGuid.\r\n   *\r\n   * @param {string} guid - GUID of the bucket.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<AclMetaData|null|ApiErrorResponse>} A promise resolving to the TagMetadata object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          9349,
          9662
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 206,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015044",
          "name": "retrieveBucketByACL",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve tag by bucketGuid.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the bucket.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(AclMetaData|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the TagMetadata object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveBucketByACL",
      "longname": "module:base/ViewStorageSdk#retrieveBucketByACL",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete acl by bucketGuid.\r\n   *\r\n   * @param {string} guid - GUID of the bucket to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Boolean|ApiErrorResponse>} A promise that resolves when the bucket is deleted.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          10034,
          10325
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 222,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015086",
          "name": "deleteAcl",
          "type": "ClassProperty"
        }
      },
      "description": "Delete acl by bucketGuid.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the bucket to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves when the bucket is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteAcl",
      "longname": "module:base/ViewStorageSdk#deleteAcl",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write Acl for bucket.\r\n   * @param {string} guid - The GUID of the bucket.\r\n   * @param {Object} aclMetaData Information about the acl .\r\n   * @param {Object} aclMetaData.Owner - Key associated with the metadata.\r\n   * @param {Array} aclMetaData.Users - List of users, each using UserMaster class.\r\n   * @param {Array} aclMetaData.Entries - List of access control entries.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<AclEntry|null|ApiErrorResponse>} A promise resolving to the created ObjectMetadata object or null if the creation fails.\r\n   * @throws {Error} If the ObjectMetadata is null or empty.\r\n   */",
      "meta": {
        "range": [
          11031,
          11469
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 241,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015127",
          "name": "writeAclForBucket",
          "type": "ClassProperty"
        }
      },
      "description": "Write Acl for bucket.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the acl .",
          "name": "aclMetaData"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Key associated with the metadata.",
          "name": "aclMetaData.Owner"
        },
        {
          "type": {
            "names": [
              "Array"
            ]
          },
          "description": "List of users, each using UserMaster class.",
          "name": "aclMetaData.Users"
        },
        {
          "type": {
            "names": [
              "Array"
            ]
          },
          "description": "List of access control entries.",
          "name": "aclMetaData.Entries"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(AclEntry|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created ObjectMetadata object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the ObjectMetadata is null or empty."
        }
      ],
      "name": "writeAclForBucket",
      "longname": "module:base/ViewStorageSdk#writeAclForBucket",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a Object exists by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the node to retrieve.\r\n   * @param {string} objectValue - The GUID of the node to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<ObjectMetadata|null|ApiErrorResponse>} A promise resolving to the Node object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          11971,
          12294
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 263,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015181",
          "name": "existsObject",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a Object exists by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the node to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the node to retrieve.",
          "name": "objectValue"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(ObjectMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the Node object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "existsObject",
      "longname": "module:base/ViewStorageSdk#existsObject",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve Objects.\r\n   *\r\n   * @param {string} bucketGuid - The GUID of the bucket.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<String|null|ApiErrorResponse>} A promise resolving to the data retrieved or null if the object is not found.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          12688,
          13087
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 279,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015225",
          "name": "retrieveObjects",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve Objects.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "bucketGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(String|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the data retrieved or null if the object is not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "retrieveObjects",
      "longname": "module:base/ViewStorageSdk#retrieveObjects",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write Object non-chuncked .\r\n   * @param {string} bucketGUID - The GUID of the bucket.\r\n   * @param {string} key - The key of the object.\r\n   * @param {Object} ObjectMetadata Information about the Object .\r\n   * @param {string} data Information about the Object .\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<ObjectMetadata  |null|ApiErrorResponse>} A promise resolving to the created Node object or null if the creation fails.\r\n   * @throws {Error} If the ObjectMetadata is null or empty.\r\n   */",
      "meta": {
        "range": [
          13682,
          14130
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 298,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015265",
          "name": "writeObject",
          "type": "ClassProperty"
        }
      },
      "description": "Write Object non-chuncked .",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "bucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key of the object.",
          "name": "key"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the Object .",
          "name": "ObjectMetadata"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Information about the Object .",
          "name": "data"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(ObjectMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Node object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the ObjectMetadata is null or empty."
        }
      ],
      "name": "writeObject",
      "longname": "module:base/ViewStorageSdk#writeObject",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write expiration .\r\n   * @param {string} bucketGUID - The GUID of the bucket.\r\n   * @param {Object} objectMetadata Information about the Object .\r\n   * @property {Date|null} Object.ExpirationUtc - The expiration timestamp in UTC.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<ObjectMetadata|null|ApiErrorResponse>} A promise resolving to the created ObjectMetadata object or null if the creation fails.\r\n   * @throws {Error} If the node is null or empty.\r\n   */",
      "meta": {
        "range": [
          15716,
          16323
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 338,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015322",
          "name": "writeExpiration",
          "type": "ClassProperty"
        }
      },
      "description": "Write expiration .",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "bucketGUID"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the Object .",
          "name": "objectMetadata"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "properties": [
        {
          "type": {
            "names": [
              "Date",
              "null"
            ]
          },
          "description": "The expiration timestamp in UTC.",
          "name": "Object.ExpirationUtc"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(ObjectMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created ObjectMetadata object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the node is null or empty."
        }
      ],
      "name": "writeExpiration",
      "longname": "module:base/ViewStorageSdk#writeExpiration",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve data by key.\r\n   *\r\n   * @param {string} bucketGuid - The GUID of the bucket.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<String|null|ApiErrorResponse>} A promise resolving to the data retrieved or null if the object is not found.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          16721,
          17213
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 361,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015391",
          "name": "retrieveData",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve data by key.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "bucketGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(String|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the data retrieved or null if the object is not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "retrieveData",
      "longname": "module:base/ViewStorageSdk#retrieveData",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve object Range.\r\n   *\r\n   * @param {string} bucketGuid - The GUID of the bucket.\r\n   * @param {string} key - The key of the object.\r\n   * @param {object} objectMetadata - The metadata of the object.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<ObjectMetadata|null|ApiErrorResponse>} A promise resolving to the UserMaster object or null if not found.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          17727,
          18345
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 383,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015445",
          "name": "retrieveRange",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve object Range.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "bucketGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key of the object.",
          "name": "key"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "description": "The metadata of the object.",
          "name": "objectMetadata"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(ObjectMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the UserMaster object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "retrieveRange",
      "longname": "module:base/ViewStorageSdk#retrieveRange",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve object by metadata.\r\n   *\r\n   * @param {string} bucketGuid - The GUID of the bucket.\r\n   * @param {string} key - The key of the object.\r\n   * @param {object} objectMetadata - The metadata of the object.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<ObjectMetadata|null|ApiErrorResponse>} A promise resolving to the UserMaster object or null if not found.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          18865,
          19398
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 408,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015514",
          "name": "retrieveObjectMetadata",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve object by metadata.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "bucketGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key of the object.",
          "name": "key"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "description": "The metadata of the object.",
          "name": "objectMetadata"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(ObjectMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the UserMaster object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "retrieveObjectMetadata",
      "longname": "module:base/ViewStorageSdk#retrieveObjectMetadata",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a Object by its key.\r\n   *\r\n   * @param {string} bucketGuid - The GUID of the bucket.\r\n   * @param {string} key - The key of the object.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void|ApiErrorResponse>} A promise resolving when the user is deleted.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          19814,
          20298
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 430,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015571",
          "name": "deleteObject",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a Object by its key.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "bucketGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key of the object.",
          "name": "key"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(void|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving when the user is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "deleteObject",
      "longname": "module:base/ViewStorageSdk#deleteObject",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write Tag .\r\n   * @param {string} bucketGUID - The GUID of the bucket.\r\n   * @param {Object} tagMetaData Information about the tag .\r\n   * @param {string} tagMetaData.Key - Key associated with the metadata.\r\n   * @param {string} tagMetaData.Value - Value associated with the metadata.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<TagMetaData|null|ApiErrorResponse>} A promise resolving to the created TagMetaData object or null if the creation fails.\r\n   * @throws {Error} If the node is null or empty.\r\n   */",
      "meta": {
        "range": [
          20906,
          21494
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 452,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015625",
          "name": "writeTagForObject",
          "type": "ClassProperty"
        }
      },
      "description": "Write Tag .",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "bucketGUID"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the tag .",
          "name": "tagMetaData"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Key associated with the metadata.",
          "name": "tagMetaData.Key"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Value associated with the metadata.",
          "name": "tagMetaData.Value"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(TagMetaData|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created TagMetaData object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the node is null or empty."
        }
      ],
      "name": "writeTagForObject",
      "longname": "module:base/ViewStorageSdk#writeTagForObject",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a tag by its key.\r\n   *\r\n   * @param {string} bucketGUID - The GUID of the bucket.\r\n   * @param {string} key - The key of the tag to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<TagMetaData|null|ApiErrorResponse>} A promise resolving to the TagMetaData object or null if not found.\r\n   * @throws {Error} If the bucketGUID or key is null or empty.\r\n   */",
      "meta": {
        "range": [
          21965,
          22474
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 476,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015694",
          "name": "retrieveTagByObject",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a tag by its key.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "bucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key of the tag to retrieve.",
          "name": "key"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(TagMetaData|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the TagMetaData object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the bucketGUID or key is null or empty."
        }
      ],
      "name": "retrieveTagByObject",
      "longname": "module:base/ViewStorageSdk#retrieveTagByObject",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve tag by bucketGuid.\r\n   *\r\n   * @param {string} bucketguid - GUID of the bucket.\r\n   * @param, {string} key - Key of the object.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<AclMetaData|null|ApiErrorResponse>} A promise resolving to the TagMetadata object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          22917,
          23376
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 498,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015751",
          "name": "retrieveObjectByACL",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve tag by bucketGuid.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the bucket.",
          "name": "bucketguid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "tags": [
        {
          "originalTitle": "param,",
          "title": "param,",
          "text": "{string} key - Key of the object.",
          "value": "{string} key - Key of the object."
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(AclMetaData|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the TagMetadata object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveObjectByACL",
      "longname": "module:base/ViewStorageSdk#retrieveObjectByACL",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete acl by bucketGuid.\r\n   *\r\n   * @param {string} guid - GUID of the bucket to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Boolean|ApiErrorResponse>} A promise that resolves when the bucket is deleted.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          23748,
          24191
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 518,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015808",
          "name": "deleteAclObject",
          "type": "ClassProperty"
        }
      },
      "description": "Delete acl by bucketGuid.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the bucket to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves when the bucket is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteAclObject",
      "longname": "module:base/ViewStorageSdk#deleteAclObject",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write Acl for bucket.\r\n   * @param {string} guid - The GUID of the bucket.\r\n   * @param {Object} aclMetaData Information about the acl .\r\n   * @param {Object} aclMetaData.Owner - Key associated with the metadata.\r\n   * @param {Array} aclMetaData.Users - List of users, each using UserMaster class.\r\n   * @param {Array} aclMetaData.Entries - List of access control entries.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<AclEntry|null|ApiErrorResponse>} A promise resolving to the created ObjectMetadata object or null if the creation fails.\r\n   * @throws {Error} If the ObjectMetadata is null or empty.\r\n   */",
      "meta": {
        "range": [
          24897,
          25481
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 541,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015864",
          "name": "writeAclForObject",
          "type": "ClassProperty"
        }
      },
      "description": "Write Acl for bucket.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the acl .",
          "name": "aclMetaData"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Key associated with the metadata.",
          "name": "aclMetaData.Owner"
        },
        {
          "type": {
            "names": [
              "Array"
            ]
          },
          "description": "List of users, each using UserMaster class.",
          "name": "aclMetaData.Users"
        },
        {
          "type": {
            "names": [
              "Array"
            ]
          },
          "description": "List of access control entries.",
          "name": "aclMetaData.Entries"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(AclEntry|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created ObjectMetadata object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the ObjectMetadata is null or empty."
        }
      ],
      "name": "writeAclForObject",
      "longname": "module:base/ViewStorageSdk#writeAclForObject",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a Multipart Upload.\r\n   * @param {Object} multipartUpload Information about the multipart upload.\r\n   * @param {string} multipartUpload.key - The key of the tag to retrieve.\r\n   */",
      "meta": {
        "range": [
          25720,
          26213
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 563,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015933",
          "name": "createMultipartUpload",
          "type": "ClassProperty"
        }
      },
      "description": "Create a Multipart Upload.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the multipart upload.",
          "name": "multipartUpload"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key of the tag to retrieve.",
          "name": "multipartUpload.key"
        }
      ],
      "name": "createMultipartUpload",
      "longname": "module:base/ViewStorageSdk#createMultipartUpload",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve list of Multipart Upload by its GUID.\r\n   *\r\n   * @param {string} bucketGUID - The GUID of the bucket to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<MultipartUpload|null|ApiErrorResponse>} A promise resolving to the MultipartUpload object or null if not found.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          26651,
          27073
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 582,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100015987",
          "name": "retrieveAllMultipartUpload",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve list of Multipart Upload by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket to retrieve.",
          "name": "bucketGUID"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(MultipartUpload|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the MultipartUpload object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "retrieveAllMultipartUpload",
      "longname": "module:base/ViewStorageSdk#retrieveAllMultipartUpload",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a Multipart Upload by its GUID.\r\n   *\r\n   * @param {string} bucketGUID - The GUID of the bucket to retrieve.\r\n   * @param {string} key - The key of the tag to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<MultipartUpload|null|ApiErrorResponse>} A promise resolving to the MultipartUpload object or null if not found.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          27565,
          28068
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 600,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100016029",
          "name": "retrieveMultipartUpload",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a Multipart Upload by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket to retrieve.",
          "name": "bucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key of the tag to retrieve.",
          "name": "key"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(MultipartUpload|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the MultipartUpload object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "retrieveMultipartUpload",
      "longname": "module:base/ViewStorageSdk#retrieveMultipartUpload",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a part of a Multipart Upload by its key and part number.\r\n   *\r\n   * @param {string} bucketGUID - The GUID of the bucket to retrieve.\r\n   * @param {number} partNumber - The part number of the Multipart Upload to retrieve.\r\n   * @param {string} key - The key of the Multipart Upload to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<MultipartUpload|null|ApiErrorResponse>} A promise resolving to the MultipartUpload object or null if not found.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          28686,
          29402
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 622,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100016084",
          "name": "retrievePartMultipartUpload",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a part of a Multipart Upload by its key and part number.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket to retrieve.",
          "name": "bucketGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The part number of the Multipart Upload to retrieve.",
          "name": "partNumber"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key of the Multipart Upload to retrieve.",
          "name": "key"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(MultipartUpload|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the MultipartUpload object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "retrievePartMultipartUpload",
      "longname": "module:base/ViewStorageSdk#retrievePartMultipartUpload",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a part of a Multipart Upload by its key and part number.\r\n   *\r\n   * @param {string} bucketGUID - The GUID of the bucket to retrieve.\r\n   * @param {number} partNumber - The part number of the Multipart Upload to retrieve.\r\n   * @param {string} key - The key of the Multipart Upload to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void|ApiErrorResponse>} A promise resolving when the user is deleted.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          29976,
          30670
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 656,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100016154",
          "name": "deletePart",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a part of a Multipart Upload by its key and part number.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket to retrieve.",
          "name": "bucketGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The part number of the Multipart Upload to retrieve.",
          "name": "partNumber"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key of the Multipart Upload to retrieve.",
          "name": "key"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(void|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving when the user is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "deletePart",
      "longname": "module:base/ViewStorageSdk#deletePart",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a Multipart Upload by its key .\r\n   *\r\n   * @param {string} bucketGUID - The GUID of the bucket to retrieve.\r\n   * @param {string} key - The key of the Multipart Upload to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Boolean|ApiErrorResponse>} A promise resolving when the user is deleted.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          31134,
          31630
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 689,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100016223",
          "name": "deleteMultipartUpload",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a Multipart Upload by its key .",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket to retrieve.",
          "name": "bucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The key of the Multipart Upload to retrieve.",
          "name": "key"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving when the user is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "deleteMultipartUpload",
      "longname": "module:base/ViewStorageSdk#deleteMultipartUpload",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Upload Part .\r\n   * @param {string} bucketGUID - The GUID of the bucket.\r\n   * @param {Object} tagMetaData Information about the tag .\r\n   * @param {Number} partNumber - Part number.\r\n   * @param {string} data Information about the Object .\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<TagMetaData|null|ApiErrorResponse>} A promise resolving to the created TagMetaData object or null if the creation fails.\r\n   * @throws {Error} If the node is null or empty.\r\n   */",
      "meta": {
        "range": [
          32194,
          32944
        ],
        "filename": "ViewStorageSdk.js",
        "lineno": 711,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage",
        "code": {
          "id": "astnode100016277",
          "name": "uploadPart",
          "type": "ClassProperty"
        }
      },
      "description": "Upload Part .",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket.",
          "name": "bucketGUID"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the tag .",
          "name": "tagMetaData"
        },
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "description": "Part number.",
          "name": "partNumber"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Information about the Object .",
          "name": "data"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(TagMetaData|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created TagMetaData object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the node is null or empty."
        }
      ],
      "name": "uploadPart",
      "longname": "module:base/ViewStorageSdk#uploadPart",
      "kind": "member",
      "memberof": "module:base/ViewStorageSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n * Embeddings SDK base class.\r\n * @module base/EmbeddingsSdkBase\r\n * @version 0.1.0\r\n */",
      "meta": {
        "filename": "EmbeddingsSdkBase.js",
        "lineno": 10,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {}
      },
      "description": "Embeddings SDK base class.",
      "kind": "module",
      "name": "base/EmbeddingsSdkBase",
      "version": "0.1.0",
      "longname": "module:base/EmbeddingsSdkBase"
    },
    {
      "comment": "/**\r\n   * Constructs a new EmbeddingsSdkBase.\r\n   * @alias module:base/EmbeddingsSdkBase\r\n   * @class\r\n   * @param {EmbeddingsGeneratorEnum} generator - The embeddings generator.\r\n   * @param {string} endpoint - The endpoint URL.\r\n   * @param {string} apiKey - The API key.\r\n   * @param {number} [batchSize=8] - The maximum number of chunks to submit in a processing request.\r\n   * @param {number} [maxParallelTasks=16] - The maximum number of parallel tasks.\r\n   * @param {number} [maxRetries=3] - The maximum number of retries.\r\n   * @param {number} [maxFailures=3] - The maximum number of failures before aborting.\r\n   * @param {function} [logger=null] - The logger function.\r\n   */",
      "meta": {
        "range": [
          1337,
          1970
        ],
        "filename": "EmbeddingsSdkBase.js",
        "lineno": 30,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100016399",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "generator",
            "endpoint",
            "apiKey",
            "batchSize",
            "maxParallelTasks",
            "maxRetries",
            "maxFailures",
            "logger"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new EmbeddingsSdkBase.",
      "alias": "module:base/EmbeddingsSdkBase",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "EmbeddingsGeneratorEnum"
            ]
          },
          "description": "The embeddings generator.",
          "name": "generator"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The endpoint URL.",
          "name": "endpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The API key.",
          "name": "apiKey"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 8,
          "description": "The maximum number of chunks to submit in a processing request.",
          "name": "batchSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 16,
          "description": "The maximum number of parallel tasks.",
          "name": "maxParallelTasks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 3,
          "description": "The maximum number of retries.",
          "name": "maxRetries"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 3,
          "description": "The maximum number of failures before aborting.",
          "name": "maxFailures"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The logger function.",
          "name": "logger"
        }
      ],
      "name": "module:base/EmbeddingsSdkBase",
      "longname": "module:base/EmbeddingsSdkBase"
    },
    {
      "comment": "/**\r\n   * Dispose of resources.\r\n   */",
      "meta": {
        "range": [
          2018,
          2064
        ],
        "filename": "EmbeddingsSdkBase.js",
        "lineno": 56,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100016492",
          "name": "dispose",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Dispose of resources.",
      "name": "dispose",
      "longname": "module:base/EmbeddingsSdkBase#dispose",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/EmbeddingsSdkBase",
      "params": []
    },
    {
      "comment": "/**\r\n   * Validate connectivity.\r\n   * @param {CancellationToken} [token] - The cancellation token.\r\n   * @returns {Promise<boolean>} A promise resolving to a boolean indicating connectivity status.\r\n   */",
      "meta": {
        "range": [
          2279,
          2397
        ],
        "filename": "EmbeddingsSdkBase.js",
        "lineno": 65,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100016502",
          "name": "validateConnectivity",
          "type": "MethodDefinition",
          "paramnames": [
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Validate connectivity.",
      "params": [
        {
          "type": {
            "names": [
              "CancellationToken"
            ]
          },
          "optional": true,
          "description": "The cancellation token.",
          "name": "token"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to a boolean indicating connectivity status."
        }
      ],
      "name": "validateConnectivity",
      "longname": "module:base/EmbeddingsSdkBase#validateConnectivity",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/EmbeddingsSdkBase",
      "async": true
    },
    {
      "comment": "/**\r\n   * Process semantic cells and generate embeddings.\r\n   * @param {Array[]} cells - The semantic cells to process.\r\n   * @param {string} model - The model to use.\r\n   * @param {number} [timeoutMs=60000] - The timeout in milliseconds.\r\n   * @param {CancellationToken} [token] - The cancellation token.\r\n   * @returns {Promise<Array[]>} A promise resolving to a list of semantic cells with embeddings.\r\n   */",
      "meta": {
        "range": [
          2818,
          2969
        ],
        "filename": "EmbeddingsSdkBase.js",
        "lineno": 77,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100016511",
          "name": "processSemanticCells",
          "type": "MethodDefinition",
          "paramnames": [
            "cells",
            "model",
            "timeoutMs",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process semantic cells and generate embeddings.",
      "params": [
        {
          "type": {
            "names": [
              "Array.<Array>"
            ]
          },
          "description": "The semantic cells to process.",
          "name": "cells"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The model to use.",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 60000,
          "description": "The timeout in milliseconds.",
          "name": "timeoutMs"
        },
        {
          "type": {
            "names": [
              "CancellationToken"
            ]
          },
          "optional": true,
          "description": "The cancellation token.",
          "name": "token"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Array>>"
            ]
          },
          "description": "A promise resolving to a list of semantic cells with embeddings."
        }
      ],
      "name": "processSemanticCells",
      "longname": "module:base/EmbeddingsSdkBase#processSemanticCells",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/EmbeddingsSdkBase",
      "async": true
    },
    {
      "comment": "/**\r\n   * List available models.\r\n   * @param {CancellationToken} [token] - The cancellation token.\r\n   * @returns {Promise<string[]>} A promise resolving to a list of model names.\r\n   */",
      "meta": {
        "range": [
          3166,
          3264
        ],
        "filename": "EmbeddingsSdkBase.js",
        "lineno": 86,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100016525",
          "name": "listModels",
          "type": "MethodDefinition",
          "paramnames": [
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "List available models.",
      "params": [
        {
          "type": {
            "names": [
              "CancellationToken"
            ]
          },
          "optional": true,
          "description": "The cancellation token.",
          "name": "token"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<string>>"
            ]
          },
          "description": "A promise resolving to a list of model names."
        }
      ],
      "name": "listModels",
      "longname": "module:base/EmbeddingsSdkBase#listModels",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/EmbeddingsSdkBase",
      "async": true
    },
    {
      "comment": "/**\r\n   * Load a model.\r\n   * @param {string} model - The model name.\r\n   * @param {CancellationToken} [token] - The cancellation token.\r\n   * @returns {Promise<boolean>} A promise resolving to a boolean indicating success or failure.\r\n   */",
      "meta": {
        "range": [
          3515,
          3618
        ],
        "filename": "EmbeddingsSdkBase.js",
        "lineno": 96,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100016534",
          "name": "loadModel",
          "type": "MethodDefinition",
          "paramnames": [
            "model",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Load a model.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The model name.",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "CancellationToken"
            ]
          },
          "optional": true,
          "description": "The cancellation token.",
          "name": "token"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to a boolean indicating success or failure."
        }
      ],
      "name": "loadModel",
      "longname": "module:base/EmbeddingsSdkBase#loadModel",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/EmbeddingsSdkBase",
      "async": true
    },
    {
      "comment": "/**\r\n   * Load multiple models.\r\n   * @param {string[]} models - The list of model names.\r\n   * @param {CancellationToken} [token] - The cancellation token.\r\n   * @returns {Promise<boolean>} A promise resolving to a boolean indicating success or failure.\r\n   */",
      "meta": {
        "range": [
          3889,
          3995
        ],
        "filename": "EmbeddingsSdkBase.js",
        "lineno": 106,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100016544",
          "name": "loadModels",
          "type": "MethodDefinition",
          "paramnames": [
            "models",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Load multiple models.",
      "params": [
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "description": "The list of model names.",
          "name": "models"
        },
        {
          "type": {
            "names": [
              "CancellationToken"
            ]
          },
          "optional": true,
          "description": "The cancellation token.",
          "name": "token"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to a boolean indicating success or failure."
        }
      ],
      "name": "loadModels",
      "longname": "module:base/EmbeddingsSdkBase#loadModels",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/EmbeddingsSdkBase",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete a model.\r\n   * @param {string} name - The model name.\r\n   * @param {CancellationToken} [token] - The cancellation token.\r\n   * @returns {Promise<boolean>} A promise resolving to a boolean indicating success or failure.\r\n   */",
      "meta": {
        "range": [
          4247,
          4353
        ],
        "filename": "EmbeddingsSdkBase.js",
        "lineno": 116,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100016554",
          "name": "deleteModel",
          "type": "MethodDefinition",
          "paramnames": [
            "name",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a model.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The model name.",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "CancellationToken"
            ]
          },
          "optional": true,
          "description": "The cancellation token.",
          "name": "token"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to a boolean indicating success or failure."
        }
      ],
      "name": "deleteModel",
      "longname": "module:base/EmbeddingsSdkBase#deleteModel",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/EmbeddingsSdkBase",
      "async": true
    },
    {
      "comment": "/**\r\n   * Build a list of semantic chunks from a hierarchy of semantic cells.\r\n   * @param {SemanticCell[]} cells - The semantic cells that form a hierarchical structure. Each cell can contain chunks and potentially child cells.\r\n   * @param {string} cells[].GUID - Unique identifier for the semantic cell (automatically generated if not provided).\r\n   * @param {string} [cells[].MD5Hash] - MD5 hash of the content in the semantic cell.\r\n   * @param {string} [cells[].SHA1Hash] - SHA1 hash of the content in the semantic cell.\r\n   * @param {string} [cells[].SHA256Hash] - SHA256 hash of the content in the semantic cell.\r\n   * @param {number} [cells[].Position] - The position of the semantic cell within the document or context.\r\n   * @param {number} [cells[].Length] - The length of the semantic cell content.\r\n   * @param {Array<SemanticChunk>} [cells[].Chunks] - A list of semantic chunks contained within the semantic cell.\r\n   * @param {Array<SemanticCell>} [cells[].Children] - Child semantic cells contained within the semantic cell, forming a hierarchy.\r\n   * @returns {SemanticChunk[]} A list of semantic chunks.\r\n   */",
      "meta": {
        "range": [
          5492,
          5801
        ],
        "filename": "EmbeddingsSdkBase.js",
        "lineno": 133,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100016564",
          "name": "buildSemanticChunkList",
          "type": "MethodDefinition",
          "paramnames": [
            "cells"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Build a list of semantic chunks from a hierarchy of semantic cells.",
      "params": [
        {
          "type": {
            "names": [
              "Array.<SemanticCell>"
            ]
          },
          "description": "The semantic cells that form a hierarchical structure. Each cell can contain chunks and potentially child cells.",
          "name": "cells"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Unique identifier for the semantic cell (automatically generated if not provided).",
          "name": "cells[].GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "MD5 hash of the content in the semantic cell.",
          "name": "cells[].MD5Hash"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "SHA1 hash of the content in the semantic cell.",
          "name": "cells[].SHA1Hash"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "SHA256 hash of the content in the semantic cell.",
          "name": "cells[].SHA256Hash"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "description": "The position of the semantic cell within the document or context.",
          "name": "cells[].Position"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "description": "The length of the semantic cell content.",
          "name": "cells[].Length"
        },
        {
          "type": {
            "names": [
              "Array.<SemanticChunk>"
            ]
          },
          "optional": true,
          "description": "A list of semantic chunks contained within the semantic cell.",
          "name": "cells[].Chunks"
        },
        {
          "type": {
            "names": [
              "Array.<SemanticCell>"
            ]
          },
          "optional": true,
          "description": "Child semantic cells contained within the semantic cell, forming a hierarchy.",
          "name": "cells[].Children"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Array.<SemanticChunk>"
            ]
          },
          "description": "A list of semantic chunks."
        }
      ],
      "name": "buildSemanticChunkList",
      "longname": "module:base/EmbeddingsSdkBase#buildSemanticChunkList",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/EmbeddingsSdkBase"
    },
    {
      "comment": "/**\r\n   * Merge embeddings data from maps into semantic chunks.\r\n   * @param {SemanticChunk[]} chunks - The chunks to update.\r\n   *   Each chunk is an object representing a segment of content with associated metadata.\r\n   *   @param {string} chunks.GUID - Unique identifier for the chunk (automatically generated).\r\n   *   @param {string|null} chunks.MD5Hash - MD5 hash of the content (default is null).\r\n   *   @param {string|null} chunks.SHA1Hash - SHA1 hash of the content (default is null).\r\n   *   @param {string|null} chunks.SHA256Hash - SHA256 hash of the content (default is null).\r\n   *   @param {number} chunks.Position - The position of the chunk (must be >= 0).\r\n   *   @param {number} chunks.Start - The start position of the chunk (must be >= 0).\r\n   *   @param {number} chunks.End - The end position of the chunk (must be >= 0).\r\n   *   @param {number} chunks.Length - The length of the content (calculated automatically).\r\n   *   @param {string} chunks.Content - The content of the chunk.\r\n   *   @param {Array<number>} [chunks.Embeddings=[]] - List of float values representing embeddings.\r\n   *     If no embeddings are provided, it defaults to an empty array.\r\n   * @param {EmbeddingsMap[]} maps - The embeddings maps.\r\n   *   Each map is an object that contains content and embeddings.\r\n   *   @param {string|null} maps.Content - The content associated with the embeddings (default is null).\r\n   *   @param {number[]} maps.Embeddings - The embeddings array (default is an empty array).\r\n   *     It must be an array of numbers, and if not provided, it defaults to an empty array.\r\n   * @param {EmbeddingsMap[]} maps - The embeddings maps.\r\n   */",
      "meta": {
        "range": [
          7476,
          7799
        ],
        "filename": "EmbeddingsSdkBase.js",
        "lineno": 167,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100016617",
          "name": "mergeEmbeddingsMaps",
          "type": "MethodDefinition",
          "paramnames": [
            "chunks",
            "maps"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Merge embeddings data from maps into semantic chunks.",
      "params": [
        {
          "type": {
            "names": [
              "Array.<SemanticChunk>"
            ]
          },
          "description": "The chunks to update.\r  Each chunk is an object representing a segment of content with associated metadata.",
          "name": "chunks"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Unique identifier for the chunk (automatically generated).",
          "name": "chunks.GUID"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "MD5 hash of the content (default is null).",
          "name": "chunks.MD5Hash"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "SHA1 hash of the content (default is null).",
          "name": "chunks.SHA1Hash"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "SHA256 hash of the content (default is null).",
          "name": "chunks.SHA256Hash"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The position of the chunk (must be >= 0).",
          "name": "chunks.Position"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The start position of the chunk (must be >= 0).",
          "name": "chunks.Start"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The end position of the chunk (must be >= 0).",
          "name": "chunks.End"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "The length of the content (calculated automatically).",
          "name": "chunks.Length"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The content of the chunk.",
          "name": "chunks.Content"
        },
        {
          "type": {
            "names": [
              "Array.<number>"
            ]
          },
          "optional": true,
          "defaultvalue": "[]",
          "description": "List of float values representing embeddings.\r    If no embeddings are provided, it defaults to an empty array.",
          "name": "chunks.Embeddings"
        },
        {
          "type": {
            "names": [
              "Array.<EmbeddingsMap>"
            ]
          },
          "description": "The embeddings maps.\r  Each map is an object that contains content and embeddings.",
          "name": "maps"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "The content associated with the embeddings (default is null).",
          "name": "maps.Content"
        },
        {
          "type": {
            "names": [
              "Array.<number>"
            ]
          },
          "description": "The embeddings array (default is an empty array).\r    It must be an array of numbers, and if not provided, it defaults to an empty array.",
          "name": "maps.Embeddings"
        },
        {
          "type": {
            "names": [
              "Array.<EmbeddingsMap>"
            ]
          },
          "description": "The embeddings maps.",
          "name": "maps"
        }
      ],
      "name": "mergeEmbeddingsMaps",
      "longname": "module:base/EmbeddingsSdkBase#mergeEmbeddingsMaps",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/EmbeddingsSdkBase"
    },
    {
      "comment": "/**\r\n   * Check if data exists from the given URL with optional cancellation support using superagent's abort method.\r\n   *\r\n   * @template T\r\n   * @param {string} url - The URL to request data from.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<T|null|ApiErrorResponse>} The parsed JSON data from the response or null if the request fails.\r\n   * @throws {Error} If the URL is null or empty.\r\n   */",
      "meta": {
        "range": [
          8804,
          11233
        ],
        "filename": "EmbeddingsSdkBase.js",
        "lineno": 204,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100016760",
          "name": "exists",
          "type": "ClassProperty"
        }
      },
      "description": "Check if data exists from the given URL with optional cancellation support using superagent's abort method.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to request data from.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(T|null|ApiErrorResponse)>"
            ]
          },
          "description": "The parsed JSON data from the response or null if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the URL is null or empty."
        }
      ],
      "name": "exists",
      "longname": "module:base/EmbeddingsSdkBase#exists",
      "kind": "member",
      "memberof": "module:base/EmbeddingsSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create an object via POST request to the specified URL.\r\n   *\r\n   * @template T\r\n   * @param {string} url - The URL to send the PUT request to.\r\n   * @param {T} obj - The object to send in the request body.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<T|null|ApiErrorResponse>} The created object as the response or null if the request fails.\r\n   * @throws {Error} If the URL or object is null or empty.\r\n   */",
      "meta": {
        "range": [
          11742,
          14234
        ],
        "filename": "EmbeddingsSdkBase.js",
        "lineno": 281,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100016985",
          "name": "post",
          "type": "ClassProperty"
        }
      },
      "description": "Create an object via POST request to the specified URL.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to send the PUT request to.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "T"
            ]
          },
          "description": "The object to send in the request body.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(T|null|ApiErrorResponse)>"
            ]
          },
          "description": "The created object as the response or null if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the URL or object is null or empty."
        }
      ],
      "name": "post",
      "longname": "module:base/EmbeddingsSdkBase#post",
      "kind": "member",
      "memberof": "module:base/EmbeddingsSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create an object via POST request to the specified URL.\r\n   *\r\n   * @template T\r\n   * @param {string} url - The URL to send the PUT request to.\r\n   * @param {T} obj - The object to send in the request body.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<T|null|ApiErrorResponse>} The created object as the response or null if the request fails.\r\n   * @throws {Error} If the URL or object is null or empty.\r\n   */",
      "meta": {
        "range": [
          14743,
          17472
        ],
        "filename": "EmbeddingsSdkBase.js",
        "lineno": 360,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100017224",
          "name": "postJson",
          "type": "ClassProperty"
        }
      },
      "description": "Create an object via POST request to the specified URL.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to send the PUT request to.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "T"
            ]
          },
          "description": "The object to send in the request body.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(T|null|ApiErrorResponse)>"
            ]
          },
          "description": "The created object as the response or null if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the URL or object is null or empty."
        }
      ],
      "name": "postJson",
      "longname": "module:base/EmbeddingsSdkBase#postJson",
      "kind": "member",
      "memberof": "module:base/EmbeddingsSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Constructor to instantiate the ViewEmbeddingsSdk.\r\n   * @param {string} generator - The embeddings generator. Default is 'LCProxy'.\r\n   * @param {string} endpoint - Endpoint URL. Default is 'http://localhost:8301/'.\r\n   * @param {string} apiKey - API key.\r\n   * @param {number} batchSize - Maximum number of chunks per task. Default is 16.\r\n   * @param {number} maxParallelTasks - Maximum number of parallel tasks. Default is 16.\r\n   * @param {number} maxRetries - Maximum retries per task. Default is 3.\r\n   * @param {number} maxFailures - Maximum failures before operation stops. Default is 3.\r\n   * @param {number} timeoutMs - Timeout in milliseconds. Default is 300000.\r\n   * @param {function} logger - Logger function.\r\n   */",
      "meta": {
        "range": [
          1108,
          1798
        ],
        "filename": "ViewEmbeddingsSdk.js",
        "lineno": 21,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100017961",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "generator",
            "endpoint",
            "apiKey",
            "batchSize",
            "maxParallelTasks",
            "maxRetries",
            "maxFailures",
            "timeoutMs",
            "logger"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructor to instantiate the ViewEmbeddingsSdk.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The embeddings generator. Default is 'LCProxy'.",
          "name": "generator"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL. Default is 'http://localhost:8301/'.",
          "name": "endpoint",
          "defaultvalue": "http://localhost:8301/"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "API key.",
          "name": "apiKey",
          "defaultvalue": null
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of chunks per task. Default is 16.",
          "name": "batchSize",
          "defaultvalue": 16
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of parallel tasks. Default is 16.",
          "name": "maxParallelTasks",
          "defaultvalue": 16
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum retries per task. Default is 3.",
          "name": "maxRetries",
          "defaultvalue": 3
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum failures before operation stops. Default is 3.",
          "name": "maxFailures",
          "defaultvalue": 3
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Timeout in milliseconds. Default is 300000.",
          "name": "timeoutMs",
          "defaultvalue": 300000
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "description": "Logger function.",
          "name": "logger",
          "defaultvalue": null
        }
      ],
      "name": "exports",
      "longname": "module.exports#module.exports",
      "kind": "class",
      "memberof": "module.exports#module",
      "scope": "static"
    },
    {
      "comment": "/**\r\n   * Validate connectivity with the current embeddings generator.\r\n   * @returns {Promise<boolean>} - True if connected successfully.\r\n   */",
      "meta": {
        "range": [
          1953,
          2538
        ],
        "filename": "ViewEmbeddingsSdk.js",
        "lineno": 50,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100018061",
          "name": "validateConnectivity",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Validate connectivity with the current embeddings generator.",
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "- True if connected successfully."
        }
      ],
      "name": "validateConnectivity",
      "longname": "validateConnectivity",
      "kind": "function",
      "scope": "global",
      "params": [],
      "async": true
    },
    {
      "comment": "/**\r\n   * Process semantic cells and generate embeddings.\r\n   * @param {Array[]} cells - List of semantic cells.\r\n   * @param {string} [cells.GUID] - Unique identifier for the semantic cell (automatically generated if not provided).\r\n   * @param {string} [cells.MD5Hash] - MD5 hash of the content.\r\n   * @param {string} [cells.SHA1Hash] - SHA1 hash of the content.\r\n   * @param {string} [cells.SHA256Hash] - SHA256 hash of the content.\r\n   * @param {number} [cells.Position] - Position of the semantic cell.\r\n   * @param {number} [cells.Length] - Length of the semantic cell.\r\n   * @param {Array<Object>} [cells.Chunks] - List of chunks contained in the semantic cell.\r\n   * @param {Array<Object>} [cells.Children] - List of child semantic cells.\r\n   * @param {string} model - Model name.\r\n   * @param {number} [timeoutMs=300000] - Timeout in milliseconds. Default is 300,000 (5 minutes).\r\n   * @returns {Promise<Array[]>} - A promise resolving to a list of processed semantic cells with embeddings.\r\n   */",
      "meta": {
        "range": [
          3554,
          4783
        ],
        "filename": "ViewEmbeddingsSdk.js",
        "lineno": 80,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100018127",
          "name": "processSemanticCells",
          "type": "MethodDefinition",
          "paramnames": [
            "cells",
            "model",
            "timeoutMs"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process semantic cells and generate embeddings.",
      "params": [
        {
          "type": {
            "names": [
              "Array.<Array>"
            ]
          },
          "description": "List of semantic cells.",
          "name": "cells"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Unique identifier for the semantic cell (automatically generated if not provided).",
          "name": "cells.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "MD5 hash of the content.",
          "name": "cells.MD5Hash"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "SHA1 hash of the content.",
          "name": "cells.SHA1Hash"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "SHA256 hash of the content.",
          "name": "cells.SHA256Hash"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "description": "Position of the semantic cell.",
          "name": "cells.Position"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "description": "Length of the semantic cell.",
          "name": "cells.Length"
        },
        {
          "type": {
            "names": [
              "Array.<Object>"
            ]
          },
          "optional": true,
          "description": "List of chunks contained in the semantic cell.",
          "name": "cells.Chunks"
        },
        {
          "type": {
            "names": [
              "Array.<Object>"
            ]
          },
          "optional": true,
          "description": "List of child semantic cells.",
          "name": "cells.Children"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Model name.",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 300000,
          "description": "Timeout in milliseconds. Default is 300,000 (5 minutes).",
          "name": "timeoutMs"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Array>>"
            ]
          },
          "description": "- A promise resolving to a list of processed semantic cells with embeddings."
        }
      ],
      "name": "processSemanticCells",
      "longname": "processSemanticCells",
      "kind": "function",
      "scope": "global",
      "async": true
    },
    {
      "comment": "/**\r\n   * Initialize the specific generator based on the provided type.\r\n   * @private\r\n   */",
      "meta": {
        "range": [
          4886,
          6280
        ],
        "filename": "ViewEmbeddingsSdk.js",
        "lineno": 115,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100018253",
          "name": "_initializeGenerator",
          "type": "MethodDefinition",
          "paramnames": []
        },
        "vars": {
          "": null
        }
      },
      "description": "Initialize the specific generator based on the provided type.",
      "access": "private",
      "name": "_initializeGenerator",
      "longname": "_initializeGenerator",
      "kind": "function",
      "scope": "global",
      "params": []
    },
    {
      "comment": "/**\r\n * View Ollama SDK.\r\n * @class\r\n * @extends EmbeddingsSdkBase\r\n * @version 0.1.0\r\n * @module base/ViewLcproxySdk\r\n */",
      "meta": {
        "filename": "ViewLcproxySdk.js",
        "lineno": 10,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {}
      },
      "description": "View Ollama SDK.",
      "kind": "module",
      "augments": [
        "EmbeddingsSdkBase"
      ],
      "version": "0.1.0",
      "name": "base/ViewLcproxySdk",
      "longname": "module:base/ViewLcproxySdk"
    },
    {
      "comment": "/**\r\n   * Constructs a new instance of ViewLcproxySdk.\r\n   * @param {string} [endpoint='http://localhost:8301'] - The base URL of the LCProxy service.\r\n   * @param {string|null} [apiKey=null] - API key for authentication.\r\n   * @param {number} [batchSize=8] - Number of chunks per batch.\r\n   * @param {number} [maxParallelTasks=16] - Maximum number of parallel tasks.\r\n   * @param {number} [maxRetries=3] - Maximum retries for failed requests.\r\n   * @param {number} [maxFailures=3] - Maximum allowable consecutive failures.\r\n   * @param {function|null} [logger=null] - Optional logging function.\r\n   */",
      "meta": {
        "range": [
          1372,
          1890
        ],
        "filename": "ViewLcproxySdk.js",
        "lineno": 28,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100018446",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "endpoint",
            "apiKey",
            "batchSize",
            "maxParallelTasks",
            "maxRetries",
            "maxFailures",
            "logger"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new instance of ViewLcproxySdk.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": "'http://localhost:8301'",
          "description": "The base URL of the LCProxy service.",
          "name": "endpoint"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "API key for authentication.",
          "name": "apiKey"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 8,
          "description": "Number of chunks per batch.",
          "name": "batchSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 16,
          "description": "Maximum number of parallel tasks.",
          "name": "maxParallelTasks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 3,
          "description": "Maximum retries for failed requests.",
          "name": "maxRetries"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 3,
          "description": "Maximum allowable consecutive failures.",
          "name": "maxFailures"
        },
        {
          "type": {
            "names": [
              "function",
              "null"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Optional logging function.",
          "name": "logger"
        }
      ],
      "name": "module:base/ViewLcproxySdk",
      "longname": "module:base/ViewLcproxySdk",
      "kind": "class"
    },
    {
      "comment": "/**\r\n     * The default model used for embeddings.\r\n     * @type {string}\r\n     */",
      "meta": {
        "range": [
          1846,
          1884
        ],
        "filename": "ViewLcproxySdk.js",
        "lineno": 52,
        "columnno": 4,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100018485",
          "name": "this.defaultModel",
          "type": "Literal",
          "value": "all-MiniLM-L6-v2",
          "paramnames": []
        }
      },
      "description": "The default model used for embeddings.",
      "type": {
        "names": [
          "string"
        ]
      },
      "name": "defaultModel",
      "longname": "module:base/ViewLcproxySdk#defaultModel",
      "kind": "member",
      "memberof": "module:base/ViewLcproxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Validates the connectivity to the LCProxy service.\r\n   * @param {AbortSignal|null} [token=null] - Optional abort token for request cancellation.\r\n   * @returns {Promise<boolean>} Resolves to true if connectivity is successful, otherwise false.\r\n   */",
      "meta": {
        "range": [
          2160,
          2358
        ],
        "filename": "ViewLcproxySdk.js",
        "lineno": 60,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100018490",
          "name": "validateConnectivity",
          "type": "MethodDefinition",
          "paramnames": [
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Validates the connectivity to the LCProxy service.",
      "params": [
        {
          "type": {
            "names": [
              "AbortSignal",
              "null"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Optional abort token for request cancellation.",
          "name": "token"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "Resolves to true if connectivity is successful, otherwise false."
        }
      ],
      "name": "validateConnectivity",
      "longname": "module:base/ViewLcproxySdk#validateConnectivity",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewLcproxySdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Preloads models on the LCProxy service.\r\n   * @param {string[]} models - List of model names to preload.\r\n   * @param {AbortSignal|null} [token=null] - Optional abort token for request cancellation.\r\n   * @returns {Promise<boolean>} Resolves to true if successful, otherwise false.\r\n   * @throws {Error} If the models list is invalid or not provided.\r\n   */",
      "meta": {
        "range": [
          2735,
          3119
        ],
        "filename": "ViewLcproxySdk.js",
        "lineno": 76,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100018516",
          "name": "preloadModels",
          "type": "MethodDefinition",
          "paramnames": [
            "models",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Preloads models on the LCProxy service.",
      "params": [
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "description": "List of model names to preload.",
          "name": "models"
        },
        {
          "type": {
            "names": [
              "AbortSignal",
              "null"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Optional abort token for request cancellation.",
          "name": "token"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "Resolves to true if successful, otherwise false."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the models list is invalid or not provided."
        }
      ],
      "name": "preloadModels",
      "longname": "module:base/ViewLcproxySdk#preloadModels",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewLcproxySdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Processes semantic cells by generating embeddings.\r\n   * @param {Array} cells - List of cells to process.\r\n   * @param {string} [model] - Model to use for embeddings. Defaults to `defaultModel`.\r\n   * @param {number} [timeoutMs=300000] - Request timeout in milliseconds.\r\n   * @param {AbortSignal|null} [token=null] - Optional abort token for request cancellation.\r\n   * @returns {Promise<Array>} Resolves to the processed cells with embeddings.\r\n   */",
      "meta": {
        "range": [
          3591,
          4017
        ],
        "filename": "ViewLcproxySdk.js",
        "lineno": 99,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100018567",
          "name": "processSemanticCells",
          "type": "MethodDefinition",
          "paramnames": [
            "cells",
            "model",
            "timeoutMs",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Processes semantic cells by generating embeddings.",
      "params": [
        {
          "type": {
            "names": [
              "Array"
            ]
          },
          "description": "List of cells to process.",
          "name": "cells"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Model to use for embeddings. Defaults to `defaultModel`.",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 300000,
          "description": "Request timeout in milliseconds.",
          "name": "timeoutMs"
        },
        {
          "type": {
            "names": [
              "AbortSignal",
              "null"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Optional abort token for request cancellation.",
          "name": "token"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array>"
            ]
          },
          "description": "Resolves to the processed cells with embeddings."
        }
      ],
      "name": "processSemanticCells",
      "longname": "module:base/ViewLcproxySdk#processSemanticCells",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewLcproxySdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Processes semantic chunks by dividing them into batches and processing each batch.\r\n   * @param {string} model - Model to use for embeddings.\r\n   * @param {Array} chunks - List of chunks to process.\r\n   * @param {number} [timeoutMs=300000] - Request timeout in milliseconds.\r\n   * @param {AbortSignal|null} [token=null] - Optional abort token for request cancellation.\r\n   * @returns {Promise<void>} Resolves when all chunks are processed.\r\n   */",
      "meta": {
        "range": [
          4483,
          5045
        ],
        "filename": "ViewLcproxySdk.js",
        "lineno": 120,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100018638",
          "name": "processSemanticChunks",
          "type": "MethodDefinition",
          "paramnames": [
            "model",
            "chunks",
            "timeoutMs",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Processes semantic chunks by dividing them into batches and processing each batch.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Model to use for embeddings.",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "Array"
            ]
          },
          "description": "List of chunks to process.",
          "name": "chunks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 300000,
          "description": "Request timeout in milliseconds.",
          "name": "timeoutMs"
        },
        {
          "type": {
            "names": [
              "AbortSignal",
              "null"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Optional abort token for request cancellation.",
          "name": "token"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "Resolves when all chunks are processed."
        }
      ],
      "name": "processSemanticChunks",
      "longname": "module:base/ViewLcproxySdk#processSemanticChunks",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewLcproxySdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Lists models.\r\n   * @param {AbortSignal|null} [token=null] - Optional abort signal for request cancellation.\r\n   * @throws {Error} Always throws as this API is not implemented.\r\n   * @returns {Promise<never>}\r\n   */",
      "meta": {
        "range": [
          5280,
          5401
        ],
        "filename": "ViewLcproxySdk.js",
        "lineno": 145,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100018734",
          "name": "listModels",
          "type": "MethodDefinition",
          "paramnames": [
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Lists models.",
      "params": [
        {
          "type": {
            "names": [
              "AbortSignal",
              "null"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Optional abort signal for request cancellation.",
          "name": "token"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Always throws as this API is not implemented."
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<never>"
            ]
          }
        }
      ],
      "name": "listModels",
      "longname": "module:base/ViewLcproxySdk#listModels",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewLcproxySdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Loads multiple models.\r\n   * @param {string[]} models - List of models to load.\r\n   * @param {AbortSignal|null} [token=null] - Optional abort signal for request cancellation.\r\n   * @throws {Error} Always throws as this API is not implemented.\r\n   * @returns {Promise<never>}\r\n   */",
      "meta": {
        "range": [
          5702,
          5831
        ],
        "filename": "ViewLcproxySdk.js",
        "lineno": 156,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100018745",
          "name": "loadModels",
          "type": "MethodDefinition",
          "paramnames": [
            "models",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Loads multiple models.",
      "params": [
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "description": "List of models to load.",
          "name": "models"
        },
        {
          "type": {
            "names": [
              "AbortSignal",
              "null"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Optional abort signal for request cancellation.",
          "name": "token"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Always throws as this API is not implemented."
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<never>"
            ]
          }
        }
      ],
      "name": "loadModels",
      "longname": "module:base/ViewLcproxySdk#loadModels",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewLcproxySdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Deletes a specific model.\r\n   * @param {string} name - The name of the model to delete.\r\n   * @param {AbortSignal|null} [token=null] - Optional abort signal for request cancellation.\r\n   * @throws {Error} Always throws as this API is not implemented.\r\n   * @returns {Promise<never>}\r\n   */",
      "meta": {
        "range": [
          6140,
          6268
        ],
        "filename": "ViewLcproxySdk.js",
        "lineno": 167,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100018757",
          "name": "deleteModel",
          "type": "MethodDefinition",
          "paramnames": [
            "name",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Deletes a specific model.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The name of the model to delete.",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "AbortSignal",
              "null"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Optional abort signal for request cancellation.",
          "name": "token"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Always throws as this API is not implemented."
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<never>"
            ]
          }
        }
      ],
      "name": "deleteModel",
      "longname": "module:base/ViewLcproxySdk#deleteModel",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewLcproxySdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Loads a single model.\r\n   * @param {string} model - The model to load.\r\n   * @param {AbortSignal|null} [token=null] - Optional abort signal for request cancellation.\r\n   * @throws {Error} Always throws as this API is not implemented.\r\n   * @returns {Promise<never>}\r\n   */",
      "meta": {
        "range": [
          6560,
          6687
        ],
        "filename": "ViewLcproxySdk.js",
        "lineno": 178,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100018769",
          "name": "loadModel",
          "type": "MethodDefinition",
          "paramnames": [
            "model",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Loads a single model.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The model to load.",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "AbortSignal",
              "null"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Optional abort signal for request cancellation.",
          "name": "token"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Always throws as this API is not implemented."
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<never>"
            ]
          }
        }
      ],
      "name": "loadModel",
      "longname": "module:base/ViewLcproxySdk#loadModel",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewLcproxySdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Processes a single batch of semantic chunks to generate embeddings.\r\n   * @param {string} model - Model to use for embeddings.\r\n   * @param {Array} chunks - List of chunks to process.\r\n   * @param {number} [timeoutMs] - Request timeout in milliseconds.\r\n   * @param {AbortSignal|null} [token=null] - Optional abort token for request cancellation.\r\n   * @returns {Promise<void>} Resolves when the batch is processed successfully.\r\n   */",
      "meta": {
        "range": [
          7142,
          8649
        ],
        "filename": "ViewLcproxySdk.js",
        "lineno": 190,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100018781",
          "name": "processBatch",
          "type": "MethodDefinition",
          "paramnames": [
            "model",
            "chunks",
            "timeoutMs",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Processes a single batch of semantic chunks to generate embeddings.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Model to use for embeddings.",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "Array"
            ]
          },
          "description": "List of chunks to process.",
          "name": "chunks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "description": "Request timeout in milliseconds.",
          "name": "timeoutMs"
        },
        {
          "type": {
            "names": [
              "AbortSignal",
              "null"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Optional abort token for request cancellation.",
          "name": "token"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "Resolves when the batch is processed successfully."
        }
      ],
      "name": "processBatch",
      "longname": "module:base/ViewLcproxySdk#processBatch",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewLcproxySdk",
      "async": true
    },
    {
      "comment": "/**\r\n * View Ollama SDK.\r\n * @class\r\n * @extends EmbeddingsSdkBase\r\n * @version 0.1.0\r\n * @module base/ViewOllamaSdk\r\n */",
      "meta": {
        "filename": "ViewOllamaSdk.js",
        "lineno": 9,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {}
      },
      "description": "View Ollama SDK.",
      "kind": "module",
      "augments": [
        "EmbeddingsSdkBase"
      ],
      "version": "0.1.0",
      "name": "base/ViewOllamaSdk",
      "longname": "module:base/ViewOllamaSdk"
    },
    {
      "comment": "/**\r\n   * Constructs a new ViewOllamaSdk.\r\n   * @param {string} [endpoint=\"http://localhost:7869\"] - The endpoint URL.\r\n   * @param {string} [apiKey=null] - The API key.\r\n   * @param {number} [batchSize=8] - The maximum number of chunks to submit in a processing request.\r\n   * @param {number} [maxParallelTasks=16] - The maximum number of parallel tasks.\r\n   * @param {number} [maxRetries=3] - The maximum number of retries.\r\n   * @param {number} [maxFailures=3] - The maximum number of failures before aborting.\r\n   * @param {function} [logger=null] - The logger function.\r\n   */",
      "meta": {
        "range": [
          1190,
          1657
        ],
        "filename": "ViewOllamaSdk.js",
        "lineno": 27,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100019019",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "endpoint",
            "apiKey",
            "batchSize",
            "maxParallelTasks",
            "maxRetries",
            "maxFailures",
            "logger"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new ViewOllamaSdk.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": "\"http://localhost:7869\"",
          "description": "The endpoint URL.",
          "name": "endpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The API key.",
          "name": "apiKey"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 8,
          "description": "The maximum number of chunks to submit in a processing request.",
          "name": "batchSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 16,
          "description": "The maximum number of parallel tasks.",
          "name": "maxParallelTasks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 3,
          "description": "The maximum number of retries.",
          "name": "maxRetries"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 3,
          "description": "The maximum number of failures before aborting.",
          "name": "maxFailures"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "The logger function.",
          "name": "logger"
        }
      ],
      "name": "module:base/ViewOllamaSdk",
      "longname": "module:base/ViewOllamaSdk",
      "kind": "class"
    },
    {
      "comment": "/**\r\n   * Validate connectivity to the endpoint.\r\n   * @param {CancellationToken} [token] - The cancellation token.\r\n   * @returns {Promise<boolean>} - Resolves to a boolean indicating connectivity status.\r\n   */",
      "meta": {
        "range": [
          1879,
          2131
        ],
        "filename": "ViewOllamaSdk.js",
        "lineno": 55,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100019068",
          "name": "validateConnectivity",
          "type": "MethodDefinition",
          "paramnames": [
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Validate connectivity to the endpoint.",
      "params": [
        {
          "type": {
            "names": [
              "CancellationToken"
            ]
          },
          "optional": true,
          "description": "The cancellation token.",
          "name": "token",
          "defaultvalue": null
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "- Resolves to a boolean indicating connectivity status."
        }
      ],
      "name": "validateConnectivity",
      "longname": "module:base/ViewOllamaSdk#validateConnectivity",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewOllamaSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Load multiple models.\r\n   * @param {Array<string>} models - List of model names.\r\n   * @param {CancellationToken} [token] - The cancellation token.\r\n   * @returns {Promise<boolean>} - Always throws an error as this API is not implemented.\r\n   * @throws {Error} - Always throws an error.\r\n   */",
      "meta": {
        "range": [
          2444,
          2573
        ],
        "filename": "ViewOllamaSdk.js",
        "lineno": 72,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100019094",
          "name": "loadModels",
          "type": "MethodDefinition",
          "paramnames": [
            "models",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Load multiple models.",
      "params": [
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "description": "List of model names.",
          "name": "models"
        },
        {
          "type": {
            "names": [
              "CancellationToken"
            ]
          },
          "optional": true,
          "description": "The cancellation token.",
          "name": "token",
          "defaultvalue": null
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "- Always throws an error as this API is not implemented."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "- Always throws an error."
        }
      ],
      "name": "loadModels",
      "longname": "module:base/ViewOllamaSdk#loadModels",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewOllamaSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Load a single model.\r\n   * @param {string} model - The model name.\r\n   * @param {CancellationToken} [token] - The cancellation token.\r\n   * @returns {Promise<boolean>} - Resolves to a boolean indicating success or failure.\r\n   */",
      "meta": {
        "range": [
          2822,
          3079
        ],
        "filename": "ViewOllamaSdk.js",
        "lineno": 82,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100019106",
          "name": "loadModel",
          "type": "MethodDefinition",
          "paramnames": [
            "model",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Load a single model.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The model name.",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "CancellationToken"
            ]
          },
          "optional": true,
          "description": "The cancellation token.",
          "name": "token",
          "defaultvalue": null
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "- Resolves to a boolean indicating success or failure."
        }
      ],
      "name": "loadModel",
      "longname": "module:base/ViewOllamaSdk#loadModel",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewOllamaSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Process a list of semantic cells and generate embeddings.\r\n   * @param {string[]} cells - The semantic cells to process.\r\n   * @param {string} model - The model to use.\r\n   * @param {number} [timeoutMs=300000] - The timeout in milliseconds.\r\n   * @param {CancellationToken} [token] - The cancellation token.\r\n   * @returns {Promise[]} - Resolves to a list of semantic cells with embeddings.\r\n   */",
      "meta": {
        "range": [
          3496,
          3873
        ],
        "filename": "ViewOllamaSdk.js",
        "lineno": 102,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100019146",
          "name": "processSemanticCells",
          "type": "MethodDefinition",
          "paramnames": [
            "cells",
            "model",
            "timeoutMs",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process a list of semantic cells and generate embeddings.",
      "params": [
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "description": "The semantic cells to process.",
          "name": "cells"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The model to use.",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 300000,
          "description": "The timeout in milliseconds.",
          "name": "timeoutMs"
        },
        {
          "type": {
            "names": [
              "CancellationToken"
            ]
          },
          "optional": true,
          "description": "The cancellation token.",
          "name": "token",
          "defaultvalue": null
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Array.<Promise>"
            ]
          },
          "description": "- Resolves to a list of semantic cells with embeddings."
        }
      ],
      "name": "processSemanticCells",
      "longname": "module:base/ViewOllamaSdk#processSemanticCells",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewOllamaSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * List available models from the endpoint.\r\n   * @param {CancellationToken} [token] - The cancellation token.\r\n   * @returns {Promise<Array[]>} - Resolves to a list of model information.\r\n   */",
      "meta": {
        "range": [
          4084,
          4406
        ],
        "filename": "ViewOllamaSdk.js",
        "lineno": 119,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100019207",
          "name": "listModels",
          "type": "MethodDefinition",
          "paramnames": [
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "List available models from the endpoint.",
      "params": [
        {
          "type": {
            "names": [
              "CancellationToken"
            ]
          },
          "optional": true,
          "description": "The cancellation token.",
          "name": "token",
          "defaultvalue": null
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<Array>>"
            ]
          },
          "description": "- Resolves to a list of model information."
        }
      ],
      "name": "listModels",
      "longname": "module:base/ViewOllamaSdk#listModels",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewOllamaSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete a model by name.\r\n   * @param {string} name - The model name.\r\n   * @param {CancellationToken} [token] - The cancellation token.\r\n   * @returns {Promise<boolean>} - Resolves to a boolean indicating success or failure.\r\n   */",
      "meta": {
        "range": [
          4657,
          5004
        ],
        "filename": "ViewOllamaSdk.js",
        "lineno": 137,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100019243",
          "name": "deleteModel",
          "type": "MethodDefinition",
          "paramnames": [
            "name",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a model by name.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The model name.",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "CancellationToken"
            ]
          },
          "optional": true,
          "description": "The cancellation token.",
          "name": "token",
          "defaultvalue": null
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "- Resolves to a boolean indicating success or failure."
        }
      ],
      "name": "deleteModel",
      "longname": "module:base/ViewOllamaSdk#deleteModel",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewOllamaSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Process semantic chunks in batches.\r\n   * @param {string} model - The model to use.\r\n   * @param {Array[]} chunks - The chunks to process.\r\n   * @param {number} [timeoutMs=300000] - The timeout in milliseconds.\r\n   * @param {CancellationToken} [token] - The cancellation token.\r\n   * @private\r\n   */",
      "meta": {
        "range": [
          5347,
          6023
        ],
        "filename": "ViewOllamaSdk.js",
        "lineno": 160,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100019286",
          "name": "processSemanticChunks",
          "type": "MethodDefinition",
          "paramnames": [
            "model",
            "chunks",
            "timeoutMs",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process semantic chunks in batches.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The model to use.",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "Array.<Array>"
            ]
          },
          "description": "The chunks to process.",
          "name": "chunks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 300000,
          "description": "The timeout in milliseconds.",
          "name": "timeoutMs"
        },
        {
          "type": {
            "names": [
              "CancellationToken"
            ]
          },
          "optional": true,
          "description": "The cancellation token.",
          "name": "token",
          "defaultvalue": null
        }
      ],
      "access": "private",
      "name": "processSemanticChunks",
      "longname": "module:base/ViewOllamaSdk#processSemanticChunks",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewOllamaSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Process a single batch of semantic chunks.\r\n   * @param {string} model - The model to use.\r\n   * @param {Array[]} chunks - The chunks to process.\r\n   * @param {number} [timeoutMs=300000] - The timeout in milliseconds.\r\n   * @param {CancellationToken} [token] - The cancellation token.\r\n   * @private\r\n   */",
      "meta": {
        "range": [
          6349,
          7745
        ],
        "filename": "ViewOllamaSdk.js",
        "lineno": 189,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100019393",
          "name": "processBatch",
          "type": "MethodDefinition",
          "paramnames": [
            "model",
            "chunks",
            "timeoutMs",
            "token"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process a single batch of semantic chunks.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The model to use.",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "Array.<Array>"
            ]
          },
          "description": "The chunks to process.",
          "name": "chunks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 300000,
          "description": "The timeout in milliseconds.",
          "name": "timeoutMs"
        },
        {
          "type": {
            "names": [
              "CancellationToken"
            ]
          },
          "optional": true,
          "description": "The cancellation token.",
          "name": "token",
          "defaultvalue": null
        }
      ],
      "access": "private",
      "name": "processBatch",
      "longname": "module:base/ViewOllamaSdk#processBatch",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewOllamaSdk",
      "async": true
    },
    {
      "comment": "/**\r\n * OpenAI embeddings generator.\r\n * @module vector/ViewOpenAiSdk\r\n * @extends EmbeddingsSdkBase\r\n */",
      "meta": {
        "filename": "ViewOpenAiSdk.js",
        "lineno": 10,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {}
      },
      "description": "OpenAI embeddings generator.",
      "kind": "module",
      "name": "vector/ViewOpenAiSdk",
      "augments": [
        "EmbeddingsSdkBase"
      ],
      "longname": "module:vector/ViewOpenAiSdk"
    },
    {
      "comment": "/** @private */",
      "meta": {
        "range": [
          651,
          692
        ],
        "filename": "ViewOpenAiSdk.js",
        "lineno": 17,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100019639",
          "name": "_defaultModel",
          "type": "ClassProperty"
        }
      },
      "access": "private",
      "name": "_defaultModel",
      "longname": "module:vector/ViewOpenAiSdk#_defaultModel",
      "kind": "member",
      "memberof": "module:vector/ViewOpenAiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Instantiate.\r\n   * @param {string} endpoint - Base URL. Default is https://api.openai.com/v1/\r\n   * @param {string} [apiKey=null] - API key\r\n   * @param {number} [batchSize=8] - Maximum number of chunks to submit in an individual processing request\r\n   * @param {number} [maxParallelTasks=16] - Maximum number of parallel tasks\r\n   * @param {number} [maxRetries=3] - Maximum number of retries to perform on any given task\r\n   * @param {number} [maxFailures=3] - Maximum number of failures to support before failing the operation\r\n   * @param {Function} [logger=null] - Logger function accepting severity and message parameters\r\n   */",
      "meta": {
        "range": [
          1345,
          1701
        ],
        "filename": "ViewOpenAiSdk.js",
        "lineno": 29,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100019641",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "endpoint",
            "apiKey",
            "batchSize",
            "maxParallelTasks",
            "maxRetries",
            "maxFailures",
            "logger"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Instantiate.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Base URL. Default is https://api.openai.com/v1/",
          "name": "endpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "API key",
          "name": "apiKey"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 8,
          "description": "Maximum number of chunks to submit in an individual processing request",
          "name": "batchSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 16,
          "description": "Maximum number of parallel tasks",
          "name": "maxParallelTasks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 3,
          "description": "Maximum number of retries to perform on any given task",
          "name": "maxRetries"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 3,
          "description": "Maximum number of failures to support before failing the operation",
          "name": "maxFailures"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Logger function accepting severity and message parameters",
          "name": "logger"
        }
      ],
      "name": "module:vector/ViewOpenAiSdk",
      "longname": "module:vector/ViewOpenAiSdk",
      "kind": "class"
    },
    {
      "comment": "/**\r\n   * Validate connectivity to the service.\r\n   * @param {object} [cancelToken] - Cancellation token\r\n   * @returns {Promise<boolean>} True if connection is valid\r\n   */",
      "meta": {
        "range": [
          1884,
          2506
        ],
        "filename": "ViewOpenAiSdk.js",
        "lineno": 55,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100019677",
          "name": "validateConnectivity",
          "type": "MethodDefinition",
          "paramnames": [
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Validate connectivity to the service.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Cancellation token",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "True if connection is valid"
        }
      ],
      "name": "validateConnectivity",
      "longname": "module:vector/ViewOpenAiSdk#validateConnectivity",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:vector/ViewOpenAiSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Process semantic cells to generate embeddings.\r\n   * @param {Array<SemanticCell>} cells - List of semantic cells to process\r\n   * @param {string} model - Model to use for processing\r\n   * @param {number} [timeoutMs=300000] - Timeout in milliseconds\r\n   * @param {object} [cancelToken] - Cancellation token\r\n   * @returns {Promise<Array<SemanticCell>>} Processed semantic cells\r\n   */",
      "meta": {
        "range": [
          2909,
          3267
        ],
        "filename": "ViewOpenAiSdk.js",
        "lineno": 86,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100019771",
          "name": "processSemanticCells",
          "type": "MethodDefinition",
          "paramnames": [
            "cells",
            "model",
            "timeoutMs",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process semantic cells to generate embeddings.",
      "params": [
        {
          "type": {
            "names": [
              "Array.<SemanticCell>"
            ]
          },
          "description": "List of semantic cells to process",
          "name": "cells"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Model to use for processing",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 300000,
          "description": "Timeout in milliseconds",
          "name": "timeoutMs"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Cancellation token",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<SemanticCell>>"
            ]
          },
          "description": "Processed semantic cells"
        }
      ],
      "name": "processSemanticCells",
      "longname": "module:vector/ViewOpenAiSdk#processSemanticCells",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:vector/ViewOpenAiSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Process semantic chunks in batches.\r\n   * @private\r\n   * @param {string} model - Model to use\r\n   * @param {Array<SemanticChunk>} chunks - Chunks to process\r\n   * @param {number} timeoutMs - Timeout in milliseconds\r\n   * @param {object} cancelToken - Cancellation token\r\n   */",
      "meta": {
        "range": [
          3563,
          4290
        ],
        "filename": "ViewOpenAiSdk.js",
        "lineno": 106,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100019818",
          "name": "_processSemanticChunks",
          "type": "MethodDefinition",
          "paramnames": [
            "model",
            "chunks",
            "timeoutMs",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process semantic chunks in batches.",
      "access": "private",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Model to use",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "Array.<SemanticChunk>"
            ]
          },
          "description": "Chunks to process",
          "name": "chunks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Timeout in milliseconds",
          "name": "timeoutMs",
          "defaultvalue": 300000
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "description": "Cancellation token",
          "name": "cancelToken"
        }
      ],
      "name": "_processSemanticChunks",
      "longname": "module:vector/ViewOpenAiSdk#_processSemanticChunks",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:vector/ViewOpenAiSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Process a batch of semantic chunks.\r\n   * @private\r\n   * @param {string} model - Model to use\r\n   * @param {Array<SemanticChunk>} chunks - Chunks to process\r\n   * @param {number} timeoutMs - Timeout in milliseconds\r\n   * @param {object} cancelToken - Cancellation token\r\n   */",
      "meta": {
        "range": [
          4586,
          7053
        ],
        "filename": "ViewOpenAiSdk.js",
        "lineno": 137,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100019937",
          "name": "_processBatch",
          "type": "MethodDefinition",
          "paramnames": [
            "model",
            "chunks",
            "timeoutMs",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process a batch of semantic chunks.",
      "access": "private",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Model to use",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "Array.<SemanticChunk>"
            ]
          },
          "description": "Chunks to process",
          "name": "chunks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Timeout in milliseconds",
          "name": "timeoutMs",
          "defaultvalue": 300000
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "description": "Cancellation token",
          "name": "cancelToken"
        }
      ],
      "name": "_processBatch",
      "longname": "module:vector/ViewOpenAiSdk#_processBatch",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:vector/ViewOpenAiSdk",
      "async": true
    },
    {
      "comment": "/**\r\n * View Vector Proxy SDK.\r\n * @module base/ViewVectorProxySdk\r\n * @version 0.1.0\r\n */",
      "meta": {
        "filename": "ViewVectorProxySdk.js",
        "lineno": 11,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {}
      },
      "description": "View Vector Proxy SDK.",
      "kind": "module",
      "name": "base/ViewVectorProxySdk",
      "version": "0.1.0",
      "longname": "module:base/ViewVectorProxySdk"
    },
    {
      "comment": "/**\r\n   * Constructs a new ViewVectorProxySdk.\r\n   * @alias module:base/ViewVectorProxySdk\r\n   * @class\r\n   * @param {string} tenantGuid - Tenant GUID.\r\n   * @param {string} accessKey - Access key.\r\n   * @param {string} endpoint - Endpoint URL (default is \"http://localhost:8311/\").\r\n   */",
      "meta": {
        "range": [
          1090,
          1257
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 25,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020292",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new ViewVectorProxySdk.",
      "alias": "module:base/ViewVectorProxySdk",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID.",
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key.",
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL (default is \"http://localhost:8311/\").",
          "name": "endpoint",
          "defaultvalue": "http://localhost:8311/"
        }
      ],
      "name": "module:base/ViewVectorProxySdk",
      "longname": "module:base/ViewVectorProxySdk"
    },
    {
      "comment": "/**\r\n   * Write a document.\r\n   * @param {EmbeddingsDocument} document - The embeddings document to write.\r\n   * @param {boolean} document.success - Indicates if the parser was successful.\r\n   * @param {Error} document.exception - Exception, if any.\r\n   * @param {string} document.guid - Unique identifier (auto-generated if not provided).\r\n   * @param {string} document.tenantGUID - Tenant's unique identifier.\r\n   * @param {string} document.collectionGUID - Collection's unique identifier.\r\n   * @param {string} document.sourceDocumentGUID - Source document's unique identifier.\r\n   * @param {string} document.bucketGUID - Bucket's unique identifier.\r\n   * @param {string} document.vectorRepositoryGUID - Vector repository's unique identifier.\r\n   * @param {string} document.graphRepositoryGUID - Graph repository's unique identifier.\r\n   * @param {string} document.graphNodeIdentifier - Graph node identifier.\r\n   * @param {string} document.objectGUID - Object's unique identifier.\r\n   * @param {string} document.objectKey - Object key.\r\n   * @param {string} document.objectVersion - Object version.\r\n   * @param {string} document.model - Model identifier.\r\n   * @param {EmbeddingsRule} document.embeddingsRule - Embeddings rule configuration.\r\n   * @param {string} document.content - Content of the document.\r\n   * @param {number} document.score - Score of the embedding.\r\n   * @param {number} document.distance - Distance of the embedding.\r\n   * @param {Array<SemanticCell>} document.semanticCells - List of semantic cells.\r\n   * @param {Date} document.createdUtc - Creation timestamp in UTC (default: current time).\r\n   * @param {Object} [cancelToken] - Optional cancellation token with an `abort` method.\r\n   * @returns {Promise<Array<EmbeddingsDocument>|null|ApiErrorResponse>} A promise resolving to a list of EmbeddingsDocuments or null.\r\n   * @throws {Error} If the document is null.\r\n   */",
      "meta": {
        "range": [
          3168,
          3482
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 57,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020313",
          "name": "writeDocument",
          "type": "ClassProperty"
        }
      },
      "description": "Write a document.",
      "params": [
        {
          "type": {
            "names": [
              "EmbeddingsDocument"
            ]
          },
          "description": "The embeddings document to write.",
          "name": "document"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if the parser was successful.",
          "name": "document.success"
        },
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "Exception, if any.",
          "name": "document.exception"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Unique identifier (auto-generated if not provided).",
          "name": "document.guid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's unique identifier.",
          "name": "document.tenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Collection's unique identifier.",
          "name": "document.collectionGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Source document's unique identifier.",
          "name": "document.sourceDocumentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket's unique identifier.",
          "name": "document.bucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector repository's unique identifier.",
          "name": "document.vectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository's unique identifier.",
          "name": "document.graphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph node identifier.",
          "name": "document.graphNodeIdentifier"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object's unique identifier.",
          "name": "document.objectGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object key.",
          "name": "document.objectKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object version.",
          "name": "document.objectVersion"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Model identifier.",
          "name": "document.model"
        },
        {
          "type": {
            "names": [
              "EmbeddingsRule"
            ]
          },
          "description": "Embeddings rule configuration.",
          "name": "document.embeddingsRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content of the document.",
          "name": "document.content"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Score of the embedding.",
          "name": "document.score"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Distance of the embedding.",
          "name": "document.distance"
        },
        {
          "type": {
            "names": [
              "Array.<SemanticCell>"
            ]
          },
          "description": "List of semantic cells.",
          "name": "document.semanticCells"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (default: current time).",
          "name": "document.createdUtc"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token with an `abort` method.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<EmbeddingsDocument>|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to a list of EmbeddingsDocuments or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the document is null."
        }
      ],
      "name": "writeDocument",
      "longname": "module:base/ViewVectorProxySdk#writeDocument",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a document.\r\n   * @param {VectorDeleteRequest} delReq - Delete request parameters.\r\n   * @param {string} delReq.TenantGUID - Tenant's unique identifier.\r\n   * @param {string} delReq.GUID - Document's unique identifier.\r\n   * @param {string} delReq.CollectionGUID - Collection's unique identifier.\r\n   * @param {string} delReq.SourceDocumentGUID - Source document's unique identifier.\r\n   * @param {string} delReq.BucketGUID - Bucket's unique identifier.\r\n   * @param {string} delReq.ObjectGUID - Object's unique identifier.\r\n   * @param {string} delReq.VectorRepositoryGUID - Vector repository's unique identifier.\r\n   * @param {string} delReq.Key - Key identifier.\r\n   * @param {string} delReq.Version - Version identifier.\r\n   * @param {Object} [cancelToken] - Optional cancellation token with an `abort` method.\r\n   * @returns {Promise<boolean>} A promise resolving to true if successful, false otherwise.\r\n   * @throws {Error} If the delete request is null.\r\n   */",
      "meta": {
        "range": [
          4477,
          4777
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 82,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020351",
          "name": "deleteDocument",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a document.",
      "params": [
        {
          "type": {
            "names": [
              "VectorDeleteRequest"
            ]
          },
          "description": "Delete request parameters.",
          "name": "delReq"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's unique identifier.",
          "name": "delReq.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Document's unique identifier.",
          "name": "delReq.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Collection's unique identifier.",
          "name": "delReq.CollectionGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Source document's unique identifier.",
          "name": "delReq.SourceDocumentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket's unique identifier.",
          "name": "delReq.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object's unique identifier.",
          "name": "delReq.ObjectGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector repository's unique identifier.",
          "name": "delReq.VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Key identifier.",
          "name": "delReq.Key"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Version identifier.",
          "name": "delReq.Version"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token with an `abort` method.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to true if successful, false otherwise."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the delete request is null."
        }
      ],
      "name": "deleteDocument",
      "longname": "module:base/ViewVectorProxySdk#deleteDocument",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Truncate table.\r\n   * @param {VectorDeleteRequest} delReq - Delete request parameters.\r\n   * @param {string} delReq.TenantGUID - Tenant's unique identifier.\r\n   * @param {string} delReq.GUID - Document's unique identifier.\r\n   * @param {string} delReq.CollectionGUID - Collection's unique identifier.\r\n   * @param {string} delReq.SourceDocumentGUID - Source document's unique identifier.\r\n   * @param {string} delReq.BucketGUID - Bucket's unique identifier.\r\n   * @param {string} delReq.ObjectGUID - Object's unique identifier.\r\n   * @param {string} delReq.VectorRepositoryGUID - Vector repository's unique identifier.\r\n   * @param {string} delReq.Key - Key identifier.\r\n   * @param {string} delReq.Version - Version identifier.\r\n   * @param {Object} [cancelToken] - Optional cancellation token with an `abort` method.\r\n   * @returns {Promise<boolean>} A promise resolving to true if successful, false otherwise.\r\n   * @throws {Error} If the delete request is null.\r\n   */",
      "meta": {
        "range": [
          5769,
          6079
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 107,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020388",
          "name": "truncateTable",
          "type": "ClassProperty"
        }
      },
      "description": "Truncate table.",
      "params": [
        {
          "type": {
            "names": [
              "VectorDeleteRequest"
            ]
          },
          "description": "Delete request parameters.",
          "name": "delReq"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's unique identifier.",
          "name": "delReq.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Document's unique identifier.",
          "name": "delReq.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Collection's unique identifier.",
          "name": "delReq.CollectionGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Source document's unique identifier.",
          "name": "delReq.SourceDocumentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket's unique identifier.",
          "name": "delReq.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object's unique identifier.",
          "name": "delReq.ObjectGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector repository's unique identifier.",
          "name": "delReq.VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Key identifier.",
          "name": "delReq.Key"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Version identifier.",
          "name": "delReq.Version"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token with an `abort` method.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to true if successful, false otherwise."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the delete request is null."
        }
      ],
      "name": "truncateTable",
      "longname": "module:base/ViewVectorProxySdk#truncateTable",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate a table.\r\n   * @param {EnumerationQuery} query - Enumeration query parameters.\r\n   * @param {number} query.timestamp - Query timestamp.\r\n   * @param {TenantMetadata} query.tenant - Tenant metadata.\r\n   * @param {string} query.tenantGuid - Tenant's unique identifier.\r\n   * @param {BucketMetadata} query.bucket - Bucket metadata.\r\n   * @param {string} query.bucketGuid - Bucket's unique identifier.\r\n   * @param {Collection} query.collection - Collection information.\r\n   * @param {string} query.collectionGuid - Collection's unique identifier.\r\n   * @param {SourceDocument} query.sourceDocument - Source document information.\r\n   * @param {string} query.sourceDocumentGuid - Source document's unique identifier.\r\n   * @param {VectorRepository} query.vectorRepository - Vector repository information.\r\n   * @param {string} query.vectorRepositoryGuid - Vector repository's unique identifier.\r\n   * @param {GraphRepository} query.graphRepository - Graph repository information.\r\n   * @param {string} query.graphRepositoryGuid - Graph repository's unique identifier.\r\n   * @param {string} query.graphNodeIdentifier - Graph node identifier.\r\n   * @param {number} query.maxResults - Maximum number of results to retrieve (1-1000, default: 1000).\r\n   * @param {string} query.continuationToken - Token for pagination.\r\n   * @param {string} query.prefix - Prefix filter for results.\r\n   * @param {string} query.suffix - Suffix filter for results.\r\n   * @param {string} query.marker - Marker for result set.\r\n   * @param {string} query.delimiter - Delimiter for grouping results.\r\n   * @param {string} query.token - Authorization token.\r\n   * @param {boolean} query.includeData - Whether to include subordinate data.\r\n   * @param {boolean} query.includeOwners - Whether to include owner information (default: true).\r\n   * @param {Array<SearchFilter>} query.filters - Search filters to apply.\r\n   * @param {EnumerationOrderEnum} query.ordering - Ordering for the enumeration results (default: CreatedDescending).\r\n   * @param {Object} [cancelToken] - Optional cancellation token with an `abort` method.\r\n   * @returns {Promise<EnumerationResult<EmbeddingsDocument>|null>} A promise resolving to the enumeration result or null.\r\n   * @throws {Error} If the query is null.\r\n   */",
      "meta": {
        "range": [
          8375,
          8689
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 149,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020425",
          "name": "enumerateTable",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate a table.",
      "params": [
        {
          "type": {
            "names": [
              "EnumerationQuery"
            ]
          },
          "description": "Enumeration query parameters.",
          "name": "query"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Query timestamp.",
          "name": "query.timestamp"
        },
        {
          "type": {
            "names": [
              "TenantMetadata"
            ]
          },
          "description": "Tenant metadata.",
          "name": "query.tenant"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's unique identifier.",
          "name": "query.tenantGuid"
        },
        {
          "type": {
            "names": [
              "BucketMetadata"
            ]
          },
          "description": "Bucket metadata.",
          "name": "query.bucket"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket's unique identifier.",
          "name": "query.bucketGuid"
        },
        {
          "type": {
            "names": [
              "Collection"
            ]
          },
          "description": "Collection information.",
          "name": "query.collection"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Collection's unique identifier.",
          "name": "query.collectionGuid"
        },
        {
          "type": {
            "names": [
              "SourceDocument"
            ]
          },
          "description": "Source document information.",
          "name": "query.sourceDocument"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Source document's unique identifier.",
          "name": "query.sourceDocumentGuid"
        },
        {
          "type": {
            "names": [
              "VectorRepository"
            ]
          },
          "description": "Vector repository information.",
          "name": "query.vectorRepository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector repository's unique identifier.",
          "name": "query.vectorRepositoryGuid"
        },
        {
          "type": {
            "names": [
              "GraphRepository"
            ]
          },
          "description": "Graph repository information.",
          "name": "query.graphRepository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository's unique identifier.",
          "name": "query.graphRepositoryGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph node identifier.",
          "name": "query.graphNodeIdentifier"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of results to retrieve (1-1000, default: 1000).",
          "name": "query.maxResults"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Token for pagination.",
          "name": "query.continuationToken"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix filter for results.",
          "name": "query.prefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix filter for results.",
          "name": "query.suffix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Marker for result set.",
          "name": "query.marker"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Delimiter for grouping results.",
          "name": "query.delimiter"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Authorization token.",
          "name": "query.token"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether to include subordinate data.",
          "name": "query.includeData"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether to include owner information (default: true).",
          "name": "query.includeOwners"
        },
        {
          "type": {
            "names": [
              "Array.<SearchFilter>"
            ]
          },
          "description": "Search filters to apply.",
          "name": "query.filters"
        },
        {
          "type": {
            "names": [
              "EnumerationOrderEnum"
            ]
          },
          "description": "Ordering for the enumeration results (default: CreatedDescending).",
          "name": "query.ordering"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token with an `abort` method.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult.<EmbeddingsDocument>|null)>"
            ]
          },
          "description": "A promise resolving to the enumeration result or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the query is null."
        }
      ],
      "name": "enumerateTable",
      "longname": "module:base/ViewVectorProxySdk#enumerateTable",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Similarity search.\r\n   * @param {VectorSearchRequest} searchReq - Search request parameters.\r\n   * @param {VectorSearchTypeEnum} searchReq.SearchType - Search type (default: InnerProduct).\r\n   * @param {string} searchReq.VectorRepositoryGUID - Vector repository's unique identifier.\r\n   * @param {number} searchReq.StartIndex - Starting index for results.\r\n   * @param {number} searchReq.MaxResults - Maximum number of results.\r\n   * @param {Array<number>} searchReq.Embeddings - Vector embeddings to search against.\r\n   * @param {Object} [cancelToken] - Optional cancellation token with an `abort` method.\r\n   * @returns {Promise<EmbeddingsDocument[]|null>} A promise resolving to a list of EmbeddingsDocuments or null.\r\n   * @throws {Error} If the search request is null.\r\n   */",
      "meta": {
        "range": [
          9489,
          9822
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 171,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020463",
          "name": "similaritySearch",
          "type": "ClassProperty"
        }
      },
      "description": "Similarity search.",
      "params": [
        {
          "type": {
            "names": [
              "VectorSearchRequest"
            ]
          },
          "description": "Search request parameters.",
          "name": "searchReq"
        },
        {
          "type": {
            "names": [
              "VectorSearchTypeEnum"
            ]
          },
          "description": "Search type (default: InnerProduct).",
          "name": "searchReq.SearchType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector repository's unique identifier.",
          "name": "searchReq.VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Starting index for results.",
          "name": "searchReq.StartIndex"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of results.",
          "name": "searchReq.MaxResults"
        },
        {
          "type": {
            "names": [
              "Array.<number>"
            ]
          },
          "description": "Vector embeddings to search against.",
          "name": "searchReq.Embeddings"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token with an `abort` method.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<EmbeddingsDocument>|null)>"
            ]
          },
          "description": "A promise resolving to a list of EmbeddingsDocuments or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the search request is null."
        }
      ],
      "name": "similaritySearch",
      "longname": "module:base/ViewVectorProxySdk#similaritySearch",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Raw query.\r\n   * @param {VectorQueryRequest} queryReq - Query request parameters.\r\n   * @param {string} queryReq.Query - Raw query string.\r\n   * @param {string} queryReq.VectorRepositoryGUID - Vector repository's unique identifier.\r\n   * @param {Object} [cancelToken] - Optional cancellation token with an `abort` method.\r\n   * @returns {Promise<string|null>} A promise resolving to the query result as a string or null.\r\n   * @throws {Error} If the query request is null.\r\n   */",
      "meta": {
        "range": [
          10321,
          10613
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 190,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020501",
          "name": "rawQuery",
          "type": "ClassProperty"
        }
      },
      "description": "Raw query.",
      "params": [
        {
          "type": {
            "names": [
              "VectorQueryRequest"
            ]
          },
          "description": "Query request parameters.",
          "name": "queryReq"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Raw query string.",
          "name": "queryReq.Query"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector repository's unique identifier.",
          "name": "queryReq.VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token with an `abort` method.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(string|null)>"
            ]
          },
          "description": "A promise resolving to the query result as a string or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the query request is null."
        }
      ],
      "name": "rawQuery",
      "longname": "module:base/ViewVectorProxySdk#rawQuery",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   *  search.\r\n   * @param {VectorSearchRequest} searchReq - Search request parameters.\r\n   * @param {VectorSearchTypeEnum} searchReq.SearchType - Search type (default: InnerProduct).\r\n   * @param {string} searchReq.VectorRepositoryGUID - Vector repository's unique identifier.\r\n   * @param {number} searchReq.MaxResults - Maximum number of results.\r\n   * @param {Array<number>} searchReq.Embeddings - Vector embeddings to search against.\r\n   * @param {Object} [cancelToken] - Optional cancellation token with an `abort` method.\r\n   * @returns {Promise<EmbeddingsDocument[]|null>} A promise resolving to a list of EmbeddingsDocuments or null.\r\n   * @throws {Error} If the search request is null.\r\n   */",
      "meta": {
        "range": [
          11349,
          11912
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 212,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020538",
          "name": "vectorSearch",
          "type": "ClassProperty"
        }
      },
      "description": "search.",
      "params": [
        {
          "type": {
            "names": [
              "VectorSearchRequest"
            ]
          },
          "description": "Search request parameters.",
          "name": "searchReq"
        },
        {
          "type": {
            "names": [
              "VectorSearchTypeEnum"
            ]
          },
          "description": "Search type (default: InnerProduct).",
          "name": "searchReq.SearchType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector repository's unique identifier.",
          "name": "searchReq.VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of results.",
          "name": "searchReq.MaxResults"
        },
        {
          "type": {
            "names": [
              "Array.<number>"
            ]
          },
          "description": "Vector embeddings to search against.",
          "name": "searchReq.Embeddings"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token with an `abort` method.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<EmbeddingsDocument>|null)>"
            ]
          },
          "description": "A promise resolving to a list of EmbeddingsDocuments or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the search request is null."
        }
      ],
      "name": "vectorSearch",
      "longname": "module:base/ViewVectorProxySdk#vectorSearch",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Find embeddings.\r\n   * @param {string} vector_repository_guid - Vector repository's unique identifier.\r\n   * @param {VectorSearchRequest} searchReq - Search request parameters.\r\n   * @param {Array<Object>} searchReq.Criteria - Search criteria.\r\n   * @param {Object} [cancelToken] - Optional cancellation token with an `abort` method.\r\n   * @returns {Promise<EmbeddingResponse|null>} A promise resolving to the EmbeddingResponse object or null.\r\n   * @throws {Error} If the search request is null.\r\n   */",
      "meta": {
        "range": [
          12435,
          12962
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 239,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020595",
          "name": "findEmbeddings",
          "type": "ClassProperty"
        }
      },
      "description": "Find embeddings.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector repository's unique identifier.",
          "name": "vector_repository_guid"
        },
        {
          "type": {
            "names": [
              "VectorSearchRequest"
            ]
          },
          "description": "Search request parameters.",
          "name": "searchReq"
        },
        {
          "type": {
            "names": [
              "Array.<Object>"
            ]
          },
          "description": "Search criteria.",
          "name": "searchReq.Criteria"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional cancellation token with an `abort` method.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EmbeddingResponse|null)>"
            ]
          },
          "description": "A promise resolving to the EmbeddingResponse object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the search request is null."
        }
      ],
      "name": "findEmbeddings",
      "longname": "module:base/ViewVectorProxySdk#findEmbeddings",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate all repositories.\r\n   * @param {Object} enumerationQuery - Enumeration query parameters.\r\n   * @property {number} enumerationQuery.maxResults - Maximum number of results to retrieve.\r\n   *@property {string} enumerationQuery.continuationToken - Token for continuation in results\r\n   * @property {string} enumerationQuery.tenantGuid - GUID for the tenant.\r\n   * @property {string} enumerationQuery.bucketGuid - GUID for the bucket.\r\n   *@property {string} enumerationQuery.collectionGuid - GUID for the collection.\r\n   * @property {string} enumerationQuery.VectorRepositoryGUID - GUID for the vector repository.\r\n   * @property {EnumerationOrderEnum} enumerationQuery.ordering - Ordering for the enumeration results.\r\n   * @property {boolean} enumerationQuery.includeData - Flag to include subordinate data.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise[]} A promise resolving to a list of VectorRepository objects.\r\n   */",
      "meta": {
        "range": [
          14013,
          14366
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 266,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020649",
          "name": "enumerateVectorRepositories",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate all repositories.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Enumeration query parameters.",
          "name": "enumerationQuery"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "properties": [
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of results to retrieve.",
          "name": "enumerationQuery.maxResults"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Token for continuation in results",
          "name": "enumerationQuery.continuationToken"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the tenant.",
          "name": "enumerationQuery.tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the bucket.",
          "name": "enumerationQuery.bucketGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the collection.",
          "name": "enumerationQuery.collectionGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the vector repository.",
          "name": "enumerationQuery.VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "EnumerationOrderEnum"
            ]
          },
          "description": "Ordering for the enumeration results.",
          "name": "enumerationQuery.ordering"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Flag to include subordinate data.",
          "name": "enumerationQuery.includeData"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Array.<Promise>"
            ]
          },
          "description": "A promise resolving to a list of VectorRepository objects."
        }
      ],
      "name": "enumerateVectorRepositories",
      "longname": "module:base/ViewVectorProxySdk#enumerateVectorRepositories",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Repository statistics.\r\n   * @param {string} VectorRepositoryGUID - GUID for the vector repository.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<CollectionStatistics>} A promise resolving to the CollectionStatistics object.\r\n   * @throws {Error} If the vectorRepositoryGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          14763,
          15184
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 284,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020684",
          "name": "retrieveVectorRepositoryStatistics",
          "type": "ClassProperty"
        }
      },
      "description": "Repository statistics.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the vector repository.",
          "name": "VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<CollectionStatistics>"
            ]
          },
          "description": "A promise resolving to the CollectionStatistics object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the vectorRepositoryGuid is null or empty."
        }
      ],
      "name": "retrieveVectorRepositoryStatistics",
      "longname": "module:base/ViewVectorProxySdk#retrieveVectorRepositoryStatistics",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Empty repository.\r\n   * @param {string} VectorRepositoryGUID - GUID for the vector repository.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void>} A promise that resolves when the repository is deleted.\r\n   * @throws {Error} If the VectorRepositoryGUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          15560,
          15930
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 300,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020726",
          "name": "deleteVectorRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Empty repository.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the vector repository.",
          "name": "VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the repository is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the VectorRepositoryGUID is null or empty."
        }
      ],
      "name": "deleteVectorRepository",
      "longname": "module:base/ViewVectorProxySdk#deleteVectorRepository",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write a document.\r\n   * @param {EmbeddingsDocument} doc - Document to write.\r\n   * @param {string} doc.TenantGuid - GUID for the  tenant.\r\n   * @param {string} doc.BucketGuid - GUID for the bucket.\r\n   * @param {string} doc.CollectionGuid - GUID for the collection.\r\n   * @param {string} doc.VectorRepositoryGuid - GUID for the vector repository.\r\n   * @param {string} doc.ObjectGuid - GUID for the object.\r\n   * @param {string} doc.SourceDocumentGuid - GUID for the source document.\r\n   * @param {string} doc.ObjectKey - Object key.\r\n   * @param {string} doc.ObjectVersion - Object version.\r\n   * @param {Array<SemanticCell>} options.semanticCells - List of semantic cells.\r\n   * @param {Date} options.createdUtc - Date and time the document was created (default: current time).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EmbeddingsDocument>} A promise resolving to the EmbeddingsDocument object.\r\n   * @throws {Error} If the document is null.\r\n   */",
      "meta": {
        "range": [
          17023,
          17603
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 329,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020765",
          "name": "writeDoc",
          "type": "ClassProperty"
        }
      },
      "description": "Write a document.",
      "params": [
        {
          "type": {
            "names": [
              "EmbeddingsDocument"
            ]
          },
          "description": "Document to write.",
          "name": "doc"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the  tenant.",
          "name": "doc.TenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the bucket.",
          "name": "doc.BucketGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the collection.",
          "name": "doc.CollectionGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the vector repository.",
          "name": "doc.VectorRepositoryGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the object.",
          "name": "doc.ObjectGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the source document.",
          "name": "doc.SourceDocumentGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object key.",
          "name": "doc.ObjectKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object version.",
          "name": "doc.ObjectVersion"
        },
        {
          "type": {
            "names": [
              "Array.<SemanticCell>"
            ]
          },
          "description": "List of semantic cells.",
          "name": "options.semanticCells"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Date and time the document was created (default: current time).",
          "name": "options.createdUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<EmbeddingsDocument>"
            ]
          },
          "description": "A promise resolving to the EmbeddingsDocument object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the document is null."
        }
      ],
      "name": "writeDoc",
      "longname": "module:base/ViewVectorProxySdk#writeDoc",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Read a document.\r\n   * @param {string} documentGuid - GUID for the Document.\r\n   * @param {string} VectorRepositoryGUID - GUID for the vector repository.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EmbeddingsDocument>} A promise resolving to the EmbeddingsDocument object.\r\n   * @throws {Error} If the documentGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          18042,
          18618
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 350,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020830",
          "name": "readDoc",
          "type": "ClassProperty"
        }
      },
      "description": "Read a document.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the Document.",
          "name": "documentGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the vector repository.",
          "name": "VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<EmbeddingsDocument>"
            ]
          },
          "description": "A promise resolving to the EmbeddingsDocument object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the documentGuid is null or empty."
        }
      ],
      "name": "readDoc",
      "longname": "module:base/ViewVectorProxySdk#readDoc",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a document.\r\n   * @param {string} documentGuid - GUID for the document.\r\n   * @param {string} vectorRepositoryGuid - GUID for the vector repository.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Boolean|ApiErrorResponse>} A promise that resolves when the document is deleted.\r\n   * @throws {Error} If the documentGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          19065,
          19624
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 376,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020885",
          "name": "deleteDoc",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a document.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the document.",
          "name": "documentGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the vector repository.",
          "name": "vectorRepositoryGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise that resolves when the document is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the documentGuid is null or empty."
        }
      ],
      "name": "deleteDoc",
      "longname": "module:base/ViewVectorProxySdk#deleteDoc",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Document exists.\r\n   * @param {string} documentGuid - GUID for the document.\r\n   * @param {string} vectorRepositoryGuid - GUID for the vector repository.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void>} A promise resolving to a void indicating whether the document exists.\r\n   * @throws {Error} If the documentGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          20065,
          20626
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 402,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020939",
          "name": "documentExists",
          "type": "ClassProperty"
        }
      },
      "description": "Document exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the document.",
          "name": "documentGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the vector repository.",
          "name": "vectorRepositoryGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise resolving to a void indicating whether the document exists."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the documentGuid is null or empty."
        }
      ],
      "name": "documentExists",
      "longname": "module:base/ViewVectorProxySdk#documentExists",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Get semantic cells.\r\n   * @param {string} documentGuid - GUID for the document.\r\n   * @param {string} vectorRepositoryGuid - GUID for the vector repository.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<SemanticCell[]>} A promise resolving to the SemanticCell array.\r\n   * @throws {Error} If the documentGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          21103,
          21704
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 432,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100020993",
          "name": "getSemanticCells",
          "type": "ClassProperty"
        }
      },
      "description": "Get semantic cells.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the document.",
          "name": "documentGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the vector repository.",
          "name": "vectorRepositoryGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<SemanticCell>>"
            ]
          },
          "description": "A promise resolving to the SemanticCell array."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the documentGuid is null or empty."
        }
      ],
      "name": "getSemanticCells",
      "longname": "module:base/ViewVectorProxySdk#getSemanticCells",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Get a semantic cell.\r\n   * @param {string} semanticCellGuid - GUID for the semantic cell.\r\n   * @param {string} documentGuid - GUID for the document.\r\n   * @param {string} vectorRepositoryGuid - GUID for the vector repository.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<SemanticCell>} A promise resolving to the SemanticCell.\r\n   */",
      "meta": {
        "range": [
          22137,
          22778
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 459,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100021050",
          "name": "getSemanticCell",
          "type": "ClassProperty"
        }
      },
      "description": "Get a semantic cell.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the semantic cell.",
          "name": "semanticCellGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the document.",
          "name": "documentGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the vector repository.",
          "name": "vectorRepositoryGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<SemanticCell>"
            ]
          },
          "description": "A promise resolving to the SemanticCell."
        }
      ],
      "name": "getSemanticCell",
      "longname": "module:base/ViewVectorProxySdk#getSemanticCell",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Semantic cell exists.\r\n   * @param {string} semanticCellGuid - GUID for the semantic cell.\r\n   * @param {string} documentGuid - GUID for the document.\r\n   * @param {string} vectorRepositoryGuid - GUID for the vector repository.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void>} A promise resolving to a void indicating whether the semantic cell exists.\r\n   * @throws {Error} If the semanticCellGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          23302,
          24046
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 488,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100021110",
          "name": "semanticCellExists",
          "type": "ClassProperty"
        }
      },
      "description": "Semantic cell exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the semantic cell.",
          "name": "semanticCellGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the document.",
          "name": "documentGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the vector repository.",
          "name": "vectorRepositoryGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise resolving to a void indicating whether the semantic cell exists."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the semanticCellGuid is null or empty."
        }
      ],
      "name": "semanticCellExists",
      "longname": "module:base/ViewVectorProxySdk#semanticCellExists",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Get semantic chunks.\r\n   * @param {string} semanticCellGuid - GUID for the semantic cell.\r\n   * @param {string} documentGuid - GUID for the document.\r\n   * @param {string} vectorRepositoryGuid - GUID for the vector repository.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<SemanticChunk[]>} A promise resolving to the SemanticChunk array.\r\n   */",
      "meta": {
        "range": [
          24534,
          25317
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 522,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100021179",
          "name": "getSemanticChunks",
          "type": "ClassProperty"
        }
      },
      "description": "Get semantic chunks.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the semantic cell.",
          "name": "semanticCellGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the document.",
          "name": "documentGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the vector repository.",
          "name": "vectorRepositoryGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<SemanticChunk>>"
            ]
          },
          "description": "A promise resolving to the SemanticChunk array."
        }
      ],
      "name": "getSemanticChunks",
      "longname": "module:base/ViewVectorProxySdk#getSemanticChunks",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Get a semantic chunk.\r\n   * @param {string} semanticChunkGuid - GUID for the semantic chunk.\r\n   * @param {string} semanticCellGuid - GUID for the semantic cell.\r\n   * @param {string} documentGuid - GUID for the document.\r\n   * @param {string} vectorRepositoryGuid - GUID for the vector repository.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<SemanticChunk>} A promise resolving to the SemanticChunk.\r\n   */",
      "meta": {
        "range": [
          25824,
          26767
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 555,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100021251",
          "name": "getSemanticChunk",
          "type": "ClassProperty"
        }
      },
      "description": "Get a semantic chunk.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the semantic chunk.",
          "name": "semanticChunkGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the semantic cell.",
          "name": "semanticCellGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the document.",
          "name": "documentGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the vector repository.",
          "name": "vectorRepositoryGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<SemanticChunk>"
            ]
          },
          "description": "A promise resolving to the SemanticChunk."
        }
      ],
      "name": "getSemanticChunk",
      "longname": "module:base/ViewVectorProxySdk#getSemanticChunk",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Semantic chunk exists.\r\n   * @param {string} semanticChunkGuid - GUID for the semantic chunk.\r\n   * @param {string} semanticCellGuid - GUID for the semantic cell.\r\n   * @param {string} documentGuid - GUID for the document.\r\n   * @param {string} vectorRepositoryGuid - GUID for the vector repository.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void>} A promise resolving to a void indicating whether the semantic chunk exists.\r\n   * @throws {Error} If the semanticChunkGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          27365,
          28324
        ],
        "filename": "ViewVectorProxySdk.js",
        "lineno": 593,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100021336",
          "name": "semanticChunkExists",
          "type": "ClassProperty"
        }
      },
      "description": "Semantic chunk exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the semantic chunk.",
          "name": "semanticChunkGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the semantic cell.",
          "name": "semanticCellGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the document.",
          "name": "documentGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID for the vector repository.",
          "name": "vectorRepositoryGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise resolving to a void indicating whether the semantic chunk exists."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the semanticChunkGuid is null or empty."
        }
      ],
      "name": "semanticChunkExists",
      "longname": "module:base/ViewVectorProxySdk#semanticChunkExists",
      "kind": "member",
      "memberof": "module:base/ViewVectorProxySdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n * VoyageAI embeddings generator.\r\n * @module vector/ViewVoyageAiSdk\r\n * @extends EmbeddingsSdkBase\r\n */",
      "meta": {
        "filename": "ViewVoyageAiSdk.js",
        "lineno": 10,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {}
      },
      "description": "VoyageAI embeddings generator.",
      "kind": "module",
      "name": "vector/ViewVoyageAiSdk",
      "augments": [
        "EmbeddingsSdkBase"
      ],
      "longname": "module:vector/ViewVoyageAiSdk"
    },
    {
      "comment": "/** @private */",
      "meta": {
        "range": [
          661,
          703
        ],
        "filename": "ViewVoyageAiSdk.js",
        "lineno": 17,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100021459",
          "name": "_defaultModel",
          "type": "ClassProperty"
        }
      },
      "access": "private",
      "name": "_defaultModel",
      "longname": "module:vector/ViewVoyageAiSdk#_defaultModel",
      "kind": "member",
      "memberof": "module:vector/ViewVoyageAiSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Instantiate.\r\n   * @param {string} endpoint - Base URL. Default is https://api.openai.com/v1/\r\n   * @param {string} [apiKey=null] - API key\r\n   * @param {number} [batchSize=8] - Maximum number of chunks to submit in an individual processing request\r\n   * @param {number} [maxParallelTasks=16] - Maximum number of parallel tasks\r\n   * @param {number} [maxRetries=3] - Maximum number of retries to perform on any given task\r\n   * @param {number} [maxFailures=3] - Maximum number of failures to support before failing the operation\r\n   * @param {Function} [logger=null] - Logger function accepting severity and message parameters\r\n   */",
      "meta": {
        "range": [
          1356,
          1714
        ],
        "filename": "ViewVoyageAiSdk.js",
        "lineno": 29,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100021461",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "endpoint",
            "apiKey",
            "batchSize",
            "maxParallelTasks",
            "maxRetries",
            "maxFailures",
            "logger"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Instantiate.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Base URL. Default is https://api.openai.com/v1/",
          "name": "endpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "API key",
          "name": "apiKey"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 8,
          "description": "Maximum number of chunks to submit in an individual processing request",
          "name": "batchSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 16,
          "description": "Maximum number of parallel tasks",
          "name": "maxParallelTasks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 3,
          "description": "Maximum number of retries to perform on any given task",
          "name": "maxRetries"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 3,
          "description": "Maximum number of failures to support before failing the operation",
          "name": "maxFailures"
        },
        {
          "type": {
            "names": [
              "function"
            ]
          },
          "optional": true,
          "defaultvalue": null,
          "description": "Logger function accepting severity and message parameters",
          "name": "logger"
        }
      ],
      "name": "module:vector/ViewVoyageAiSdk",
      "longname": "module:vector/ViewVoyageAiSdk",
      "kind": "class"
    },
    {
      "comment": "/**\r\n   * Validate connectivity to the service.\r\n   * @param {object} [cancelToken] - Cancellation token\r\n   * @returns {Promise<boolean>} True if connection is valid\r\n   */",
      "meta": {
        "range": [
          1897,
          2519
        ],
        "filename": "ViewVoyageAiSdk.js",
        "lineno": 55,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100021497",
          "name": "validateConnectivity",
          "type": "MethodDefinition",
          "paramnames": [
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Validate connectivity to the service.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Cancellation token",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "True if connection is valid"
        }
      ],
      "name": "validateConnectivity",
      "longname": "module:vector/ViewVoyageAiSdk#validateConnectivity",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:vector/ViewVoyageAiSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Process semantic cells to generate embeddings.\r\n   * @param {Array<SemanticCell>} cells - List of semantic cells to process\r\n   * @param {string} model - Model to use for processing\r\n   * @param {number} [timeoutMs=300000] - Timeout in milliseconds\r\n   * @param {object} [cancelToken] - Cancellation token\r\n   * @returns {Promise<Array<SemanticCell>>} Processed semantic cells\r\n   */",
      "meta": {
        "range": [
          2922,
          3280
        ],
        "filename": "ViewVoyageAiSdk.js",
        "lineno": 86,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100021591",
          "name": "processSemanticCells",
          "type": "MethodDefinition",
          "paramnames": [
            "cells",
            "model",
            "timeoutMs",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process semantic cells to generate embeddings.",
      "params": [
        {
          "type": {
            "names": [
              "Array.<SemanticCell>"
            ]
          },
          "description": "List of semantic cells to process",
          "name": "cells"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Model to use for processing",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "defaultvalue": 300000,
          "description": "Timeout in milliseconds",
          "name": "timeoutMs"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Cancellation token",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<SemanticCell>>"
            ]
          },
          "description": "Processed semantic cells"
        }
      ],
      "name": "processSemanticCells",
      "longname": "module:vector/ViewVoyageAiSdk#processSemanticCells",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:vector/ViewVoyageAiSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * List available models.\r\n   * @param {object} [cancelToken] - Cancellation token\r\n   * @throws {Error} This API is not implemented for this embeddings generator\r\n   */",
      "meta": {
        "range": [
          3466,
          3586
        ],
        "filename": "ViewVoyageAiSdk.js",
        "lineno": 103,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100021638",
          "name": "listModels",
          "type": "MethodDefinition",
          "paramnames": [
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "List available models.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Cancellation token",
          "name": "cancelToken"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "This API is not implemented for this embeddings generator"
        }
      ],
      "name": "listModels",
      "longname": "module:vector/ViewVoyageAiSdk#listModels",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:vector/ViewVoyageAiSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Load multiple models.\r\n   * @param {Array<string>} models - Models to load\r\n   * @param {object} [cancelToken] - Cancellation token\r\n   * @throws {Error} This API is not implemented for this embeddings generator\r\n   */",
      "meta": {
        "range": [
          3824,
          3954
        ],
        "filename": "ViewVoyageAiSdk.js",
        "lineno": 113,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100021647",
          "name": "loadModels",
          "type": "MethodDefinition",
          "paramnames": [
            "_models",
            "_cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Load multiple models.",
      "params": [
        {
          "type": {
            "names": [
              "Array.<string>"
            ]
          },
          "description": "Models to load",
          "name": "models"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Cancellation token",
          "name": "cancelToken"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "This API is not implemented for this embeddings generator"
        }
      ],
      "name": "loadModels",
      "longname": "module:vector/ViewVoyageAiSdk#loadModels",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:vector/ViewVoyageAiSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete a model.\r\n   * @param {string} name - Model name\r\n   * @param {object} [cancelToken] - Cancellation token\r\n   * @throws {Error} This API is not implemented for this embeddings generator\r\n   */",
      "meta": {
        "range": [
          4173,
          4302
        ],
        "filename": "ViewVoyageAiSdk.js",
        "lineno": 123,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100021657",
          "name": "deleteModel",
          "type": "MethodDefinition",
          "paramnames": [
            "_name",
            "_cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a model.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Model name",
          "name": "name"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Cancellation token",
          "name": "cancelToken"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "This API is not implemented for this embeddings generator"
        }
      ],
      "name": "deleteModel",
      "longname": "module:vector/ViewVoyageAiSdk#deleteModel",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:vector/ViewVoyageAiSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Load a specific model.\r\n   * @param {string} model - Model to load\r\n   * @param {object} [cancelToken] - Cancellation token\r\n   * @throws {Error} This API is not implemented for this embeddings generator\r\n   */",
      "meta": {
        "range": [
          4532,
          4660
        ],
        "filename": "ViewVoyageAiSdk.js",
        "lineno": 133,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100021667",
          "name": "loadModel",
          "type": "MethodDefinition",
          "paramnames": [
            "_model",
            "_cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Load a specific model.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Model to load",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Cancellation token",
          "name": "cancelToken"
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "This API is not implemented for this embeddings generator"
        }
      ],
      "name": "loadModel",
      "longname": "module:vector/ViewVoyageAiSdk#loadModel",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:vector/ViewVoyageAiSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Process semantic chunks in batches.\r\n   * @private\r\n   * @param {string} model - Model to use\r\n   * @param {Array<SemanticChunk>} chunks - Chunks to process\r\n   * @param {number} timeoutMs - Timeout in milliseconds\r\n   * @param {object} cancelToken - Cancellation token\r\n   */",
      "meta": {
        "range": [
          4956,
          5683
        ],
        "filename": "ViewVoyageAiSdk.js",
        "lineno": 145,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100021677",
          "name": "_processSemanticChunks",
          "type": "MethodDefinition",
          "paramnames": [
            "model",
            "chunks",
            "timeoutMs",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process semantic chunks in batches.",
      "access": "private",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Model to use",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "Array.<SemanticChunk>"
            ]
          },
          "description": "Chunks to process",
          "name": "chunks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Timeout in milliseconds",
          "name": "timeoutMs",
          "defaultvalue": 300000
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "description": "Cancellation token",
          "name": "cancelToken"
        }
      ],
      "name": "_processSemanticChunks",
      "longname": "module:vector/ViewVoyageAiSdk#_processSemanticChunks",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:vector/ViewVoyageAiSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Process a batch of semantic chunks.\r\n   * @private\r\n   * @param {string} model - Model to use\r\n   * @param {Array<SemanticChunk>} chunks - Chunks to process\r\n   * @param {number} timeoutMs - Timeout in milliseconds\r\n   * @param {object} cancelToken - Cancellation token\r\n   */",
      "meta": {
        "range": [
          5979,
          8454
        ],
        "filename": "ViewVoyageAiSdk.js",
        "lineno": 176,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector",
        "code": {
          "id": "astnode100021796",
          "name": "_processBatch",
          "type": "MethodDefinition",
          "paramnames": [
            "model",
            "chunks",
            "timeoutMs",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Process a batch of semantic chunks.",
      "access": "private",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Model to use",
          "name": "model"
        },
        {
          "type": {
            "names": [
              "Array.<SemanticChunk>"
            ]
          },
          "description": "Chunks to process",
          "name": "chunks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Timeout in milliseconds",
          "name": "timeoutMs",
          "defaultvalue": 300000
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "description": "Cancellation token",
          "name": "cancelToken"
        }
      ],
      "name": "_processBatch",
      "longname": "module:vector/ViewVoyageAiSdk#_processBatch",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:vector/ViewVoyageAiSdk",
      "async": true
    },
    {
      "comment": "/**\r\n * Configuration service.\r\n * @module base/ViewConfigurationSdk\r\n * @version 0.1.0\r\n */",
      "meta": {
        "filename": "ViewConfigurationSdk.js",
        "lineno": 24,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {}
      },
      "description": "Configuration service.",
      "kind": "module",
      "name": "base/ViewConfigurationSdk",
      "version": "0.1.0",
      "longname": "module:base/ViewConfigurationSdk"
    },
    {
      "comment": "/**\r\n   * Constructs a new ConfigurationApi.\r\n   * @alias module:base/ConfigurationApi\r\n   * @class\r\n   * @param {string} tenantGuid\r\n   * @param {string} accessKey\r\n   * @param {string} endpoint\r\n   */",
      "meta": {
        "range": [
          1599,
          1695
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 38,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022203",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Constructs a new ConfigurationApi.",
      "alias": "module:base/ConfigurationApi",
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "endpoint"
        }
      ],
      "name": "module:base/ConfigurationApi",
      "longname": "module:base/ConfigurationApi",
      "scope": "global"
    },
    {
      "comment": "/**\r\n   * Retrieve a Node by its GUID.\r\n   * @param {string} guid - The GUID of the node to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Node|null|ApiErrorResponse>} A promise resolving to the Node object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          2228,
          2489
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 56,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022216",
          "name": "retrieveNode",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a Node by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the node to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Node|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the Node object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveNode",
      "longname": "module:base/ViewConfigurationSdk#retrieveNode",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve All Nodes.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Node|null|ApiErrorResponse>} A promise resolving to the Node object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          2807,
          2967
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 71,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022250",
          "name": "retrieveNodes",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve All Nodes.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Node|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the Node object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveNodes",
      "longname": "module:base/ViewConfigurationSdk#retrieveNodes",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a Node.\r\n   *\r\n   * @param {Object} node Information about the credential.\r\n   * @param {number} node.id - Node ID.\r\n   * @param {string} node.GUID - Node GUID (automatically generated if not provided).\r\n   * @param {string} node.name - Name of the node.\r\n   * @param {string} node.hostname - Hostname of the node (default is 'localhost').\r\n   * @param {string} node.InstanceType - Software instance type.\r\n   * @param {Date} node.LastStartUtc - Last start timestamp in UTC.\r\n   * @param {Date} node.CreatedUtc - Creation timestamp in UTC.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Node|null|ApiErrorResponse>} A promise resolving to the created Node object or null if the creation fails.\r\n   * @throws {Error} If the node is null or empty.\r\n   */",
      "meta": {
        "range": [
          3829,
          4233
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 92,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022271",
          "name": "createNode",
          "type": "ClassProperty"
        }
      },
      "description": "Create a Node.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the credential.",
          "name": "node"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Node ID.",
          "name": "node.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Node GUID (automatically generated if not provided).",
          "name": "node.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the node.",
          "name": "node.name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname of the node (default is 'localhost').",
          "name": "node.hostname"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Software instance type.",
          "name": "node.InstanceType"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Last start timestamp in UTC.",
          "name": "node.LastStartUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "node.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Node|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Node object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the node is null or empty."
        }
      ],
      "name": "createNode",
      "longname": "module:base/ViewConfigurationSdk#createNode",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update a Node.\r\n   *\r\n   * @param {Object} node Information about the credential.\r\n   * @param {number} node.id - Node ID.\r\n   * @param {string} node.GUID - Node GUID (automatically generated if not provided).\r\n   * @param {string} node.name - Name of the node.\r\n   * @param {string} node.hostname - Hostname of the node (default is 'localhost').\r\n   * @param {string} node.InstanceType - Software instance type.\r\n   * @param {Date} node.LastStartUtc - Last start timestamp in UTC.\r\n   * @param {Date} node.CreatedUtc - Creation timestamp in UTC.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Node|null|ApiErrorResponse>} A promise resolving to the created Node object or null if the creation fails.\r\n   * @throws {Error} If the node is null or empty.\r\n   */",
      "meta": {
        "range": [
          5095,
          5363
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 120,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022305",
          "name": "updateNode",
          "type": "ClassProperty"
        }
      },
      "description": "Update a Node.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the credential.",
          "name": "node"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Node ID.",
          "name": "node.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Node GUID (automatically generated if not provided).",
          "name": "node.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the node.",
          "name": "node.name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname of the node (default is 'localhost').",
          "name": "node.hostname"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Software instance type.",
          "name": "node.InstanceType"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Last start timestamp in UTC.",
          "name": "node.LastStartUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "node.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Node|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Node object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the node is null or empty."
        }
      ],
      "name": "updateNode",
      "longname": "module:base/ViewConfigurationSdk#updateNode",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a Node.\r\n   *\r\n   * @param {string} guid - The GUID of the node to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Node|null|ApiErrorResponse>} A promise resolving to the Node object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          5737,
          5994
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 136,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022342",
          "name": "deleteNode",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a Node.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the node to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Node|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the Node object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteNode",
      "longname": "module:base/ViewConfigurationSdk#deleteNode",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a Node exists by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the node to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Node|null|ApiErrorResponse>} A promise resolving to the Node object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          6391,
          6637
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 152,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022376",
          "name": "existsNode",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a Node exists by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the node to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Node|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the Node object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "existsNode",
      "longname": "module:base/ViewConfigurationSdk#existsNode",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve tenant metadata.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<TenantMetadata|null|ApiErrorResponse>} A promise resolving to the TenantMetadata object or null if not found.\r\n   */",
      "meta": {
        "range": [
          6951,
          7282
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 168,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022409",
          "name": "retrieveTenant",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve tenant metadata.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(TenantMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the TenantMetadata object or null if not found."
        }
      ],
      "name": "retrieveTenant",
      "longname": "module:base/ViewConfigurationSdk#retrieveTenant",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve all tenants.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<TenantMetadata|null|ApiErrorResponse>} A promise resolving to the TenantMetadata object or null if not found.\r\n   */",
      "meta": {
        "range": [
          7570,
          7938
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 183,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022443",
          "name": "retrieveTenants",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve all tenants.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(TenantMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the TenantMetadata object or null if not found."
        }
      ],
      "name": "retrieveTenants",
      "longname": "module:base/ViewConfigurationSdk#retrieveTenants",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete tenant metadata.\r\n   * @param {string} guid - The GUID of the tenant to delete.\r\n   * @param {string} [xtoken] - X-Token header\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<TenantMetadata|null|ApiErrorResponse>} A promise resolving to the TenantMetadata object or null if not found.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          8385,
          8836
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 200,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022478",
          "name": "deleteTenant",
          "type": "ClassProperty"
        }
      },
      "description": "Delete tenant metadata.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tenant to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "X-Token header",
          "name": "xtoken"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(TenantMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the TenantMetadata object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "deleteTenant",
      "longname": "module:base/ViewConfigurationSdk#deleteTenant",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a tenant exists by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the tenant.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise resolving to true if the tenant exists, false otherwise.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          9229,
          9535
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 220,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022525",
          "name": "existsTenant",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a tenant exists by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tenant.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to true if the tenant exists, false otherwise."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "existsTenant",
      "longname": "module:base/ViewConfigurationSdk#existsTenant",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write tenant metadata.\r\n   *\r\n   * @param {Object} tenant Information about the tenants.\r\n   * @param {string|null} tenant.AccountGUID - Account GUID (optional).\r\n   * @param {string} tenant.Name - Tenant's name (default is an empty string).\r\n   * @param {string} tenant.S3BaseDomain - S3 base domain for the tenant.\r\n   * @param {string} tenant.RestBaseDomain - REST base domain for the tenant.\r\n   * @param {string} tenant.DefaultPoolGUID - Default pool's unique identifier for the tenant.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @param {string} [xtoken] - X-Token header\r\n   * @returns {Promise<TenantMetadata|null|ApiErrorResponse>} A promise resolving to the updated TenantMetadata object or null.\r\n   * @throws {Error} If the tenant object is null.\r\n   */",
      "meta": {
        "range": [
          10382,
          10841
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 243,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022558",
          "name": "writeTenant",
          "type": "ClassProperty"
        }
      },
      "description": "Write tenant metadata.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the tenants.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "Account GUID (optional).",
          "name": "tenant.AccountGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's name (default is an empty string).",
          "name": "tenant.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 base domain for the tenant.",
          "name": "tenant.S3BaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "REST base domain for the tenant.",
          "name": "tenant.RestBaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Default pool's unique identifier for the tenant.",
          "name": "tenant.DefaultPoolGUID"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "X-Token header",
          "name": "xtoken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(TenantMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the updated TenantMetadata object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the tenant object is null."
        }
      ],
      "name": "writeTenant",
      "longname": "module:base/ViewConfigurationSdk#writeTenant",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update tenant metadata.\r\n   *\r\n   * @param {Object} tenant Information about the tenants.\r\n   * @param {number} tenant.id - Tenant ID (defaults to 0, throws error if set to less than 1).\r\n   * @param {string} tenant.GUID - Tenant's unique identifier (automatically generated if not provided).\r\n   * @param {string|null} tenant.ParentGUID - Parent tenant's GUID (optional).\r\n   * @param {string} tenant.Name - Tenant's name (default is an empty string).\r\n   * @param {string} tenant.Region - Region for the tenant (default: 'us-west-1').\r\n   * @param {string} tenant.S3BaseDomain - S3 base domain for the tenant.\r\n   * @param {string} tenant.RestBaseDomain - REST base domain for the tenant.\r\n   * @param {string} tenant.DefaultPoolGUID - Default pool's unique identifier for the tenant.\r\n   * @param {boolean} tenant.Active - Whether the tenant is active (default: true).\r\n   * @param {Date} tenant.CreatedUtc - Creation timestamp in UTC (default: current time).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<TenantMetadata|null|ApiErrorResponse>} A promise resolving to the updated TenantMetadata object or null.\r\n   * @throws {Error} If the tenant object is null.\r\n   */",
      "meta": {
        "range": [
          12111,
          12551
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 273,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022605",
          "name": "updateTenant",
          "type": "ClassProperty"
        }
      },
      "description": "Update tenant metadata.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the tenants.",
          "name": "tenant"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Tenant ID (defaults to 0, throws error if set to less than 1).",
          "name": "tenant.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's unique identifier (automatically generated if not provided).",
          "name": "tenant.GUID"
        },
        {
          "type": {
            "names": [
              "string",
              "null"
            ]
          },
          "description": "Parent tenant's GUID (optional).",
          "name": "tenant.ParentGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's name (default is an empty string).",
          "name": "tenant.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Region for the tenant (default: 'us-west-1').",
          "name": "tenant.Region"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 base domain for the tenant.",
          "name": "tenant.S3BaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "REST base domain for the tenant.",
          "name": "tenant.RestBaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Default pool's unique identifier for the tenant.",
          "name": "tenant.DefaultPoolGUID"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether the tenant is active (default: true).",
          "name": "tenant.Active"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC (default: current time).",
          "name": "tenant.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(TenantMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the updated TenantMetadata object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the tenant object is null."
        }
      ],
      "name": "updateTenant",
      "longname": "module:base/ViewConfigurationSdk#updateTenant",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate Tenants.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          12896,
          13066
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 291,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022651",
          "name": "enumerateTenants",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Tenants.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "enumerateTenants",
      "longname": "module:base/ViewConfigurationSdk#enumerateTenants",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a credential by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the credential to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Credential|null|ApiErrorResponse>} A promise resolving to the Credential object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          13506,
          13812
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 306,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022673",
          "name": "retrieveCredential",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a credential by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the credential to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Credential|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the Credential object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveCredential",
      "longname": "module:base/ViewConfigurationSdk#retrieveCredential",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve all credentials.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<Credential>|null|ApiErrorResponse>} A promise resolving to the list of Credentials or null if not found.\r\n   */",
      "meta": {
        "range": [
          14105,
          14387
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 320,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022713",
          "name": "retrieveCredentials",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve all credentials.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<Credential>|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the list of Credentials or null if not found."
        }
      ],
      "name": "retrieveCredentials",
      "longname": "module:base/ViewConfigurationSdk#retrieveCredentials",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a credential.\r\n   *\r\n   * @param {Object} cred Information about the credential.\r\n   * @param {string} cred.GUID - Unique identifier for the credential (automatically generated if not provided).\r\n   * @param {string} cred.tenantGuid - Unique identifier for the tenant.\r\n   * @param {string} cred.UserGUID - Unique identifier for the user.\r\n   * @param {string} cred.AccessKey - Access key for the credential.\r\n   * @param {string} cred.SecretKey - Secret key for the credential.\r\n   * @param {boolean} cred.Active - Whether the credential is active.\r\n   * @param {Date} cred.CreatedUtc - The date and time when the credential was created in UTC.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Credential|null|ApiErrorResponse>} A promise resolving to the created Credential object or null.\r\n   * @throws {Error} If the credential is null.\r\n   */",
      "meta": {
        "range": [
          15336,
          15695
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 342,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022740",
          "name": "createCredential",
          "type": "ClassProperty"
        }
      },
      "description": "Create a credential.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the credential.",
          "name": "cred"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Unique identifier for the credential (automatically generated if not provided).",
          "name": "cred.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Unique identifier for the tenant.",
          "name": "cred.tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Unique identifier for the user.",
          "name": "cred.UserGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key for the credential.",
          "name": "cred.AccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Secret key for the credential.",
          "name": "cred.SecretKey"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether the credential is active.",
          "name": "cred.Active"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "The date and time when the credential was created in UTC.",
          "name": "cred.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Credential|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Credential object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the credential is null."
        }
      ],
      "name": "createCredential",
      "longname": "module:base/ViewConfigurationSdk#createCredential",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update a credential.\r\n   *\r\n   * @param {Object} cred Information about the credential.\r\n   * @param {string} cred.GUID - Unique identifier for the credential (automatically generated if not provided).\r\n   * @param {string} cred.tenantGuid - Unique identifier for the tenant.\r\n   * @param {string} cred.UserGUID - Unique identifier for the user.\r\n   * @param {string} cred.AccessKey - Access key for the credential.\r\n   * @param {string} cred.SecretKey - Secret key for the credential.\r\n   * @param {boolean} cred.Active - Whether the credential is active.\r\n   * @param {Date} cred.CreatedUtc - The date and time when the credential was created in UTC.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Credential|null|ApiErrorResponse>} A promise resolving to the updated Credential object or null.\r\n   * @throws {Error} If the credential is null.\r\n   */",
      "meta": {
        "range": [
          16644,
          17014
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 366,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022779",
          "name": "updateCredential",
          "type": "ClassProperty"
        }
      },
      "description": "Update a credential.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the credential.",
          "name": "cred"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Unique identifier for the credential (automatically generated if not provided).",
          "name": "cred.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Unique identifier for the tenant.",
          "name": "cred.tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Unique identifier for the user.",
          "name": "cred.UserGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key for the credential.",
          "name": "cred.AccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Secret key for the credential.",
          "name": "cred.SecretKey"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether the credential is active.",
          "name": "cred.Active"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "The date and time when the credential was created in UTC.",
          "name": "cred.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Credential|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the updated Credential object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the credential is null."
        }
      ],
      "name": "updateCredential",
      "longname": "module:base/ViewConfigurationSdk#updateCredential",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a credential exists by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the credential.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise resolving to true if the credential exists, false otherwise.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          17419,
          17769
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 383,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022822",
          "name": "existsCredential",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a credential exists by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the credential.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to true if the credential exists, false otherwise."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "existsCredential",
      "longname": "module:base/ViewConfigurationSdk#existsCredential",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a credential by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the credential to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void|ApiErrorResponse>} A promise resolving when the credential is deleted.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          18153,
          18512
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 400,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022861",
          "name": "deleteCredential",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a credential by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the credential to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(void|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving when the credential is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "deleteCredential",
      "longname": "module:base/ViewConfigurationSdk#deleteCredential",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate Credentials.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          18861,
          19066
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 415,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022901",
          "name": "enumerateCredentials",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Credentials.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "enumerateCredentials",
      "longname": "module:base/ViewConfigurationSdk#enumerateCredentials",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a user.\r\n   *\r\n   * @param {Object} user Information about the credential.\r\n   * @param {string} user.GUID - User's unique identifier (automatically generated if not provided).\r\n   * @param {string} user.tenantGuid - Tenant's unique identifier (automatically generated if not provided).\r\n   * @param {string} user.FirstName - User's first name.\r\n   * @param {string} user.LastName - User's last name.\r\n   * @param {string} user.Notes - Any additional notes for the user.\r\n   * @param {string} user.Email - User's email address.\r\n   * @param {string} user.PasswordSha256 - SHA-256 hashed password (not serialized).\r\n   * @param {boolean} user.Active - Whether the user is active (default: true).\r\n   * @param {Date} user.CreatedUtc - Date and time the user was created (in UTC, default: current time).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<UserMaster|null|ApiErrorResponse>} A promise resolving to the created UserMaster object or null.\r\n   * @throws {Error} If the user object is null.\r\n   */",
      "meta": {
        "range": [
          20192,
          20533
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 439,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022927",
          "name": "createUser",
          "type": "ClassProperty"
        }
      },
      "description": "Create a user.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the credential.",
          "name": "user"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's unique identifier (automatically generated if not provided).",
          "name": "user.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's unique identifier (automatically generated if not provided).",
          "name": "user.tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's first name.",
          "name": "user.FirstName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's last name.",
          "name": "user.LastName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Any additional notes for the user.",
          "name": "user.Notes"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's email address.",
          "name": "user.Email"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "SHA-256 hashed password (not serialized).",
          "name": "user.PasswordSha256"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether the user is active (default: true).",
          "name": "user.Active"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Date and time the user was created (in UTC, default: current time).",
          "name": "user.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(UserMaster|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created UserMaster object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the user object is null."
        }
      ],
      "name": "createUser",
      "longname": "module:base/ViewConfigurationSdk#createUser",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a user exists by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the user.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise resolving to true if the user exists, false otherwise.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          20920,
          21252
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 456,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100022966",
          "name": "existsUser",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a user exists by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the user.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to true if the user exists, false otherwise."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "existsUser",
      "longname": "module:base/ViewConfigurationSdk#existsUser",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a user by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the user to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<UserMaster|null|ApiErrorResponse>} A promise resolving to the UserMaster object or null if not found.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          21654,
          21998
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 473,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023005",
          "name": "retrieveUser",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a user by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the user to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(UserMaster|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the UserMaster object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "retrieveUser",
      "longname": "module:base/ViewConfigurationSdk#retrieveUser",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve all users.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<UserMaster>|null|ApiErrorResponse>} A promise resolving to the list of Users or null if not found.\r\n   */",
      "meta": {
        "range": [
          22279,
          22541
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 488,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023045",
          "name": "retrieveUsers",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve all users.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<UserMaster>|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the list of Users or null if not found."
        }
      ],
      "name": "retrieveUsers",
      "longname": "module:base/ViewConfigurationSdk#retrieveUsers",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update a user.\r\n   *\r\n   * @param {Object} user Information about the credential.\r\n   * @param {string} user.GUID - User's unique identifier (automatically generated if not provided).\r\n   * @param {string} user.tenantGuid - Tenant's unique identifier (automatically generated if not provided).\r\n   * @param {string} user.FirstName - User's first name.\r\n   * @param {string} user.LastName - User's last name.\r\n   * @param {string} user.Notes - Any additional notes for the user.\r\n   * @param {string} user.Email - User's email address.\r\n   * @param {string} user.PasswordSha256 - SHA-256 hashed password (not serialized).\r\n   * @param {boolean} user.Active - Whether the user is active (default: true).\r\n   * @param {Date} user.CreatedUtc - Date and time the user was created (in UTC, default: current time).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<UserMaster|null|ApiErrorResponse>} A promise resolving to the updated UserMaster object or null.\r\n   * @throws {Error} If the user object is null.\r\n   */",
      "meta": {
        "range": [
          23646,
          23998
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 511,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023072",
          "name": "updateUser",
          "type": "ClassProperty"
        }
      },
      "description": "Update a user.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the credential.",
          "name": "user"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's unique identifier (automatically generated if not provided).",
          "name": "user.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant's unique identifier (automatically generated if not provided).",
          "name": "user.tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's first name.",
          "name": "user.FirstName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's last name.",
          "name": "user.LastName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Any additional notes for the user.",
          "name": "user.Notes"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "User's email address.",
          "name": "user.Email"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "SHA-256 hashed password (not serialized).",
          "name": "user.PasswordSha256"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Whether the user is active (default: true).",
          "name": "user.Active"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Date and time the user was created (in UTC, default: current time).",
          "name": "user.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(UserMaster|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the updated UserMaster object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the user object is null."
        }
      ],
      "name": "updateUser",
      "longname": "module:base/ViewConfigurationSdk#updateUser",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a user by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the user to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void|ApiErrorResponse>} A promise resolving when the user is deleted.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          24364,
          24705
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 528,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023115",
          "name": "deleteUser",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a user by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the user to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(void|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving when the user is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "deleteUser",
      "longname": "module:base/ViewConfigurationSdk#deleteUser",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate Users.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          25048,
          25240
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 543,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023155",
          "name": "enumerateUsers",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Users.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "enumerateUsers",
      "longname": "module:base/ViewConfigurationSdk#enumerateUsers",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create an encryption key.\r\n   *\r\n   * @param {Object} key Information about the encryption key.\r\n   * @param {string} key.GUID - GUID of the encryption key (automatically generated if not provided).\r\n   * @param {string} key.tenantGuid - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} key.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} key.KeyBase64 - Key in base64 form.\r\n   * @param {string} key.KeyHex - Key in hexadecimal form.\r\n   * @param {string} key.IvBase64 - Initialization vector in base64 form.\r\n   * @param {string} key.IvHex - Initialization vector in hexadecimal form.\r\n   * @param {string} key.SaltBase64 - Salt in base64 form.\r\n   * @param {string} key.SaltHex - Salt in hexadecimal form.\r\n   * @param {string} key.Name - Name of the encryption key.\r\n   * @param {string} key.Description - Description of the encryption key.\r\n   * @param {Date} key.CreatedUtc - Creation timestamp in UTC.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EncryptionKey|null|ApiErrorResponse>} A promise resolving to the created EncryptionKey object.\r\n   * @throws {Error} If the key is null.\r\n   */",
      "meta": {
        "range": [
          26534,
          26839
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 570,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023181",
          "name": "createEncryptionKey",
          "type": "ClassProperty"
        }
      },
      "description": "Create an encryption key.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the encryption key.",
          "name": "key"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the encryption key (automatically generated if not provided).",
          "name": "key.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "key.tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "key.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Key in base64 form.",
          "name": "key.KeyBase64"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Key in hexadecimal form.",
          "name": "key.KeyHex"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Initialization vector in base64 form.",
          "name": "key.IvBase64"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Initialization vector in hexadecimal form.",
          "name": "key.IvHex"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Salt in base64 form.",
          "name": "key.SaltBase64"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Salt in hexadecimal form.",
          "name": "key.SaltHex"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the encryption key.",
          "name": "key.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Description of the encryption key.",
          "name": "key.Description"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "key.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EncryptionKey|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created EncryptionKey object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the key is null."
        }
      ],
      "name": "createEncryptionKey",
      "longname": "module:base/ViewConfigurationSdk#createEncryptionKey",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if an encryption key exists.\r\n   *\r\n   * @param {string} guid - The GUID of the encryption key to check.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to true if the encryption key exists, false otherwise.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          27237,
          27533
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 586,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023220",
          "name": "existsEncryptionKey",
          "type": "ClassProperty"
        }
      },
      "description": "Check if an encryption key exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the encryption key to check.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to true if the encryption key exists, false otherwise."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "existsEncryptionKey",
      "longname": "module:base/ViewConfigurationSdk#existsEncryptionKey",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve an encryption key by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the encryption key to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EncryptionKey|null|ApiErrorResponse>} A promise resolving to the EncryptionKey object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          27962,
          28277
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 602,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023259",
          "name": "retrieveEncryptionKey",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve an encryption key by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the encryption key to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EncryptionKey|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the EncryptionKey object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveEncryptionKey",
      "longname": "module:base/ViewConfigurationSdk#retrieveEncryptionKey",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve all encryption keys.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<EncryptionKey>|ApiErrorResponse>} A promise resolving to an array of EncryptionKey objects.\r\n   */",
      "meta": {
        "range": [
          28561,
          28775
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 616,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023299",
          "name": "retrieveEncryptionKeys",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve all encryption keys.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<EncryptionKey>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of EncryptionKey objects."
        }
      ],
      "name": "retrieveEncryptionKeys",
      "longname": "module:base/ViewConfigurationSdk#retrieveEncryptionKeys",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update an encryption key.\r\n   *\r\n   * @param {Object} key Information about the encryption key.\r\n   * @param {string} key.GUID - GUID of the encryption key (automatically generated if not provided).\r\n   * @param {string} key.tenantGuid - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} key.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} key.KeyBase64 - Key in base64 form.\r\n   * @param {string} key.KeyHex - Key in hexadecimal form.\r\n   * @param {string} key.IvBase64 - Initialization vector in base64 form.\r\n   * @param {string} key.IvHex - Initialization vector in hexadecimal form.\r\n   * @param {string} key.SaltBase64 - Salt in base64 form.\r\n   * @param {string} key.SaltHex - Salt in hexadecimal form.\r\n   * @param {string} key.Name - Name of the encryption key.\r\n   * @param {string} key.Description - Description of the encryption key.\r\n   * @param {Date} key.CreatedUtc - Creation timestamp in UTC.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EncryptionKey|null|ApiErrorResponse>} A promise resolving to the updated EncryptionKey object.\r\n   * @throws {Error} If the key is null.\r\n   */",
      "meta": {
        "range": [
          30039,
          30357
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 641,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023326",
          "name": "updateEncryptionKey",
          "type": "ClassProperty"
        }
      },
      "description": "Update an encryption key.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the encryption key.",
          "name": "key"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID of the encryption key (automatically generated if not provided).",
          "name": "key.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "key.tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "key.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Key in base64 form.",
          "name": "key.KeyBase64"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Key in hexadecimal form.",
          "name": "key.KeyHex"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Initialization vector in base64 form.",
          "name": "key.IvBase64"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Initialization vector in hexadecimal form.",
          "name": "key.IvHex"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Salt in base64 form.",
          "name": "key.SaltBase64"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Salt in hexadecimal form.",
          "name": "key.SaltHex"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the encryption key.",
          "name": "key.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Description of the encryption key.",
          "name": "key.Description"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "key.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EncryptionKey|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the updated EncryptionKey object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the key is null."
        }
      ],
      "name": "updateEncryptionKey",
      "longname": "module:base/ViewConfigurationSdk#updateEncryptionKey",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete an encryption key by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the encryption key to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void>} A promise that resolves when the deletion is complete.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          30736,
          31047
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 657,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023369",
          "name": "deleteEncryptionKey",
          "type": "ClassProperty"
        }
      },
      "description": "Delete an encryption key by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the encryption key to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the deletion is complete."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteEncryptionKey",
      "longname": "module:base/ViewConfigurationSdk#deleteEncryptionKey",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate Encryption-Keys.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          31400,
          31611
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 671,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023409",
          "name": "enumerateEncryptionKeys",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Encryption-Keys.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "enumerateEncryptionKeys",
      "longname": "module:base/ViewConfigurationSdk#enumerateEncryptionKeys",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a vector repository.\r\n   *\r\n   * @param {Object} vector Information about the vector repository.\r\n   * @param {string} vector.GUID - Repository GUID (automatically generated if not provided).\r\n   * @param {string} vector.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} vector.name - Name of the repository (default is 'My vector repository').\r\n   * @param {string} vector.repositoryType - Type of vector repository.\r\n   * @param {string} vector.endpointUrl - Endpoint URL for the repository.\r\n   * @param {string} vector.apiKey - API key for authentication.\r\n   * @param {string} vector.model - Embedding model to be used (default is 'all-MiniLM-L6-v2').\r\n   * @param {number} vector.dimensionality - Dimensionality of embeddings.\r\n   * @param {string} vector.databaseHostname - Hostname of the database.\r\n   * @param {string} vector.databaseName - Name of the database.\r\n   * @param {string} vector.databaseTable - Table name in the database.\r\n   * @param {number} vector.databasePort - Database port.\r\n   * @param {string} vector.databaseUser - Database username.\r\n   * @param {string} vector.databasePassword - Database password.\r\n   * @param {string} vector.promptPrefix - Prefix to prepend to prompts.\r\n   * @param {string} vector.promptSuffix - Suffix to append to prompts.\r\n   * @param {Date} vector.createdUtc - Creation timestamp in UTC.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<VectorRepository>} A promise resolving to the created VectorRepository object.\r\n   * @throws {Error} If the repo is null.\r\n   */",
      "meta": {
        "range": [
          33314,
          33632
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 703,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023435",
          "name": "createVectorRepository",
          "type": "MethodDefinition",
          "paramnames": [
            "vector",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create a vector repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the vector repository.",
          "name": "vector"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository GUID (automatically generated if not provided).",
          "name": "vector.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "vector.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository (default is 'My vector repository').",
          "name": "vector.name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of vector repository.",
          "name": "vector.repositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL for the repository.",
          "name": "vector.endpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "API key for authentication.",
          "name": "vector.apiKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embedding model to be used (default is 'all-MiniLM-L6-v2').",
          "name": "vector.model"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Dimensionality of embeddings.",
          "name": "vector.dimensionality"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname of the database.",
          "name": "vector.databaseHostname"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the database.",
          "name": "vector.databaseName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Table name in the database.",
          "name": "vector.databaseTable"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Database port.",
          "name": "vector.databasePort"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Database username.",
          "name": "vector.databaseUser"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Database password.",
          "name": "vector.databasePassword"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix to prepend to prompts.",
          "name": "vector.promptPrefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix to append to prompts.",
          "name": "vector.promptSuffix"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "vector.createdUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<VectorRepository>"
            ]
          },
          "description": "A promise resolving to the created VectorRepository object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the repo is null."
        }
      ],
      "name": "createVectorRepository",
      "longname": "module:base/ViewConfigurationSdk#createVectorRepository",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Check if a vector repository exists.\r\n   *\r\n   * @param {string} guid - The GUID of the vector repository to check.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to true if the vector repository exists, false otherwise.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          34038,
          34334
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 719,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023475",
          "name": "existsVectorRepository",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Check if a vector repository exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the vector repository to check.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to true if the vector repository exists, false otherwise."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "existsVectorRepository",
      "longname": "module:base/ViewConfigurationSdk#existsVectorRepository",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Retrieve a vector repository.\r\n   *\r\n   * @param {string} guid - The GUID of the vector repository to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<VectorRepository>} A promise resolving to the VectorRepository object.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          34719,
          35037
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 735,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023515",
          "name": "retrieveVectorRepository",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Retrieve a vector repository.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the vector repository to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<VectorRepository>"
            ]
          },
          "description": "A promise resolving to the VectorRepository object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveVectorRepository",
      "longname": "module:base/ViewConfigurationSdk#retrieveVectorRepository",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Retrieve all vector repositories.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<VectorRepository>>} A promise resolving to a list of VectorRepository objects.\r\n   */",
      "meta": {
        "range": [
          35312,
          35530
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 749,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023556",
          "name": "retrieveVectorRepositories",
          "type": "MethodDefinition",
          "paramnames": [
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Retrieve all vector repositories.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<VectorRepository>>"
            ]
          },
          "description": "A promise resolving to a list of VectorRepository objects."
        }
      ],
      "name": "retrieveVectorRepositories",
      "longname": "module:base/ViewConfigurationSdk#retrieveVectorRepositories",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Update a vector repository.\r\n   *\r\n   * @param {Object} vector Information about the vector repository.\r\n   * @param {string} vector.GUID - Repository GUID (automatically generated if not provided).\r\n   * @param {string} vector.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} vector.name - Name of the repository (default is 'My vector repository').\r\n   * @param {string} vector.repositoryType - Type of vector repository.\r\n   * @param {string} vector.endpointUrl - Endpoint URL for the repository.\r\n   * @param {string} vector.apiKey - API key for authentication.\r\n   * @param {string} vector.model - Embedding model to be used (default is 'all-MiniLM-L6-v2').\r\n   * @param {number} vector.dimensionality - Dimensionality of embeddings.\r\n   * @param {string} vector.databaseHostname - Hostname of the database.\r\n   * @param {string} vector.databaseName - Name of the database.\r\n   * @param {string} vector.databaseTable - Table name in the database.\r\n   * @param {number} vector.databasePort - Database port.\r\n   * @param {string} vector.databaseUser - Database username.\r\n   * @param {string} vector.databasePassword - Database password.\r\n   * @param {string} vector.promptPrefix - Prefix to prepend to prompts.\r\n   * @param {string} vector.promptSuffix - Suffix to append to prompts.\r\n   * @param {Date} vector.createdUtc - Creation timestamp in UTC.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<VectorRepository>} A promise resolving to the updated VectorRepository object.\r\n   * @throws {Error} If the vector is null.\r\n   */",
      "meta": {
        "range": [
          37200,
          37535
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 779,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023584",
          "name": "updateVectorRepository",
          "type": "MethodDefinition",
          "paramnames": [
            "vector",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Update a vector repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the vector repository.",
          "name": "vector"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository GUID (automatically generated if not provided).",
          "name": "vector.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "vector.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository (default is 'My vector repository').",
          "name": "vector.name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type of vector repository.",
          "name": "vector.repositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL for the repository.",
          "name": "vector.endpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "API key for authentication.",
          "name": "vector.apiKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embedding model to be used (default is 'all-MiniLM-L6-v2').",
          "name": "vector.model"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Dimensionality of embeddings.",
          "name": "vector.dimensionality"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Hostname of the database.",
          "name": "vector.databaseHostname"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the database.",
          "name": "vector.databaseName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Table name in the database.",
          "name": "vector.databaseTable"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Database port.",
          "name": "vector.databasePort"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Database username.",
          "name": "vector.databaseUser"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Database password.",
          "name": "vector.databasePassword"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix to prepend to prompts.",
          "name": "vector.promptPrefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix to append to prompts.",
          "name": "vector.promptSuffix"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "vector.createdUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<VectorRepository>"
            ]
          },
          "description": "A promise resolving to the updated VectorRepository object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the vector is null."
        }
      ],
      "name": "updateVectorRepository",
      "longname": "module:base/ViewConfigurationSdk#updateVectorRepository",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete a vector repository.\r\n   *\r\n   * @param {string} guid - The GUID of the vector repository to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void>} A promise that resolves when the vector repository is deleted.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          37915,
          38229
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 795,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023628",
          "name": "deleteVectorRepository",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a vector repository.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the vector repository to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the vector repository is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteVectorRepository",
      "longname": "module:base/ViewConfigurationSdk#deleteVectorRepository",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Enumerate Vector-Repositories.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          38586,
          38805
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 809,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023669",
          "name": "enumerateVectorRepositories",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Vector-Repositories.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "enumerateVectorRepositories",
      "longname": "module:base/ViewConfigurationSdk#enumerateVectorRepositories",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a graph repository.\r\n   *\r\n   * @param {Object} graph - Information about the graph repository.\r\n   * @param {string} [graph.GUID] - GUID of the graph repository (auto-generated if not provided).\r\n   * @param {string} [graph.tenantGuid] - Tenant GUID (auto-generated if not provided).\r\n   * @param {string} [graph.Name] - Name of the graph.\r\n   * @param {string} [graph.RepositoryType] - Type of graph graph.\r\n   * @param {string} [graph.EndpointUrl] - Endpoint URL.\r\n   * @param {string} [graph.ApiKey] - API key for the graph.\r\n   * @param {string} [graph.Username] - Username for authentication.\r\n   * @param {string} [graph.Password] - Password for authentication.\r\n   * @param {string} [graph.Hostname] - Hostname for the graph.\r\n   * @param {number} [graph.Port] - Port number for the graph (default is 0).\r\n   * @param {string} [graph.GraphIdentifier] - Identifier of the graph.\r\n   * @param {Date} [graph.CreatedUtc] - Creation timestamp in UTC (defaults to current UTC time).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphRepository>} A promise resolving to the created GraphRepository object.\r\n   * @throws {Error} If the repo is null.\r\n   */",
      "meta": {
        "range": [
          40099,
          40412
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 836,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023695",
          "name": "createGraphRepository",
          "type": "MethodDefinition",
          "paramnames": [
            "graph",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create a graph repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the graph repository.",
          "name": "graph"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID of the graph repository (auto-generated if not provided).",
          "name": "graph.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Tenant GUID (auto-generated if not provided).",
          "name": "graph.tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Name of the graph.",
          "name": "graph.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Type of graph graph.",
          "name": "graph.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Endpoint URL.",
          "name": "graph.EndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "API key for the graph.",
          "name": "graph.ApiKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Username for authentication.",
          "name": "graph.Username"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Password for authentication.",
          "name": "graph.Password"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Hostname for the graph.",
          "name": "graph.Hostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "description": "Port number for the graph (default is 0).",
          "name": "graph.Port"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Identifier of the graph.",
          "name": "graph.GraphIdentifier"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "optional": true,
          "description": "Creation timestamp in UTC (defaults to current UTC time).",
          "name": "graph.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphRepository>"
            ]
          },
          "description": "A promise resolving to the created GraphRepository object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the repo is null."
        }
      ],
      "name": "createGraphRepository",
      "longname": "module:base/ViewConfigurationSdk#createGraphRepository",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Check if a graph repository exists.\r\n   *\r\n   * @param {string} guid - The GUID of the graph repository to check.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} A promise resolving to true if the graph repository exists, false otherwise.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          40815,
          41109
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 852,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023735",
          "name": "existsGraphRepository",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Check if a graph repository exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph repository to check.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "A promise resolving to true if the graph repository exists, false otherwise."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "existsGraphRepository",
      "longname": "module:base/ViewConfigurationSdk#existsGraphRepository",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Retrieve a graph repository.\r\n   *\r\n   * @param {string} guid - The GUID of the graph repository to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphRepository>} A promise resolving to the GraphRepository object.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          41490,
          41805
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 868,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023775",
          "name": "retrieveGraphRepository",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Retrieve a graph repository.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph repository to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphRepository>"
            ]
          },
          "description": "A promise resolving to the GraphRepository object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveGraphRepository",
      "longname": "module:base/ViewConfigurationSdk#retrieveGraphRepository",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Retrieve all graph repositories.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<GraphRepository>>} A promise resolving to a list of GraphRepository objects.\r\n   */",
      "meta": {
        "range": [
          42077,
          42292
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 882,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023816",
          "name": "retrieveGraphRepositories",
          "type": "MethodDefinition",
          "paramnames": [
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Retrieve all graph repositories.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<GraphRepository>>"
            ]
          },
          "description": "A promise resolving to a list of GraphRepository objects."
        }
      ],
      "name": "retrieveGraphRepositories",
      "longname": "module:base/ViewConfigurationSdk#retrieveGraphRepositories",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Update a graph repository.\r\n   *\r\n   * @param {Object} graph - Information about the graph repository.\r\n   * @param {string} [graph.GUID] - GUID of the graph repository (auto-generated if not provided).\r\n   * @param {string} [graph.tenantGuid] - Tenant GUID (auto-generated if not provided).\r\n   * @param {string} [graph.Name] - Name of the graph.\r\n   * @param {string} [graph.RepositoryType] - Type of graph graph.\r\n   * @param {string} [graph.EndpointUrl] - Endpoint URL.\r\n   * @param {string} [graph.ApiKey] - API key for the graph.\r\n   * @param {string} [graph.Username] - Username for authentication.\r\n   * @param {string} [graph.Password] - Password for authentication.\r\n   * @param {string} [graph.Hostname] - Hostname for the graph.\r\n   * @param {number} [graph.Port] - Port number for the graph (default is 0).\r\n   * @param {string} [graph.GraphIdentifier] - Identifier of the graph.\r\n   * @param {Date} [graph.CreatedUtc] - Creation timestamp in UTC (defaults to current UTC time).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<GraphRepository>} A promise resolving to the updated GraphRepository object.\r\n   * @throws {Error} If the graph is null.\r\n   */",
      "meta": {
        "range": [
          43555,
          43882
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 907,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023844",
          "name": "updateGraphRepository",
          "type": "MethodDefinition",
          "paramnames": [
            "graph",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Update a graph repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the graph repository.",
          "name": "graph"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID of the graph repository (auto-generated if not provided).",
          "name": "graph.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Tenant GUID (auto-generated if not provided).",
          "name": "graph.tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Name of the graph.",
          "name": "graph.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Type of graph graph.",
          "name": "graph.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Endpoint URL.",
          "name": "graph.EndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "API key for the graph.",
          "name": "graph.ApiKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Username for authentication.",
          "name": "graph.Username"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Password for authentication.",
          "name": "graph.Password"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Hostname for the graph.",
          "name": "graph.Hostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "description": "Port number for the graph (default is 0).",
          "name": "graph.Port"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Identifier of the graph.",
          "name": "graph.GraphIdentifier"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "optional": true,
          "description": "Creation timestamp in UTC (defaults to current UTC time).",
          "name": "graph.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<GraphRepository>"
            ]
          },
          "description": "A promise resolving to the updated GraphRepository object."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the graph is null."
        }
      ],
      "name": "updateGraphRepository",
      "longname": "module:base/ViewConfigurationSdk#updateGraphRepository",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete a graph repository.\r\n   *\r\n   * @param {string} guid - The GUID of the graph repository to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void>} A promise that resolves when the graph repository is deleted.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          44259,
          44570
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 923,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023888",
          "name": "deleteGraphRepository",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a graph repository.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the graph repository to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          },
          "description": "A promise that resolves when the graph repository is deleted."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteGraphRepository",
      "longname": "module:base/ViewConfigurationSdk#deleteGraphRepository",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Enumerate Graph-Repositories.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Trigger|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          44916,
          45133
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 937,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023929",
          "name": "enumerateGraphRepositories",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Graph-Repositories.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Trigger|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "enumerateGraphRepositories",
      "longname": "module:base/ViewConfigurationSdk#enumerateGraphRepositories",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a pool.\r\n   *\r\n   * @param {Object} pool Information about the storage pool.\r\n   * @param {number} pool.id - Database row ID.\r\n   * @param {string} pool.GUID - Storage pool GUID (automatically generated if not provided).\r\n   * @param {string} pool.TenantGUID - Tenant GUID.\r\n   * @param {string} pool.EncryptionKeyGUID - Encryption key GUID.\r\n   * @param {string} pool.Name - Name of the storage pool.\r\n   * @param {string} pool.Provider - Provider of the storage pool (default is 'Disk').\r\n   * @param {string} pool.WriteMode - Object key write mode.\r\n   * @param {boolean} pool.UseSsl - Enable or disable SSL.\r\n   * @param {string} pool.Endpoint - Endpoint URL for the storage pool provider.\r\n   * @param {string} pool.AccessKey - Access key.\r\n   * @param {string} pool.SecretKey - Secret key.\r\n   * @param {string} pool.AwsRegion - AWS region.\r\n   * @param {string} pool.AwsBucket - AWS bucket.\r\n   * @param {string} pool.AwsBaseDomain - Base URL for AWS S3 compatible storage platforms.\r\n   * @param {string} pool.AwsBaseUrl - Base URL to use for objects.\r\n   * @param {string} pool.DiskDirectory - Disk directory.\r\n   * @param {string} pool.AzureAccount - Azure account.\r\n   * @param {string} pool.AzureContainer - Azure container.\r\n   * @param {string} pool.Compress - Compression type.\r\n   * @param {boolean} pool.EnableReadCaching - Flag to enable or disable read caching.\r\n   * @param {Date} pool.CreatedUtc - Creation timestamp in UTC.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<StoragePool|null|ApiErrorResponse>} A promise resolving to the created StoragePool object or null.\r\n   * @throws {Error} If the pool is null.\r\n   */",
      "meta": {
        "range": [
          46898,
          47187
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 973,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023955",
          "name": "createPool",
          "type": "ClassProperty"
        }
      },
      "description": "Create a pool.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the storage pool.",
          "name": "pool"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Database row ID.",
          "name": "pool.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Storage pool GUID (automatically generated if not provided).",
          "name": "pool.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID.",
          "name": "pool.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Encryption key GUID.",
          "name": "pool.EncryptionKeyGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the storage pool.",
          "name": "pool.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Provider of the storage pool (default is 'Disk').",
          "name": "pool.Provider"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object key write mode.",
          "name": "pool.WriteMode"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable or disable SSL.",
          "name": "pool.UseSsl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL for the storage pool provider.",
          "name": "pool.Endpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key.",
          "name": "pool.AccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Secret key.",
          "name": "pool.SecretKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "AWS region.",
          "name": "pool.AwsRegion"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "AWS bucket.",
          "name": "pool.AwsBucket"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Base URL for AWS S3 compatible storage platforms.",
          "name": "pool.AwsBaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Base URL to use for objects.",
          "name": "pool.AwsBaseUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Disk directory.",
          "name": "pool.DiskDirectory"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure account.",
          "name": "pool.AzureAccount"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure container.",
          "name": "pool.AzureContainer"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Compression type.",
          "name": "pool.Compress"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Flag to enable or disable read caching.",
          "name": "pool.EnableReadCaching"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "pool.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(StoragePool|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created StoragePool object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the pool is null."
        }
      ],
      "name": "createPool",
      "longname": "module:base/ViewConfigurationSdk#createPool",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a pool exists.\r\n   *\r\n   * @param {string} guid - The GUID of the pool to check.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise resolving to true if the pool exists, or false if not.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          47571,
          47849
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 989,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100023994",
          "name": "existsPool",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a pool exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the pool to check.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to true if the pool exists, or false if not."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "existsPool",
      "longname": "module:base/ViewConfigurationSdk#existsPool",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a pool by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the pool to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<StoragePool|null|ApiErrorResponse>} A promise resolving to the StoragePool object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          48253,
          48548
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1005,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024033",
          "name": "retrievePool",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a pool by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the pool to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(StoragePool|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the StoragePool object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrievePool",
      "longname": "module:base/ViewConfigurationSdk#retrievePool",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve all pools.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<StoragePool>|ApiErrorResponse>} A promise resolving to an array of StoragePool objects.\r\n   */",
      "meta": {
        "range": [
          48818,
          49012
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1019,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024073",
          "name": "retrievePools",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve all pools.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<StoragePool>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of StoragePool objects."
        }
      ],
      "name": "retrievePools",
      "longname": "module:base/ViewConfigurationSdk#retrievePools",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update a pool.\r\n   *\r\n   * @param {Object} pool Information about the storage pool.\r\n   * @param {number} pool.id - Database row ID.\r\n   * @param {string} pool.GUID - Storage pool GUID (automatically generated if not provided).\r\n   * @param {string} pool.TenantGUID - Tenant GUID.\r\n   * @param {string} pool.EncryptionKeyGUID - Encryption key GUID.\r\n   * @param {string} pool.Name - Name of the storage pool.\r\n   * @param {string} pool.Provider - Provider of the storage pool (default is 'Disk').\r\n   * @param {string} pool.WriteMode - Object key write mode.\r\n   * @param {boolean} pool.UseSsl - Enable or disable SSL.\r\n   * @param {string} pool.Endpoint - Endpoint URL for the storage pool provider.\r\n   * @param {string} pool.AccessKey - Access key.\r\n   * @param {string} pool.SecretKey - Secret key.\r\n   * @param {string} pool.AwsRegion - AWS region.\r\n   * @param {string} pool.AwsBucket - AWS bucket.\r\n   * @param {string} pool.AwsBaseDomain - Base URL for AWS S3 compatible storage platforms.\r\n   * @param {string} pool.AwsBaseUrl - Base URL to use for objects.\r\n   * @param {string} pool.DiskDirectory - Disk directory.\r\n   * @param {string} pool.AzureAccount - Azure account.\r\n   * @param {string} pool.AzureContainer - Azure container.\r\n   * @param {string} pool.Compress - Compression type.\r\n   * @param {boolean} pool.EnableReadCaching - Flag to enable or disable read caching.\r\n   * @param {Date} pool.CreatedUtc - Creation timestamp in UTC.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<StoragePool|null|ApiErrorResponse>} A promise resolving to the updated StoragePool object or null.\r\n   * @throws {Error} If the pool is null.\r\n   */",
      "meta": {
        "range": [
          50757,
          51059
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1053,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024100",
          "name": "updatePool",
          "type": "ClassProperty"
        }
      },
      "description": "Update a pool.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the storage pool.",
          "name": "pool"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Database row ID.",
          "name": "pool.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Storage pool GUID (automatically generated if not provided).",
          "name": "pool.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID.",
          "name": "pool.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Encryption key GUID.",
          "name": "pool.EncryptionKeyGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the storage pool.",
          "name": "pool.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Provider of the storage pool (default is 'Disk').",
          "name": "pool.Provider"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object key write mode.",
          "name": "pool.WriteMode"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable or disable SSL.",
          "name": "pool.UseSsl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Endpoint URL for the storage pool provider.",
          "name": "pool.Endpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Access key.",
          "name": "pool.AccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Secret key.",
          "name": "pool.SecretKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "AWS region.",
          "name": "pool.AwsRegion"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "AWS bucket.",
          "name": "pool.AwsBucket"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Base URL for AWS S3 compatible storage platforms.",
          "name": "pool.AwsBaseDomain"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Base URL to use for objects.",
          "name": "pool.AwsBaseUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Disk directory.",
          "name": "pool.DiskDirectory"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure account.",
          "name": "pool.AzureAccount"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure container.",
          "name": "pool.AzureContainer"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Compression type.",
          "name": "pool.Compress"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Flag to enable or disable read caching.",
          "name": "pool.EnableReadCaching"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "pool.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(StoragePool|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the updated StoragePool object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the pool is null."
        }
      ],
      "name": "updatePool",
      "longname": "module:base/ViewConfigurationSdk#updatePool",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a pool by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the pool to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void|ApiErrorResponse>} A promise resolving to void if successful.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          51422,
          51713
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1069,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024143",
          "name": "deletePool",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a pool by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the pool to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(void|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to void if successful."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deletePool",
      "longname": "module:base/ViewConfigurationSdk#deletePool",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a bucket.\r\n   *\r\n   * @param {Object} bucket Information about the bucket metadata.\r\n   * @param {number} bucket.id - Bucket ID.\r\n   * @param {string} bucket.GUID - Bucket GUID (automatically generated if not provided).\r\n   * @param {string} bucket.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} bucket.PoolGUID - Pool GUID (automatically generated if not provided).\r\n   * @param {string} bucket.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} bucket.Category - Bucket category.\r\n   * @param {string} bucket.Name - Name of the bucket.\r\n   * @param {string} bucket.RegionString - Region string (default is 'us-west-1').\r\n   * @param {boolean} bucket.Versioning - Enable or disable versioning (default is true).\r\n   * @param {number|null} bucket.RetentionMinutes - Retention in minutes (optional).\r\n   * @param {number|null} bucket.MaxUploadSize - Maximum upload size (optional).\r\n   * @param {number} bucket.MaxMultipartUploadSeconds - Maximum multipart upload seconds (default is seven days).\r\n   * @param {Date} bucket.LastAccessUtc - Last access timestamp in UTC.\r\n   * @param {Date} bucket.CreatedUtc - Created timestamp in UTC.\r\n   * @param {UserMaster|null} bucket.Owner - Owner of the bucket (optional).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<BucketMetadata|null|ApiErrorResponse>} A promise resolving to the created BucketMetadata object or null.\r\n   * @throws {Error} If the bucket is null.\r\n   */",
      "meta": {
        "range": [
          53335,
          53639
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1102,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024183",
          "name": "createBucket",
          "type": "ClassProperty"
        }
      },
      "description": "Create a bucket.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the bucket metadata.",
          "name": "bucket"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Bucket ID.",
          "name": "bucket.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (automatically generated if not provided).",
          "name": "bucket.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "bucket.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Pool GUID (automatically generated if not provided).",
          "name": "bucket.PoolGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "bucket.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket category.",
          "name": "bucket.Category"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the bucket.",
          "name": "bucket.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Region string (default is 'us-west-1').",
          "name": "bucket.RegionString"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable or disable versioning (default is true).",
          "name": "bucket.Versioning"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Retention in minutes (optional).",
          "name": "bucket.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Maximum upload size (optional).",
          "name": "bucket.MaxUploadSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum multipart upload seconds (default is seven days).",
          "name": "bucket.MaxMultipartUploadSeconds"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Last access timestamp in UTC.",
          "name": "bucket.LastAccessUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Created timestamp in UTC.",
          "name": "bucket.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "UserMaster",
              "null"
            ]
          },
          "description": "Owner of the bucket (optional).",
          "name": "bucket.Owner"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(BucketMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created BucketMetadata object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the bucket is null."
        }
      ],
      "name": "createBucket",
      "longname": "module:base/ViewConfigurationSdk#createBucket",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a bucket exists.\r\n   *\r\n   * @param {string} guid - The GUID of the bucket to check.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise resolving to true if the bucket exists, or false if not.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          54029,
          54311
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1118,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024222",
          "name": "existsBucket",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a bucket exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket to check.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to true if the bucket exists, or false if not."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "existsBucket",
      "longname": "module:base/ViewConfigurationSdk#existsBucket",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a bucket by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the bucket to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<BucketMetadata|null|ApiErrorResponse>} A promise resolving to the BucketMetadata object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          54725,
          55027
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1134,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024261",
          "name": "retrieveBucket",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a bucket by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(BucketMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the BucketMetadata object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveBucket",
      "longname": "module:base/ViewConfigurationSdk#retrieveBucket",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve all buckets.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<BucketMetadata>|ApiErrorResponse>} A promise resolving to an array of BucketMetadata objects.\r\n   */",
      "meta": {
        "range": [
          55305,
          55506
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1148,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024301",
          "name": "retrieveBuckets",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve all buckets.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<BucketMetadata>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of BucketMetadata objects."
        }
      ],
      "name": "retrieveBuckets",
      "longname": "module:base/ViewConfigurationSdk#retrieveBuckets",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update a bucket.\r\n   *\r\n   * @param {Object} bucket Information about the bucket metadata.\r\n   * @param {number} bucket.id - Bucket ID.\r\n   * @param {string} bucket.GUID - Bucket GUID (automatically generated if not provided).\r\n   * @param {string} bucket.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} bucket.PoolGUID - Pool GUID (automatically generated if not provided).\r\n   * @param {string} bucket.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} bucket.Category - Bucket category.\r\n   * @param {string} bucket.Name - Name of the bucket.\r\n   * @param {string} bucket.RegionString - Region string (default is 'us-west-1').\r\n   * @param {boolean} bucket.Versioning - Enable or disable versioning (default is true).\r\n   * @param {number|null} bucket.RetentionMinutes - Retention in minutes (optional).\r\n   * @param {number|null} bucket.MaxUploadSize - Maximum upload size (optional).\r\n   * @param {number} bucket.MaxMultipartUploadSeconds - Maximum multipart upload seconds (default is seven days).\r\n   * @param {Date} bucket.LastAccessUtc - Last access timestamp in UTC.\r\n   * @param {Date} bucket.CreatedUtc - Created timestamp in UTC.\r\n   * @param {UserMaster|null} bucket.Owner - Owner of the bucket (optional).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<BucketMetadata|null|ApiErrorResponse>} A promise resolving to the updated BucketMetadata object or null.\r\n   * @throws {Error} If the bucket is null.\r\n   */",
      "meta": {
        "range": [
          57106,
          57425
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1176,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024328",
          "name": "updateBucket",
          "type": "ClassProperty"
        }
      },
      "description": "Update a bucket.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the bucket metadata.",
          "name": "bucket"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Bucket ID.",
          "name": "bucket.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (automatically generated if not provided).",
          "name": "bucket.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "bucket.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Pool GUID (automatically generated if not provided).",
          "name": "bucket.PoolGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "bucket.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket category.",
          "name": "bucket.Category"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the bucket.",
          "name": "bucket.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Region string (default is 'us-west-1').",
          "name": "bucket.RegionString"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable or disable versioning (default is true).",
          "name": "bucket.Versioning"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Retention in minutes (optional).",
          "name": "bucket.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Maximum upload size (optional).",
          "name": "bucket.MaxUploadSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum multipart upload seconds (default is seven days).",
          "name": "bucket.MaxMultipartUploadSeconds"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Last access timestamp in UTC.",
          "name": "bucket.LastAccessUtc"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Created timestamp in UTC.",
          "name": "bucket.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "UserMaster",
              "null"
            ]
          },
          "description": "Owner of the bucket (optional).",
          "name": "bucket.Owner"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(BucketMetadata|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the updated BucketMetadata object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the bucket is null."
        }
      ],
      "name": "updateBucket",
      "longname": "module:base/ViewConfigurationSdk#updateBucket",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a bucket by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the bucket to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void|ApiErrorResponse>} A promise resolving to void if successful.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          57792,
          58090
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1192,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024371",
          "name": "deleteBucket",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a bucket by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the bucket to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(void|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to void if successful."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteBucket",
      "longname": "module:base/ViewConfigurationSdk#deleteBucket",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve all collections.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<Collection>|ApiErrorResponse>} A promise resolving to an array of Collection objects.\r\n   */",
      "meta": {
        "range": [
          58390,
          58595
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1208,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024411",
          "name": "retrieveCollections",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve all collections.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<Collection>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of Collection objects."
        }
      ],
      "name": "retrieveCollections",
      "longname": "module:base/ViewConfigurationSdk#retrieveCollections",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a collection by its GUID.\r\n   *\r\n   * @param {string} collectionGuid - The GUID of the collection to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Collection|null|ApiErrorResponse>} A promise resolving to the Collection object or null if not found.\r\n   * @throws {Error} If the collectionGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          59029,
          59375
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1221,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024438",
          "name": "retrieveCollection",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a collection by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection to retrieve.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Collection|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the Collection object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collectionGuid is null or empty."
        }
      ],
      "name": "retrieveCollection",
      "longname": "module:base/ViewConfigurationSdk#retrieveCollection",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve statistics for a collection by its GUID.\r\n   *\r\n   * @param {string} collectionGuid - The GUID of the collection to retrieve statistics for.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<CollectionStatistics|null|ApiErrorResponse>} A promise resolving to the CollectionStatistics object or null.\r\n   * @throws {Error} If the collectionGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          59846,
          60223
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1237,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024478",
          "name": "retrieveCollectionStatistics",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve statistics for a collection by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection to retrieve statistics for.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(CollectionStatistics|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the CollectionStatistics object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collectionGuid is null or empty."
        }
      ],
      "name": "retrieveCollectionStatistics",
      "longname": "module:base/ViewConfigurationSdk#retrieveCollectionStatistics",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a new collection.\r\n   *\r\n   * @param {Object} collection Information about the collection.\r\n   * @param {number} collection.id - Collection ID.\r\n   * @param {string} collection.GUID - Collection GUID (automatically generated if not provided).\r\n   * @param {string} collection.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} collection.Name - Name of the collection.\r\n   * @param {boolean} collection.AllowOverwrites - Indicates whether source documents can be overwritten (default is true).\r\n   * @param {string} collection.AdditionalData - Additional data (optional).\r\n   * @param {Date} collection.CreatedUtc - Creation timestamp in UTC.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Collection|null|ApiErrorResponse>} A promise resolving to the created Collection object or null.\r\n   * @throws {Error} If the collection is null.\r\n   */",
      "meta": {
        "range": [
          61208,
          61532
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1260,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024520",
          "name": "createCollection",
          "type": "ClassProperty"
        }
      },
      "description": "Create a new collection.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the collection.",
          "name": "collection"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Collection ID.",
          "name": "collection.id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Collection GUID (automatically generated if not provided).",
          "name": "collection.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "collection.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the collection.",
          "name": "collection.Name"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates whether source documents can be overwritten (default is true).",
          "name": "collection.AllowOverwrites"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Additional data (optional).",
          "name": "collection.AdditionalData"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "collection.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Collection|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Collection object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collection is null."
        }
      ],
      "name": "createCollection",
      "longname": "module:base/ViewConfigurationSdk#createCollection",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a collection by its GUID.\r\n   *\r\n   * @param {string} collectionGuid - The GUID of the collection to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void|ApiErrorResponse>} A promise resolving to void if successful.\r\n   * @throws {Error} If the collectionGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          61927,
          62269
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1276,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024559",
          "name": "deleteCollection",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a collection by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the collection to delete.",
          "name": "collectionGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(void|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to void if successful."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the collectionGuid is null or empty."
        }
      ],
      "name": "deleteCollection",
      "longname": "module:base/ViewConfigurationSdk#deleteCollection",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate Collections.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Trigger|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          62608,
          62812
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1290,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024599",
          "name": "enumerateCollections",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Collections.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Trigger|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "enumerateCollections",
      "longname": "module:base/ViewConfigurationSdk#enumerateCollections",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a new object lock.\r\n   *\r\n   * @param {Object} objectLock Information about the object lock.\r\n   * @param {string} objectLock.GUID - Object lock GUID (automatically generated if not provided).\r\n   * @param {string} objectLock.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} objectLock.NodeGUID - Node GUID (automatically generated if not provided).\r\n   * @param {string} objectLock.BucketGUID - Bucket GUID (automatically generated if not provided).\r\n   * @param {string} objectLock.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} objectLock.ObjectGUID - Object GUID (automatically generated if not provided).\r\n   * @param {string} objectLock.Key - Key for the object (default is empty string).\r\n   * @param {string} objectLock.Version - Version of the object (default is empty string).\r\n   * @param {boolean} objectLock.IsReadLock - Indicates if this is a read lock (default is false).\r\n   * @param {boolean} objectLock.IsWriteLock - Indicates if this is a write lock (default is false).\r\n   * @param {Date} objectLock.CreatedUtc - Creation timestamp in UTC.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<ObjectLock|null|ApiErrorResponse>} A promise resolving to the created ObjectLock object or null.\r\n   * @throws {Error} If the objectLock is null.\r\n   */",
      "meta": {
        "range": [
          64284,
          64608
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1316,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024625",
          "name": "createObjectLock",
          "type": "ClassProperty"
        }
      },
      "description": "Create a new object lock.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the object lock.",
          "name": "objectLock"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object lock GUID (automatically generated if not provided).",
          "name": "objectLock.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "objectLock.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Node GUID (automatically generated if not provided).",
          "name": "objectLock.NodeGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (automatically generated if not provided).",
          "name": "objectLock.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "objectLock.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object GUID (automatically generated if not provided).",
          "name": "objectLock.ObjectGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Key for the object (default is empty string).",
          "name": "objectLock.Key"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Version of the object (default is empty string).",
          "name": "objectLock.Version"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if this is a read lock (default is false).",
          "name": "objectLock.IsReadLock"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if this is a write lock (default is false).",
          "name": "objectLock.IsWriteLock"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "objectLock.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(ObjectLock|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created ObjectLock object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the objectLock is null."
        }
      ],
      "name": "createObjectLock",
      "longname": "module:base/ViewConfigurationSdk#createObjectLock",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if an object lock exists by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the object lock to check.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise resolving to true if the object lock exists, otherwise false.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          65026,
          65316
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1332,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024664",
          "name": "existsObjectLock",
          "type": "ClassProperty"
        }
      },
      "description": "Check if an object lock exists by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the object lock to check.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to true if the object lock exists, otherwise false."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "existsObjectLock",
      "longname": "module:base/ViewConfigurationSdk#existsObjectLock",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve an object lock by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the object lock to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<ObjectLock|null|ApiErrorResponse>} A promise resolving to the ObjectLock object or null.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          65720,
          66026
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1348,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024703",
          "name": "retrieveObjectLock",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve an object lock by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the object lock to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(ObjectLock|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the ObjectLock object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveObjectLock",
      "longname": "module:base/ViewConfigurationSdk#retrieveObjectLock",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve all object locks.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<ObjectLock>|ApiErrorResponse>} A promise resolving to an array of ObjectLock objects.\r\n   */",
      "meta": {
        "range": [
          66301,
          66506
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1362,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024743",
          "name": "retrieveObjectLocks",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve all object locks.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<ObjectLock>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of ObjectLock objects."
        }
      ],
      "name": "retrieveObjectLocks",
      "longname": "module:base/ViewConfigurationSdk#retrieveObjectLocks",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update an existing object lock.\r\n   *\r\n   * @param {Object} objectLock Information about the object lock.\r\n   * @param {string} objectLock.GUID - Object lock GUID (automatically generated if not provided).\r\n   * @param {string} objectLock.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} objectLock.NodeGUID - Node GUID (automatically generated if not provided).\r\n   * @param {string} objectLock.BucketGUID - Bucket GUID (automatically generated if not provided).\r\n   * @param {string} objectLock.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} objectLock.ObjectGUID - Object GUID (automatically generated if not provided).\r\n   * @param {string} objectLock.Key - Key for the object (default is empty string).\r\n   * @param {string} objectLock.Version - Version of the object (default is empty string).\r\n   * @param {boolean} objectLock.IsReadLock - Indicates if this is a read lock (default is false).\r\n   * @param {boolean} objectLock.IsWriteLock - Indicates if this is a write lock (default is false).\r\n   * @param {Date} objectLock.CreatedUtc - Creation timestamp in UTC.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<ObjectLock|null|ApiErrorResponse>} A promise resolving to the updated ObjectLock object or null.\r\n   * @throws {Error} If the objectLock is null.\r\n   */",
      "meta": {
        "range": [
          67957,
          68300
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1386,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024770",
          "name": "updateObjectLock",
          "type": "ClassProperty"
        }
      },
      "description": "Update an existing object lock.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the object lock.",
          "name": "objectLock"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object lock GUID (automatically generated if not provided).",
          "name": "objectLock.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "objectLock.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Node GUID (automatically generated if not provided).",
          "name": "objectLock.NodeGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (automatically generated if not provided).",
          "name": "objectLock.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "objectLock.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object GUID (automatically generated if not provided).",
          "name": "objectLock.ObjectGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Key for the object (default is empty string).",
          "name": "objectLock.Key"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Version of the object (default is empty string).",
          "name": "objectLock.Version"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if this is a read lock (default is false).",
          "name": "objectLock.IsReadLock"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Indicates if this is a write lock (default is false).",
          "name": "objectLock.IsWriteLock"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp in UTC.",
          "name": "objectLock.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(ObjectLock|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the updated ObjectLock object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the objectLock is null."
        }
      ],
      "name": "updateObjectLock",
      "longname": "module:base/ViewConfigurationSdk#updateObjectLock",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete an object lock by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the object lock to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void|ApiErrorResponse>} A promise resolving to void if the deletion is successful.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          68694,
          68996
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1402,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024813",
          "name": "deleteObjectLock",
          "type": "ClassProperty"
        }
      },
      "description": "Delete an object lock by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the object lock to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(void|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to void if the deletion is successful."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteObjectLock",
      "longname": "module:base/ViewConfigurationSdk#deleteObjectLock",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a new metadata rule.\r\n   *\r\n   * @param {Object} metadataRule Information about the metadata rule.\r\n   * @param {string} metadataRule.GUID - Metadata rule GUID (automatically generated if not provided).\r\n   * @param {string} metadataRule.TenantGUID - Tenant GUID (default is null).\r\n   * @param {string} metadataRule.BucketGUID - Bucket GUID (default is null).\r\n   * @param {string} metadataRule.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} metadataRule.Name - Name of the rule (default is null).\r\n   * @param {string} metadataRule.ContentType - Content type (default is \"text/plain\").\r\n   * @param {string} metadataRule.Prefix - Prefix (default is null).\r\n   * @param {string} metadataRule.Suffix - Suffix (default is null).\r\n   * @param {string} metadataRule.ProcessingEndpoint - Processing endpoint (default is localhost).\r\n   * @param {string} metadataRule.CleanupEndpoint - Cleanup endpoint (default is localhost).\r\n   * @param {string} metadataRule.TypeDetectorEndpoint - Type detector endpoint (default is localhost).\r\n   * @param {string} metadataRule.SemanticCellEndpoint - Semantic cell endpoint (default is localhost).\r\n   * @param {number} metadataRule.MaxChunkContentLength - Maximum chunk content length (default is 512).\r\n   * @param {number} metadataRule.ShiftSize - Shift size (default is 512).\r\n   * @param {string} metadataRule.UdrEndpoint - UDR endpoint (default is localhost).\r\n   * @param {string} metadataRule.DataCatalogType - Data catalog type (default is DataCatalogTypeEnum.Lexi).\r\n   * @param {string} metadataRule.DataCatalogEndpoint - Data catalog endpoint (default is localhost).\r\n   * @param {string} metadataRule.DataCatalogCollection - Data catalog collection identifier (default is null).\r\n   * @param {string} metadataRule.GraphRepositoryGUID - Graph repository GUID (default is null).\r\n   * @param {number} metadataRule.TopTerms - Number of top terms to request (default is 25).\r\n   * @param {boolean} metadataRule.CaseInsensitive - Enable case insensitive processing (default is true).\r\n   * @param {boolean} metadataRule.IncludeFlattened - Enable inclusion of flattened representation (default is true).\r\n   * @param {string} metadataRule.TargetBucketGUID - Target bucket GUID (default is null).\r\n   * @param {number} metadataRule.MaxContentLength - Maximum content length (default is 16 * 1024 * 1024).\r\n   * @param {number|null} metadataRule.RetentionMinutes - Minutes to retain generated document (default is null).\r\n   * @param {Date} metadataRule.CreatedUtc - Creation timestamp (default is current UTC time).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<MetadataRule|null|ApiErrorResponse>} A promise resolving to the created MetadataRule object or null.\r\n   * @throws {Error} If the rule is null.\r\n   */",
      "meta": {
        "range": [
          71923,
          72253
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1446,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024853",
          "name": "createMetadataRule",
          "type": "ClassProperty"
        }
      },
      "description": "Create a new metadata rule.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the metadata rule.",
          "name": "metadataRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Metadata rule GUID (automatically generated if not provided).",
          "name": "metadataRule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (default is null).",
          "name": "metadataRule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (default is null).",
          "name": "metadataRule.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "metadataRule.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the rule (default is null).",
          "name": "metadataRule.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content type (default is \"text/plain\").",
          "name": "metadataRule.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix (default is null).",
          "name": "metadataRule.Prefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix (default is null).",
          "name": "metadataRule.Suffix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Processing endpoint (default is localhost).",
          "name": "metadataRule.ProcessingEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Cleanup endpoint (default is localhost).",
          "name": "metadataRule.CleanupEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type detector endpoint (default is localhost).",
          "name": "metadataRule.TypeDetectorEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Semantic cell endpoint (default is localhost).",
          "name": "metadataRule.SemanticCellEndpoint"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum chunk content length (default is 512).",
          "name": "metadataRule.MaxChunkContentLength"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Shift size (default is 512).",
          "name": "metadataRule.ShiftSize"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "UDR endpoint (default is localhost).",
          "name": "metadataRule.UdrEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog type (default is DataCatalogTypeEnum.Lexi).",
          "name": "metadataRule.DataCatalogType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog endpoint (default is localhost).",
          "name": "metadataRule.DataCatalogEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog collection identifier (default is null).",
          "name": "metadataRule.DataCatalogCollection"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository GUID (default is null).",
          "name": "metadataRule.GraphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Number of top terms to request (default is 25).",
          "name": "metadataRule.TopTerms"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable case insensitive processing (default is true).",
          "name": "metadataRule.CaseInsensitive"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable inclusion of flattened representation (default is true).",
          "name": "metadataRule.IncludeFlattened"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Target bucket GUID (default is null).",
          "name": "metadataRule.TargetBucketGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum content length (default is 16 * 1024 * 1024).",
          "name": "metadataRule.MaxContentLength"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Minutes to retain generated document (default is null).",
          "name": "metadataRule.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp (default is current UTC time).",
          "name": "metadataRule.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(MetadataRule|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created MetadataRule object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the rule is null."
        }
      ],
      "name": "createMetadataRule",
      "longname": "module:base/ViewConfigurationSdk#createMetadataRule",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a metadata rule exists by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the metadata rule to check.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise resolving to true if the metadata rule exists, otherwise false.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          72676,
          72970
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1462,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024892",
          "name": "existsMetadataRule",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a metadata rule exists by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the metadata rule to check.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to true if the metadata rule exists, otherwise false."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "existsMetadataRule",
      "longname": "module:base/ViewConfigurationSdk#existsMetadataRule",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a metadata rule by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the metadata rule to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<MetadataRule|null|ApiErrorResponse>} A promise resolving to the MetadataRule object or null.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          73381,
          73693
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1478,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024931",
          "name": "retrieveMetadataRule",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a metadata rule by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the metadata rule to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(MetadataRule|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the MetadataRule object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveMetadataRule",
      "longname": "module:base/ViewConfigurationSdk#retrieveMetadataRule",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve all metadata rules.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<MetadataRule>|ApiErrorResponse>} A promise resolving to an array of MetadataRule objects.\r\n   */",
      "meta": {
        "range": [
          73974,
          74185
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1492,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024971",
          "name": "retrieveMetadataRules",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve all metadata rules.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<MetadataRule>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of MetadataRule objects."
        }
      ],
      "name": "retrieveMetadataRules",
      "longname": "module:base/ViewConfigurationSdk#retrieveMetadataRules",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update an existing metadata rule.\r\n   *\r\n   * @param {Object} metadataRule Information about the metadata rule.\r\n   * @param {string} metadataRule.GUID - Metadata rule GUID (automatically generated if not provided).\r\n   * @param {string} metadataRule.TenantGUID - Tenant GUID (default is null).\r\n   * @param {string} metadataRule.BucketGUID - Bucket GUID (default is null).\r\n   * @param {string} metadataRule.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} metadataRule.Name - Name of the rule (default is null).\r\n   * @param {string} metadataRule.ContentType - Content type (default is \"text/plain\").\r\n   * @param {string} metadataRule.Prefix - Prefix (default is null).\r\n   * @param {string} metadataRule.Suffix - Suffix (default is null).\r\n   * @param {string} metadataRule.ProcessingEndpoint - Processing endpoint (default is localhost).\r\n   * @param {string} metadataRule.CleanupEndpoint - Cleanup endpoint (default is localhost).\r\n   * @param {string} metadataRule.TypeDetectorEndpoint - Type detector endpoint (default is localhost).\r\n   * @param {string} metadataRule.SemanticCellEndpoint - Semantic cell endpoint (default is localhost).\r\n   * @param {number} metadataRule.MaxChunkContentLength - Maximum chunk content length (default is 512).\r\n   * @param {number} metadataRule.ShiftSize - Shift size (default is 512).\r\n   * @param {string} metadataRule.UdrEndpoint - UDR endpoint (default is localhost).\r\n   * @param {string} metadataRule.DataCatalogType - Data catalog type (default is DataCatalogTypeEnum.Lexi).\r\n   * @param {string} metadataRule.DataCatalogEndpoint - Data catalog endpoint (default is localhost).\r\n   * @param {string} metadataRule.DataCatalogCollection - Data catalog collection identifier (default is null).\r\n   * @param {string} metadataRule.GraphRepositoryGUID - Graph repository GUID (default is null).\r\n   * @param {number} metadataRule.TopTerms - Number of top terms to request (default is 25).\r\n   * @param {boolean} metadataRule.CaseInsensitive - Enable case insensitive processing (default is true).\r\n   * @param {boolean} metadataRule.IncludeFlattened - Enable inclusion of flattened representation (default is true).\r\n   * @param {string} metadataRule.TargetBucketGUID - Target bucket GUID (default is null).\r\n   * @param {number} metadataRule.MaxContentLength - Maximum content length (default is 16 * 1024 * 1024).\r\n   * @param {number|null} metadataRule.RetentionMinutes - Minutes to retain generated document (default is null).\r\n   * @param {Date} metadataRule.CreatedUtc - Creation timestamp (default is current UTC time).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<MetadataRule|null|ApiErrorResponse>} A promise resolving to the updated MetadataRule object or null.\r\n   * @throws {Error} If the rule is null.\r\n   */",
      "meta": {
        "range": [
          77089,
          77440
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1531,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100024998",
          "name": "updateMetadataRule",
          "type": "ClassProperty"
        }
      },
      "description": "Update an existing metadata rule.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the metadata rule.",
          "name": "metadataRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Metadata rule GUID (automatically generated if not provided).",
          "name": "metadataRule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (default is null).",
          "name": "metadataRule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (default is null).",
          "name": "metadataRule.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "metadataRule.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the rule (default is null).",
          "name": "metadataRule.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content type (default is \"text/plain\").",
          "name": "metadataRule.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix (default is null).",
          "name": "metadataRule.Prefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix (default is null).",
          "name": "metadataRule.Suffix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Processing endpoint (default is localhost).",
          "name": "metadataRule.ProcessingEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Cleanup endpoint (default is localhost).",
          "name": "metadataRule.CleanupEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Type detector endpoint (default is localhost).",
          "name": "metadataRule.TypeDetectorEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Semantic cell endpoint (default is localhost).",
          "name": "metadataRule.SemanticCellEndpoint"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum chunk content length (default is 512).",
          "name": "metadataRule.MaxChunkContentLength"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Shift size (default is 512).",
          "name": "metadataRule.ShiftSize"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "UDR endpoint (default is localhost).",
          "name": "metadataRule.UdrEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog type (default is DataCatalogTypeEnum.Lexi).",
          "name": "metadataRule.DataCatalogType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog endpoint (default is localhost).",
          "name": "metadataRule.DataCatalogEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data catalog collection identifier (default is null).",
          "name": "metadataRule.DataCatalogCollection"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository GUID (default is null).",
          "name": "metadataRule.GraphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Number of top terms to request (default is 25).",
          "name": "metadataRule.TopTerms"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable case insensitive processing (default is true).",
          "name": "metadataRule.CaseInsensitive"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Enable inclusion of flattened representation (default is true).",
          "name": "metadataRule.IncludeFlattened"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Target bucket GUID (default is null).",
          "name": "metadataRule.TargetBucketGUID"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum content length (default is 16 * 1024 * 1024).",
          "name": "metadataRule.MaxContentLength"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Minutes to retain generated document (default is null).",
          "name": "metadataRule.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp (default is current UTC time).",
          "name": "metadataRule.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(MetadataRule|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the updated MetadataRule object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the rule is null."
        }
      ],
      "name": "updateMetadataRule",
      "longname": "module:base/ViewConfigurationSdk#updateMetadataRule",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a metadata rule by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the metadata rule to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void|ApiErrorResponse>} A promise resolving to void if the deletion is successful.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          77837,
          78145
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1547,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025041",
          "name": "deleteMetadataRule",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a metadata rule by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the metadata rule to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(void|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to void if the deletion is successful."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteMetadataRule",
      "longname": "module:base/ViewConfigurationSdk#deleteMetadataRule",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate Metadata Rules.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Trigger|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          78487,
          78696
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1561,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025081",
          "name": "enumerateMetadataRules",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Metadata Rules.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Trigger|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "enumerateMetadataRules",
      "longname": "module:base/ViewConfigurationSdk#enumerateMetadataRules",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a new embeddings rule.\r\n   *\r\n   * @param {Object} embeddingsRule Information about the embeddings rule.\r\n   * @param {string} embeddingsRule.GUID - Embeddings rule GUID (automatically generated if not provided).\r\n   * @param {string} embeddingsRule.TenantGUID - Tenant GUID (default is null).\r\n   * @param {string} embeddingsRule.BucketGUID - Bucket GUID (default is null).\r\n   * @param {string} embeddingsRule.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} embeddingsRule.Name - Name of the rule (default is null).\r\n   * @param {string} embeddingsRule.ContentType - Content type (default is \"text/plain\").\r\n   * @param {string} embeddingsRule.Prefix - Prefix (default is null).\r\n   * @param {string} embeddingsRule.Suffix - Suffix (default is null).\r\n   * @param {string} embeddingsRule.TargetBucketGUID - Target bucket GUID (default is null).\r\n   * @param {string} embeddingsRule.GraphRepositoryGUID - Graph repository GUID (default is null).\r\n   * @param {string} embeddingsRule.VectorRepositoryGUID - Vector repository GUID (default is null).\r\n   * @param {string} embeddingsRule.DataFlowEndpoint - Data flow endpoint (default is localhost).\r\n   * @param {string} embeddingsRule.EmbeddingsGenerator - Embeddings generator (default is EmbeddingsGeneratorEnum.LCProxy).\r\n   * @param {string} embeddingsRule.GeneratorUrl - Embeddings generator URL (default is localhost).\r\n   * @param {string} embeddingsRule.GeneratorApiKey - Embeddings provider API key (default is null).\r\n   * @param {number} embeddingsRule.BatchSize - Maximum number of chunks to process per request (default is 16).\r\n   * @param {number} embeddingsRule.MaxGeneratorTasks - Maximum number of parallel embeddings generation tasks (default is 16).\r\n   * @param {number} embeddingsRule.MaxRetries - Maximum number of retries per task (default is 3).\r\n   * @param {number} embeddingsRule.MaxFailures - Maximum number of failures before failing the operation (default is 3).\r\n   * @param {string} embeddingsRule.VectorStoreUrl - Vector store URL (default is localhost).\r\n   * @param {number} embeddingsRule.MaxContentLength - Maximum content length (default is 16 * 1024 * 1024).\r\n   * @param {number|null} embeddingsRule.RetentionMinutes - Minutes to retain the generated document (default is null).\r\n   * @param {Date} embeddingsRule.CreatedUtc - Creation timestamp (default is current UTC time).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EmbeddingsRule|null|ApiErrorResponse>} A promise resolving to the created EmbeddingsRule object or null.\r\n   * @throws {Error} If the rule is null.\r\n   */",
      "meta": {
        "range": [
          81441,
          81783
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1599,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025107",
          "name": "createEmbeddingsRule",
          "type": "ClassProperty"
        }
      },
      "description": "Create a new embeddings rule.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the embeddings rule.",
          "name": "embeddingsRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings rule GUID (automatically generated if not provided).",
          "name": "embeddingsRule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (default is null).",
          "name": "embeddingsRule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (default is null).",
          "name": "embeddingsRule.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "embeddingsRule.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the rule (default is null).",
          "name": "embeddingsRule.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content type (default is \"text/plain\").",
          "name": "embeddingsRule.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix (default is null).",
          "name": "embeddingsRule.Prefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix (default is null).",
          "name": "embeddingsRule.Suffix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Target bucket GUID (default is null).",
          "name": "embeddingsRule.TargetBucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository GUID (default is null).",
          "name": "embeddingsRule.GraphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector repository GUID (default is null).",
          "name": "embeddingsRule.VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data flow endpoint (default is localhost).",
          "name": "embeddingsRule.DataFlowEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings generator (default is EmbeddingsGeneratorEnum.LCProxy).",
          "name": "embeddingsRule.EmbeddingsGenerator"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings generator URL (default is localhost).",
          "name": "embeddingsRule.GeneratorUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings provider API key (default is null).",
          "name": "embeddingsRule.GeneratorApiKey"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of chunks to process per request (default is 16).",
          "name": "embeddingsRule.BatchSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of parallel embeddings generation tasks (default is 16).",
          "name": "embeddingsRule.MaxGeneratorTasks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of retries per task (default is 3).",
          "name": "embeddingsRule.MaxRetries"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of failures before failing the operation (default is 3).",
          "name": "embeddingsRule.MaxFailures"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector store URL (default is localhost).",
          "name": "embeddingsRule.VectorStoreUrl"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum content length (default is 16 * 1024 * 1024).",
          "name": "embeddingsRule.MaxContentLength"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Minutes to retain the generated document (default is null).",
          "name": "embeddingsRule.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp (default is current UTC time).",
          "name": "embeddingsRule.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EmbeddingsRule|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created EmbeddingsRule object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the rule is null."
        }
      ],
      "name": "createEmbeddingsRule",
      "longname": "module:base/ViewConfigurationSdk#createEmbeddingsRule",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if an embeddings rule exists by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the embeddings rule to check.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise resolving to true if the embeddings rule exists, otherwise false.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          82213,
          82511
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1615,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025146",
          "name": "existsEmbeddingsRule",
          "type": "ClassProperty"
        }
      },
      "description": "Check if an embeddings rule exists by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the embeddings rule to check.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to true if the embeddings rule exists, otherwise false."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "existsEmbeddingsRule",
      "longname": "module:base/ViewConfigurationSdk#existsEmbeddingsRule",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve an embeddings rule by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the embeddings rule to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EmbeddingsRule|null|ApiErrorResponse>} A promise resolving to the EmbeddingsRule object or null.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          82931,
          83249
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1631,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025185",
          "name": "retrieveEmbeddingsRule",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve an embeddings rule by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the embeddings rule to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EmbeddingsRule|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the EmbeddingsRule object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveEmbeddingsRule",
      "longname": "module:base/ViewConfigurationSdk#retrieveEmbeddingsRule",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve all embeddings rules.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<EmbeddingsRule>|ApiErrorResponse>} A promise resolving to an array of EmbeddingsRule objects.\r\n   */",
      "meta": {
        "range": [
          83536,
          83753
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1645,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025225",
          "name": "retrieveEmbeddingsRules",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve all embeddings rules.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<EmbeddingsRule>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of EmbeddingsRule objects."
        }
      ],
      "name": "retrieveEmbeddingsRules",
      "longname": "module:base/ViewConfigurationSdk#retrieveEmbeddingsRules",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update an existing embeddings rule.\r\n   *\r\n   * @param {Object} embeddingsRule Information about the embeddings rule.\r\n   * @param {string} embeddingsRule.GUID - Embeddings rule GUID (automatically generated if not provided).\r\n   * @param {string} embeddingsRule.TenantGUID - Tenant GUID (default is null).\r\n   * @param {string} embeddingsRule.BucketGUID - Bucket GUID (default is null).\r\n   * @param {string} embeddingsRule.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} embeddingsRule.Name - Name of the rule (default is null).\r\n   * @param {string} embeddingsRule.ContentType - Content type (default is \"text/plain\").\r\n   * @param {string} embeddingsRule.Prefix - Prefix (default is null).\r\n   * @param {string} embeddingsRule.Suffix - Suffix (default is null).\r\n   * @param {string} embeddingsRule.TargetBucketGUID - Target bucket GUID (default is null).\r\n   * @param {string} embeddingsRule.GraphRepositoryGUID - Graph repository GUID (default is null).\r\n   * @param {string} embeddingsRule.VectorRepositoryGUID - Vector repository GUID (default is null).\r\n   * @param {string} embeddingsRule.DataFlowEndpoint - Data flow endpoint (default is localhost).\r\n   * @param {string} embeddingsRule.EmbeddingsGenerator - Embeddings generator (default is EmbeddingsGeneratorEnum.LCProxy).\r\n   * @param {string} embeddingsRule.GeneratorUrl - Embeddings generator URL (default is localhost).\r\n   * @param {string} embeddingsRule.GeneratorApiKey - Embeddings provider API key (default is null).\r\n   * @param {number} embeddingsRule.BatchSize - Maximum number of chunks to process per request (default is 16).\r\n   * @param {number} embeddingsRule.MaxGeneratorTasks - Maximum number of parallel embeddings generation tasks (default is 16).\r\n   * @param {number} embeddingsRule.MaxRetries - Maximum number of retries per task (default is 3).\r\n   * @param {number} embeddingsRule.MaxFailures - Maximum number of failures before failing the operation (default is 3).\r\n   * @param {string} embeddingsRule.VectorStoreUrl - Vector store URL (default is localhost).\r\n   * @param {number} embeddingsRule.MaxContentLength - Maximum content length (default is 16 * 1024 * 1024).\r\n   * @param {number|null} embeddingsRule.RetentionMinutes - Minutes to retain the generated document (default is null).\r\n   * @param {Date} embeddingsRule.CreatedUtc - Creation timestamp (default is current UTC time).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EmbeddingsRule|null|ApiErrorResponse>} A promise resolving to the updated EmbeddingsRule object or null.\r\n   * @throws {Error} If the rule is null.\r\n   */",
      "meta": {
        "range": [
          86472,
          86837
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1681,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025252",
          "name": "updateEmbeddingsRule",
          "type": "ClassProperty"
        }
      },
      "description": "Update an existing embeddings rule.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the embeddings rule.",
          "name": "embeddingsRule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings rule GUID (automatically generated if not provided).",
          "name": "embeddingsRule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (default is null).",
          "name": "embeddingsRule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Bucket GUID (default is null).",
          "name": "embeddingsRule.BucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "embeddingsRule.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the rule (default is null).",
          "name": "embeddingsRule.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content type (default is \"text/plain\").",
          "name": "embeddingsRule.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Prefix (default is null).",
          "name": "embeddingsRule.Prefix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Suffix (default is null).",
          "name": "embeddingsRule.Suffix"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Target bucket GUID (default is null).",
          "name": "embeddingsRule.TargetBucketGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Graph repository GUID (default is null).",
          "name": "embeddingsRule.GraphRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector repository GUID (default is null).",
          "name": "embeddingsRule.VectorRepositoryGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data flow endpoint (default is localhost).",
          "name": "embeddingsRule.DataFlowEndpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings generator (default is EmbeddingsGeneratorEnum.LCProxy).",
          "name": "embeddingsRule.EmbeddingsGenerator"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings generator URL (default is localhost).",
          "name": "embeddingsRule.GeneratorUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Embeddings provider API key (default is null).",
          "name": "embeddingsRule.GeneratorApiKey"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of chunks to process per request (default is 16).",
          "name": "embeddingsRule.BatchSize"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of parallel embeddings generation tasks (default is 16).",
          "name": "embeddingsRule.MaxGeneratorTasks"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of retries per task (default is 3).",
          "name": "embeddingsRule.MaxRetries"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum number of failures before failing the operation (default is 3).",
          "name": "embeddingsRule.MaxFailures"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Vector store URL (default is localhost).",
          "name": "embeddingsRule.VectorStoreUrl"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "Maximum content length (default is 16 * 1024 * 1024).",
          "name": "embeddingsRule.MaxContentLength"
        },
        {
          "type": {
            "names": [
              "number",
              "null"
            ]
          },
          "description": "Minutes to retain the generated document (default is null).",
          "name": "embeddingsRule.RetentionMinutes"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Creation timestamp (default is current UTC time).",
          "name": "embeddingsRule.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EmbeddingsRule|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the updated EmbeddingsRule object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the rule is null."
        }
      ],
      "name": "updateEmbeddingsRule",
      "longname": "module:base/ViewConfigurationSdk#updateEmbeddingsRule",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete an embeddings rule by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the embeddings rule to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void|ApiErrorResponse>} A promise resolving to void if the deletion is successful.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          87239,
          87553
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1697,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025295",
          "name": "deleteEmbeddingsRule",
          "type": "ClassProperty"
        }
      },
      "description": "Delete an embeddings rule by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the embeddings rule to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(void|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to void if the deletion is successful."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteEmbeddingsRule",
      "longname": "module:base/ViewConfigurationSdk#deleteEmbeddingsRule",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate Embeddings Rules.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EmbeddingsResult|null|ApiErrorResponse>} A promise resolving to the created EmbeddingsResult object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          87915,
          88128
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1711,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025335",
          "name": "enumerateEmbeddingsRules",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Embeddings Rules.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EmbeddingsResult|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created EmbeddingsResult object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "enumerateEmbeddingsRules",
      "longname": "module:base/ViewConfigurationSdk#enumerateEmbeddingsRules",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a list of data repositories.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<DataRepository>|ApiErrorResponse>} A promise resolving to an array of DataRepository objects.\r\n   */",
      "meta": {
        "range": [
          88452,
          88672
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1724,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025361",
          "name": "retrieveDataRepositories",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a list of data repositories.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<DataRepository>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of DataRepository objects."
        }
      ],
      "name": "retrieveDataRepositories",
      "longname": "module:base/ViewConfigurationSdk#retrieveDataRepositories",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a specific data repository by its GUID.\r\n   *\r\n   * @param {string} repositoryGuid - The GUID of the data repository to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<DataRepository|null|ApiErrorResponse>} A promise resolving to the DataRepository object or null.\r\n   * @throws {Error} If the repositoryGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          89120,
          89479
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1737,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025388",
          "name": "retrieveDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a specific data repository by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data repository to retrieve.",
          "name": "repositoryGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(DataRepository|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the DataRepository object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the repositoryGuid is null or empty."
        }
      ],
      "name": "retrieveDataRepository",
      "longname": "module:base/ViewConfigurationSdk#retrieveDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a new data repository.\r\n   *\r\n   * @param {Object} dataRepository Information about the data repository.\r\n   * @param {number} dataRepository.Id - ID (must be greater than 0).\r\n   * @param {string} dataRepository.GUID - Data repository GUID (automatically generated if not provided).\r\n   * @param {string} dataRepository.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} dataRepository.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} dataRepository.Name - Name of the repository (default is \"My file repository\").\r\n   * @param {string} dataRepository.RepositoryType - Repository type (default is DataRepositoryTypeEnum.File).\r\n   * @param {boolean} dataRepository.UseSsl - Boolean flag to enable SSL (default is false).\r\n   * @param {boolean} dataRepository.IncludeSubdirectories - Include subdirectories (default is true).\r\n   * @param {string} dataRepository.DiskDirectory - Disk directory (default is null).\r\n   * @param {string} dataRepository.S3EndpointUrl - S3 endpoint URL (default is null).\r\n   * @param {string} dataRepository.S3BaseUrl - S3 base URL (default is null).\r\n   * @param {string} dataRepository.S3AccessKey - S3 access key (default is null).\r\n   * @param {string} dataRepository.S3SecretKey - S3 secret key (default is null).\r\n   * @param {string} dataRepository.S3BucketName - S3 bucket name (default is null).\r\n   * @param {string} dataRepository.S3Region - S3 region (default is null).\r\n   * @param {string} dataRepository.AzureEndpointUrl - Azure endpoint URL (default is null).\r\n   * @param {string} dataRepository.AzureAccountName - Azure account name (default is null).\r\n   * @param {string} dataRepository.AzureContainerName - Azure container name (default is null).\r\n   * @param {string} dataRepository.AzureAccessKey - Azure access key (default is null).\r\n   * @param {string} dataRepository.CifsHostname - CIFS hostname (default is null).\r\n   * @param {string} dataRepository.CifsUsername - CIFS username (default is null).\r\n   * @param {string} dataRepository.CifsPassword - CIFS password (default is null).\r\n   * @param {string} dataRepository.CifsShareName - CIFS share name (default is null).\r\n   * @param {string} dataRepository.NfsHostname - NFS hostname (default is null).\r\n   * @param {number} dataRepository.NfsUserId - NFS user ID (must be non-negative).\r\n   * @param {number} dataRepository.NfsGroupId - NFS group ID (must be non-negative).\r\n   * @param {string} dataRepository.NfsShareName - NFS share name (default is null).\r\n   * @param {string} dataRepository.NfsVersion - NFS version (default is null).\r\n   * @param {Date} dataRepository.CreatedUtc - Created timestamp (default is current UTC time).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<DataRepository|null|ApiErrorResponse>} A promise resolving to the created DataRepository object or null.\r\n   * @throws {Error} If the repository is null.\r\n   */",
      "meta": {
        "range": [
          92518,
          92867
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1782,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025428",
          "name": "createDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Create a new data repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the data repository.",
          "name": "dataRepository"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "ID (must be greater than 0).",
          "name": "dataRepository.Id"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Data repository GUID (automatically generated if not provided).",
          "name": "dataRepository.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "dataRepository.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "dataRepository.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository (default is \"My file repository\").",
          "name": "dataRepository.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository type (default is DataRepositoryTypeEnum.File).",
          "name": "dataRepository.RepositoryType"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Boolean flag to enable SSL (default is false).",
          "name": "dataRepository.UseSsl"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Include subdirectories (default is true).",
          "name": "dataRepository.IncludeSubdirectories"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Disk directory (default is null).",
          "name": "dataRepository.DiskDirectory"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 endpoint URL (default is null).",
          "name": "dataRepository.S3EndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 base URL (default is null).",
          "name": "dataRepository.S3BaseUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 access key (default is null).",
          "name": "dataRepository.S3AccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 secret key (default is null).",
          "name": "dataRepository.S3SecretKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 bucket name (default is null).",
          "name": "dataRepository.S3BucketName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 region (default is null).",
          "name": "dataRepository.S3Region"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure endpoint URL (default is null).",
          "name": "dataRepository.AzureEndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure account name (default is null).",
          "name": "dataRepository.AzureAccountName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure container name (default is null).",
          "name": "dataRepository.AzureContainerName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure access key (default is null).",
          "name": "dataRepository.AzureAccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS hostname (default is null).",
          "name": "dataRepository.CifsHostname"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS username (default is null).",
          "name": "dataRepository.CifsUsername"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS password (default is null).",
          "name": "dataRepository.CifsPassword"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS share name (default is null).",
          "name": "dataRepository.CifsShareName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "NFS hostname (default is null).",
          "name": "dataRepository.NfsHostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "NFS user ID (must be non-negative).",
          "name": "dataRepository.NfsUserId"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "NFS group ID (must be non-negative).",
          "name": "dataRepository.NfsGroupId"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "NFS share name (default is null).",
          "name": "dataRepository.NfsShareName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "NFS version (default is null).",
          "name": "dataRepository.NfsVersion"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "description": "Created timestamp (default is current UTC time).",
          "name": "dataRepository.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(DataRepository|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created DataRepository object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the repository is null."
        }
      ],
      "name": "createDataRepository",
      "longname": "module:base/ViewConfigurationSdk#createDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a data repository by its GUID.\r\n   *\r\n   * @param {string} repositoryGuid - The GUID of the data repository to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void|ApiErrorResponse>} A promise resolving to void if the deletion is successful.\r\n   * @throws {Error} If the repositoryGuid is null or empty.\r\n   */",
      "meta": {
        "range": [
          93288,
          93630
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1798,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025467",
          "name": "deleteDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a data repository by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data repository to delete.",
          "name": "repositoryGuid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(void|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to void if the deletion is successful."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the repositoryGuid is null or empty."
        }
      ],
      "name": "deleteDataRepository",
      "longname": "module:base/ViewConfigurationSdk#deleteDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate Data Repositories.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult|null|ApiErrorResponse>} A promise resolving to the created EnumerationResult object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          93995,
          94210
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1812,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025506",
          "name": "enumerateDataRepositories",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Data Repositories.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created EnumerationResult object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "enumerateDataRepositories",
      "longname": "module:base/ViewConfigurationSdk#enumerateDataRepositories",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a data repository exists by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the data repository.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise resolving to true if the data repository exists, false otherwise.\r\n   * @throws {Error} If the GUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          94630,
          95010
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1825,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025532",
          "name": "existsDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a data repository exists by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the data repository.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to true if the data repository exists, false otherwise."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the GUID is null or empty."
        }
      ],
      "name": "existsDataRepository",
      "longname": "module:base/ViewConfigurationSdk#existsDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write S3 Data Repository.\r\n   * @param {Object} dataRepository Information about the data repository.\r\n   * @param {string} dataRepository.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} dataRepository.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} dataRepository.Name - Name of the repository (default is \"My file repository\").\r\n   * @param {string} dataRepository.RepositoryType - Repository type (default is DataRepositoryTypeEnum.File).\r\n   * @param {string} dataRepository.S3EndpointUrl - S3 endpoint URL (default is null).\r\n   * @param {string} dataRepository.S3BaseUrl - S3 base URL (default is null).\r\n   * @param {string} dataRepository.S3AccessKey - S3 access key (default is null).\r\n   * @param {string} dataRepository.S3SecretKey - S3 secret key (default is null).\r\n   * @param {string} dataRepository.S3BucketName - S3 bucket name (default is null).\r\n   * @param {string} dataRepository.S3Region - S3 region (default is null).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Node|null|ApiErrorResponse>} A promise resolving to the created Node object or null if the creation fails.\r\n   * @throws {Error} If the node is null or empty.\r\n   */",
      "meta": {
        "range": [
          96342,
          96696
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1851,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025572",
          "name": "writeS3DataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Write S3 Data Repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the data repository.",
          "name": "dataRepository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "dataRepository.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "dataRepository.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository (default is \"My file repository\").",
          "name": "dataRepository.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository type (default is DataRepositoryTypeEnum.File).",
          "name": "dataRepository.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 endpoint URL (default is null).",
          "name": "dataRepository.S3EndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 base URL (default is null).",
          "name": "dataRepository.S3BaseUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 access key (default is null).",
          "name": "dataRepository.S3AccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 secret key (default is null).",
          "name": "dataRepository.S3SecretKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 bucket name (default is null).",
          "name": "dataRepository.S3BucketName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "S3 region (default is null).",
          "name": "dataRepository.S3Region"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Node|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Node object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the node is null or empty."
        }
      ],
      "name": "writeS3DataRepository",
      "longname": "module:base/ViewConfigurationSdk#writeS3DataRepository",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write Disk Data Repository.\r\n   * @param {Object} dataRepository Information about the data repository.\r\n   * @param {string} dataRepository.RepositoryType - Repository type (default is DataRepositoryTypeEnum.File).\r\n   * @param {string} dataRepository.DiskDirectory - Disk directory (default is null).\r\n   * @param {boolean} dataRepository.DiskIncludeSubdirectories - Include subdirectories on disk (default is true).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Node|null|ApiErrorResponse>} A promise resolving to the created Node object or null if the creation fails.\r\n   * @throws {Error} If the node is null or empty.\r\n   */",
      "meta": {
        "range": [
          97424,
          97780
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1869,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025611",
          "name": "writeDiskDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Write Disk Data Repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the data repository.",
          "name": "dataRepository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository type (default is DataRepositoryTypeEnum.File).",
          "name": "dataRepository.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Disk directory (default is null).",
          "name": "dataRepository.DiskDirectory"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Include subdirectories on disk (default is true).",
          "name": "dataRepository.DiskIncludeSubdirectories"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Node|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Node object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the node is null or empty."
        }
      ],
      "name": "writeDiskDataRepository",
      "longname": "module:base/ViewConfigurationSdk#writeDiskDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write Azure BLOB Data Repository.\r\n   * @param {Object} dataRepository Information about the data repository.\r\n   * @param {string} dataRepository.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} dataRepository.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} dataRepository.Name - Name of the repository (default is \"My file repository).\r\n   * @param {string} dataRepository.RepositoryType - Repository type (default is DataRepositoryTypeEnum.File).\r\n   * @param {string} dataRepository.AzureEndpointUrl - Azure endpoint URL (default is null).\r\n   * @param {string} dataRepository.AzureAccountName - Azure account name (default is null).\r\n   * @param {string} dataRepository.AzureContainerName - Azure container name (default is null).\r\n   * @param {string} dataRepository.AzureAccessKey - Azure access key (default is null).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Node|null|ApiErrorResponse>} A promise resolving to the created Node object or null if the creation fails.\r\n   * @throws {Error} If the node is null or empty.\r\n   */",
      "meta": {
        "range": [
          98996,
          99357
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1892,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025650",
          "name": "writeAzureBlobDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Write Azure BLOB Data Repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the data repository.",
          "name": "dataRepository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "dataRepository.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "dataRepository.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository (default is \"My file repository).",
          "name": "dataRepository.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository type (default is DataRepositoryTypeEnum.File).",
          "name": "dataRepository.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure endpoint URL (default is null).",
          "name": "dataRepository.AzureEndpointUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure account name (default is null).",
          "name": "dataRepository.AzureAccountName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure container name (default is null).",
          "name": "dataRepository.AzureContainerName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Azure access key (default is null).",
          "name": "dataRepository.AzureAccessKey"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Node|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Node object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the node is null or empty."
        }
      ],
      "name": "writeAzureBlobDataRepository",
      "longname": "module:base/ViewConfigurationSdk#writeAzureBlobDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write NFS Data Repository.\r\n   * @param {Object} dataRepository Information about the data repository.\r\n   * @param {string} dataRepository.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} dataRepository.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} dataRepository.Name - Name of the repository (default is \"My file repository).\r\n   * @param {string} dataRepository.RepositoryType - Repository type (default is DataRepositoryTypeEnum.File).\r\n   * @param {string} dataRepository.NfsHostname - NFS hostname (default is null).\r\n   * @param {number} dataRepository.NfsUserId - NFS user ID (must be non-negative).\r\n   * @param {number} dataRepository.NfsGroupId - NFS group ID (must be non-negative).\r\n   * @param {string} dataRepository.NfsShareName - NFS share name (default is null).\r\n   * @param {boolean} dataRepository.NfsIncludeSubdirectories - Include subdirectories on NFS (default is true).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Node|null|ApiErrorResponse>} A promise resolving to the created Node object or null if the creation fails.\r\n   * @throws {Error} If the node is null or empty.\r\n   */",
      "meta": {
        "range": [
          100645,
          101000
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1916,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025689",
          "name": "writeNfsDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Write NFS Data Repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the data repository.",
          "name": "dataRepository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "dataRepository.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "dataRepository.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository (default is \"My file repository).",
          "name": "dataRepository.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository type (default is DataRepositoryTypeEnum.File).",
          "name": "dataRepository.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "NFS hostname (default is null).",
          "name": "dataRepository.NfsHostname"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "NFS user ID (must be non-negative).",
          "name": "dataRepository.NfsUserId"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "description": "NFS group ID (must be non-negative).",
          "name": "dataRepository.NfsGroupId"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "NFS share name (default is null).",
          "name": "dataRepository.NfsShareName"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Include subdirectories on NFS (default is true).",
          "name": "dataRepository.NfsIncludeSubdirectories"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Node|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Node object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the node is null or empty."
        }
      ],
      "name": "writeNfsDataRepository",
      "longname": "module:base/ViewConfigurationSdk#writeNfsDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write CIFS Data Repository.\r\n   * @param {Object} dataRepository Information about the data repository.\r\n   * @param {string} dataRepository.TenantGUID - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} dataRepository.OwnerGUID - Owner GUID (automatically generated if not provided).\r\n   * @param {string} dataRepository.Name - Name of the repository (default is \"My file repository).\r\n   * @param {string} dataRepository.RepositoryType - Repository type (default is DataRepositoryTypeEnum.File).\r\n   * @param {string} dataRepository.CifsHostname - CIFS hostname (default is null).\r\n   * @param {string} dataRepository.CifsUsername - CIFS username (default is null).\r\n   * @param {string} dataRepository.CifsPassword - CIFS password (default is null).\r\n   * @param {string} dataRepository.CifsShareName - CIFS share name (default is null).\r\n   * @param {boolean} dataRepository.CifsIncludeSubdirectories - Include subdirectories on CIFS (default is true).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Node|null|ApiErrorResponse>} A promise resolving to the created Node object or null if the creation fails.\r\n   * @throws {Error} If the node is null or empty.\r\n   */",
      "meta": {
        "range": [
          102293,
          102649
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1940,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025728",
          "name": "writeCifsDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Write CIFS Data Repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the data repository.",
          "name": "dataRepository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "dataRepository.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "dataRepository.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository (default is \"My file repository).",
          "name": "dataRepository.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository type (default is DataRepositoryTypeEnum.File).",
          "name": "dataRepository.RepositoryType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS hostname (default is null).",
          "name": "dataRepository.CifsHostname"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS username (default is null).",
          "name": "dataRepository.CifsUsername"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS password (default is null).",
          "name": "dataRepository.CifsPassword"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "CIFS share name (default is null).",
          "name": "dataRepository.CifsShareName"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Include subdirectories on CIFS (default is true).",
          "name": "dataRepository.CifsIncludeSubdirectories"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Node|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Node object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the node is null or empty."
        }
      ],
      "name": "writeCifsDataRepository",
      "longname": "module:base/ViewConfigurationSdk#writeCifsDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update Data Repository.\r\n   * @param {Object} dataRepository Information about the data repository.\r\n   * @param {string} dataRepository.Name - Name of the repository (default is \"My file repository).\r\n   * @param {string} dataRepository.RepositoryType - Repository type (default is DataRepositoryTypeEnum.File).\r\n   * @param {boolean} dataRepository.IncludeSubdirectories - Include subdirectories (default is true).\r\n   * @param {string} dataRepository.DiskDirectory - Disk directory (default is null).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Node|null|ApiErrorResponse>} A promise resolving to the created Node object or null if the creation fails.\r\n   * @throws {Error} If the node is null or empty.\r\n   */",
      "meta": {
        "range": [
          103462,
          103829
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1959,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025767",
          "name": "updateDataRepository",
          "type": "ClassProperty"
        }
      },
      "description": "Update Data Repository.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the data repository.",
          "name": "dataRepository"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the repository (default is \"My file repository).",
          "name": "dataRepository.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Repository type (default is DataRepositoryTypeEnum.File).",
          "name": "dataRepository.RepositoryType"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "description": "Include subdirectories (default is true).",
          "name": "dataRepository.IncludeSubdirectories"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Disk directory (default is null).",
          "name": "dataRepository.DiskDirectory"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Node|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Node object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the node is null or empty."
        }
      ],
      "name": "updateDataRepository",
      "longname": "module:base/ViewConfigurationSdk#updateDataRepository",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a webhook event exists.\r\n   *\r\n   * @param {string} guid - The GUID of the webhook event.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise resolving to true if the webhook event exists.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          104242,
          104536
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1976,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025809",
          "name": "existsWebhookEvent",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a webhook event exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the webhook event.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to true if the webhook event exists."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "existsWebhookEvent",
      "longname": "module:base/ViewConfigurationSdk#existsWebhookEvent",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a webhook event by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the webhook event to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<WebhookEvent|null|ApiErrorResponse>} A promise resolving to the WebhookEvent object or null.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          104947,
          105259
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 1992,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025848",
          "name": "retrieveWebhookEvent",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a webhook event by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the webhook event to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(WebhookEvent|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the WebhookEvent object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveWebhookEvent",
      "longname": "module:base/ViewConfigurationSdk#retrieveWebhookEvent",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a list of webhook events.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<WebhookEvent>|ApiErrorResponse>} A promise resolving to an array of WebhookEvent objects.\r\n   */",
      "meta": {
        "range": [
          105546,
          105757
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2006,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025888",
          "name": "retrieveWebhookEvents",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a list of webhook events.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<WebhookEvent>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of WebhookEvent objects."
        }
      ],
      "name": "retrieveWebhookEvents",
      "longname": "module:base/ViewConfigurationSdk#retrieveWebhookEvents",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate Webhook events.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult|null|ApiErrorResponse>} A promise resolving to the created EnumerationResult object or null if creation fails.\r\n   * @throws {Error} If the EnumerationResult is null or invalid.\r\n   */",
      "meta": {
        "range": [
          106129,
          106338
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2017,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025915",
          "name": "enumerateWebhookEvents",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Webhook events.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created EnumerationResult object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the EnumerationResult is null or invalid."
        }
      ],
      "name": "enumerateWebhookEvents",
      "longname": "module:base/ViewConfigurationSdk#enumerateWebhookEvents",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a webhook rule.\r\n   *\r\n   * @param {Object} [rule] - Optional parameters.\r\n   * @param {string} [rule.GUID] - GUID (automatically generated if not provided).\r\n   * @param {string} [rule.TenantGUID] - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} [rule.TargetGUID] - Target GUID (automatically generated if not provided).\r\n   * @param {string} [rule.Name] - Name of the webhook rule.\r\n   * @param {WebhookEventTypeEnum} [rule.EventType] - Event type (defaults to WebhookEventTypeEnum.Unknown).\r\n   * @param {number} [rule.MaxAttempts] - Maximum number of attempts (defaults to 10).\r\n   * @param {number} [rule.RetryIntervalMs] - Retry interval in milliseconds (defaults to 30 seconds).\r\n   * @param {number} [rule.TimeoutMs] - Timeout in milliseconds (defaults to 1 minute).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<WebhookRule|ApiErrorResponse>} A promise resolving to the created WebhookRule.\r\n   * @throws {Error} If the rule is null.\r\n   */",
      "meta": {
        "range": [
          107450,
          107753
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2040,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025941",
          "name": "createWebhookRule",
          "type": "ClassProperty"
        }
      },
      "description": "Create a webhook rule.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional parameters.",
          "name": "rule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID (automatically generated if not provided).",
          "name": "rule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "rule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Target GUID (automatically generated if not provided).",
          "name": "rule.TargetGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Name of the webhook rule.",
          "name": "rule.Name"
        },
        {
          "type": {
            "names": [
              "WebhookEventTypeEnum"
            ]
          },
          "optional": true,
          "description": "Event type (defaults to WebhookEventTypeEnum.Unknown).",
          "name": "rule.EventType"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "description": "Maximum number of attempts (defaults to 10).",
          "name": "rule.MaxAttempts"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "description": "Retry interval in milliseconds (defaults to 30 seconds).",
          "name": "rule.RetryIntervalMs"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "description": "Timeout in milliseconds (defaults to 1 minute).",
          "name": "rule.TimeoutMs"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(WebhookRule|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created WebhookRule."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the rule is null."
        }
      ],
      "name": "createWebhookRule",
      "longname": "module:base/ViewConfigurationSdk#createWebhookRule",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a webhook rule exists.\r\n   *\r\n   * @param {string} guid - The GUID of the webhook rule.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean|ApiErrorResponse>} A promise resolving to true if the webhook rule exists.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          108135,
          108427
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2056,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100025980",
          "name": "existsWebhookRule",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a webhook rule exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the webhook rule.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(boolean|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to true if the webhook rule exists."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "existsWebhookRule",
      "longname": "module:base/ViewConfigurationSdk#existsWebhookRule",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a webhook rule by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the webhook rule to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<WebhookRule|null|ApiErrorResponse>} A promise resolving to the WebhookRule object or null.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          108834,
          109143
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2072,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026019",
          "name": "retrieveWebhookRule",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a webhook rule by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the webhook rule to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(WebhookRule|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the WebhookRule object or null."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveWebhookRule",
      "longname": "module:base/ViewConfigurationSdk#retrieveWebhookRule",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a list of webhook rules.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<WebhookRule>|ApiErrorResponse>} A promise resolving to an array of WebhookRule objects.\r\n   */",
      "meta": {
        "range": [
          109427,
          109635
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2086,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026059",
          "name": "retrieveWebhookRules",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a list of webhook rules.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<WebhookRule>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of WebhookRule objects."
        }
      ],
      "name": "retrieveWebhookRules",
      "longname": "module:base/ViewConfigurationSdk#retrieveWebhookRules",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update a webhook rule.\r\n   *\r\n   * @param {Object} [rule] - Optional parameters.\r\n   * @param {string} [rule.GUID] - GUID (automatically generated if not provided).\r\n   * @param {string} [rule.TenantGUID] - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} [rule.TargetGUID] - Target GUID (automatically generated if not provided).\r\n   * @param {string} [rule.Name] - Name of the webhook rule.\r\n   * @param {WebhookEventTypeEnum} [rule.EventType] - Event type (defaults to WebhookEventTypeEnum.Unknown).\r\n   * @param {number} [rule.MaxAttempts] - Maximum number of attempts (defaults to 10).\r\n   * @param {number} [rule.RetryIntervalMs] - Retry interval in milliseconds (defaults to 30 seconds).\r\n   * @param {number} [rule.TimeoutMs] - Timeout in milliseconds (defaults to 1 minute).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<WebhookRule|ApiErrorResponse>} A promise resolving to the updated WebhookRule.\r\n   * @throws {Error} If the rule is null.\r\n   */",
      "meta": {
        "range": [
          110719,
          111035
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2107,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026086",
          "name": "updateWebhookRule",
          "type": "ClassProperty"
        }
      },
      "description": "Update a webhook rule.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional parameters.",
          "name": "rule"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID (automatically generated if not provided).",
          "name": "rule.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "rule.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Target GUID (automatically generated if not provided).",
          "name": "rule.TargetGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Name of the webhook rule.",
          "name": "rule.Name"
        },
        {
          "type": {
            "names": [
              "WebhookEventTypeEnum"
            ]
          },
          "optional": true,
          "description": "Event type (defaults to WebhookEventTypeEnum.Unknown).",
          "name": "rule.EventType"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "description": "Maximum number of attempts (defaults to 10).",
          "name": "rule.MaxAttempts"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "description": "Retry interval in milliseconds (defaults to 30 seconds).",
          "name": "rule.RetryIntervalMs"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "description": "Timeout in milliseconds (defaults to 1 minute).",
          "name": "rule.TimeoutMs"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(WebhookRule|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the updated WebhookRule."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the rule is null."
        }
      ],
      "name": "updateWebhookRule",
      "longname": "module:base/ViewConfigurationSdk#updateWebhookRule",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a webhook rule.\r\n   *\r\n   * @param {string} guid - The GUID of the webhook rule to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void|ApiErrorResponse>} A promise resolving when the delete operation is complete.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          111418,
          111723
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2123,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026129",
          "name": "deleteWebhookRule",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a webhook rule.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the webhook rule to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(void|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving when the delete operation is complete."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteWebhookRule",
      "longname": "module:base/ViewConfigurationSdk#deleteWebhookRule",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Enumerate Webhook rules.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult|null|ApiErrorResponse>} A promise resolving to the created EnumerationResult object or null if creation fails.\r\n   * @throws {Error} If the EnumerationResult is null or invalid.\r\n   */",
      "meta": {
        "range": [
          112094,
          112300
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2137,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026169",
          "name": "enumerateWebhookRules",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Webhook rules.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created EnumerationResult object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the EnumerationResult is null or invalid."
        }
      ],
      "name": "enumerateWebhookRules",
      "longname": "module:base/ViewConfigurationSdk#enumerateWebhookRules",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a webhook target.\r\n   * @param {Object} [target] - Optional parameters.\r\n   * @param {string} [target.GUID] - GUID (automatically generated if not provided).\r\n   * @param {string} [target.TenantGUID] - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} [target.Name] - Name of the webhook target (defaults to \"My webhook target\").\r\n   * @param {string} [target.Url] - URL of the webhook target.\r\n   * @param {string} [target.ContentType] - Content type (defaults to \"application/json\").\r\n   * @param {number} [target.ExpectStatus] - Expected HTTP status (defaults to 200).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<WebhookTarget>} - Webhook target.\r\n   */",
      "meta": {
        "range": [
          113121,
          113431
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2156,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026195",
          "name": "createWebhookTarget",
          "type": "MethodDefinition",
          "paramnames": [
            "target",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create a webhook target.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional parameters.",
          "name": "target"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID (automatically generated if not provided).",
          "name": "target.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "target.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Name of the webhook target (defaults to \"My webhook target\").",
          "name": "target.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "URL of the webhook target.",
          "name": "target.Url"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Content type (defaults to \"application/json\").",
          "name": "target.ContentType"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "description": "Expected HTTP status (defaults to 200).",
          "name": "target.ExpectStatus"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<WebhookTarget>"
            ]
          },
          "description": "- Webhook target."
        }
      ],
      "name": "createWebhookTarget",
      "longname": "module:base/ViewConfigurationSdk#createWebhookTarget",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Check if a webhook target exists.\r\n   * @param {string} guid - GUID.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} - True if exists.\r\n   */",
      "meta": {
        "range": [
          113678,
          113967
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2170,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026235",
          "name": "existsWebhookTarget",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Check if a webhook target exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "- True if exists."
        }
      ],
      "name": "existsWebhookTarget",
      "longname": "module:base/ViewConfigurationSdk#existsWebhookTarget",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read a webhook target.\r\n   * @param {string} guid - GUID.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<WebhookTarget>} - Webhook target.\r\n   */",
      "meta": {
        "range": [
          114209,
          114517
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2184,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026275",
          "name": "retrieveWebhookTarget",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read a webhook target.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<WebhookTarget>"
            ]
          },
          "description": "- Webhook target."
        }
      ],
      "name": "retrieveWebhookTarget",
      "longname": "module:base/ViewConfigurationSdk#retrieveWebhookTarget",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read webhook targets.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<WebhookTarget[]>} - Webhook targets.\r\n   */",
      "meta": {
        "range": [
          114726,
          114933
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2197,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026316",
          "name": "retrieveWebhookTargets",
          "type": "MethodDefinition",
          "paramnames": [
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read webhook targets.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<WebhookTarget>>"
            ]
          },
          "description": "- Webhook targets."
        }
      ],
      "name": "retrieveWebhookTargets",
      "longname": "module:base/ViewConfigurationSdk#retrieveWebhookTargets",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Update a webhook target.\r\n   * @param {Object} [target] - Optional parameters.\r\n   * @param {string} [target.GUID] - GUID (automatically generated if not provided).\r\n   * @param {string} [target.TenantGUID] - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} [target.Name] - Name of the webhook target (defaults to \"My webhook target\").\r\n   * @param {string} [target.Url] - URL of the webhook target.\r\n   * @param {string} [target.ContentType] - Content type (defaults to \"application/json\").\r\n   * @param {number} [target.ExpectStatus] - Expected HTTP status (defaults to 200).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<WebhookTarget>} - Webhook target.\r\n   */",
      "meta": {
        "range": [
          115723,
          116048
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2214,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026344",
          "name": "updateWebhookTarget",
          "type": "MethodDefinition",
          "paramnames": [
            "target",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Update a webhook target.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional parameters.",
          "name": "target"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID (automatically generated if not provided).",
          "name": "target.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "target.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Name of the webhook target (defaults to \"My webhook target\").",
          "name": "target.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "URL of the webhook target.",
          "name": "target.Url"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Content type (defaults to \"application/json\").",
          "name": "target.ContentType"
        },
        {
          "type": {
            "names": [
              "number"
            ]
          },
          "optional": true,
          "description": "Expected HTTP status (defaults to 200).",
          "name": "target.ExpectStatus"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<WebhookTarget>"
            ]
          },
          "description": "- Webhook target."
        }
      ],
      "name": "updateWebhookTarget",
      "longname": "module:base/ViewConfigurationSdk#updateWebhookTarget",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete a webhook target.\r\n   * @param {string} guid - GUID.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void>}\r\n   */",
      "meta": {
        "range": [
          116265,
          116569
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2228,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026388",
          "name": "deleteWebhookTarget",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a webhook target.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          }
        }
      ],
      "name": "deleteWebhookTarget",
      "longname": "module:base/ViewConfigurationSdk#deleteWebhookTarget",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Enumerate Webhook target.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult|null|ApiErrorResponse>} A promise resolving to the created EnumerationResult object or null if creation fails.\r\n   * @throws {Error} If the EnumerationResult is null or invalid.\r\n   */",
      "meta": {
        "range": [
          116941,
          117152
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2242,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026429",
          "name": "enumerateWebhookTargets",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate Webhook target.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created EnumerationResult object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the EnumerationResult is null or invalid."
        }
      ],
      "name": "enumerateWebhookTargets",
      "longname": "module:base/ViewConfigurationSdk#enumerateWebhookTargets",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create a View endpoint.\r\n   * @param {Object} [endpoint] - Optional parameters.\r\n   * @param {string} [endpoint.GUID] - GUID (automatically generated if not provided).\r\n   * @param {string} [endpoint.TenantGUID] - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} [endpoint.OwnerGUID] - Owner GUID (automatically generated if not provided).\r\n   * @param {string} [endpoint.Name] - Name of the view endpoint (defaults to \"My View endpoint\").\r\n   * @param {boolean} [endpoint.UseSsl] - Boolean flag to enable or disable SSL (defaults to false).\r\n   * @param {string} [endpoint.S3Url] - S3 URL (defaults to \"http://localhost:8002/\").\r\n   * @param {string} [endpoint.S3BaseUrl] - S3 base URL (defaults to \"http://localhost:8002/{bucket}/{key}\").\r\n   * @param {string} [endpoint.RestUrl] - REST URL (defaults to \"http://localhost:8001/\").\r\n   * @param {string} [endpoint.BucketName] - Bucket name (defaults to \"data\").\r\n   * @param {string} [endpoint.Region] - Region (defaults to \"us-west-1\").\r\n   * @param {string} [endpoint.AccessKey] - Access key.\r\n   * @param {string} [endpoint.SecretKey] - Secret key.\r\n   * @param {string} [endpoint.ApiKey] - API key.\r\n   * @param {Date} [endpoint.CreatedUtc] - Created date (defaults to current UTC time).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<ViewEndpoint>} - View endpoint.\r\n   */",
      "meta": {
        "range": [
          118634,
          118949
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2269,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026455",
          "name": "createViewEndpoint",
          "type": "MethodDefinition",
          "paramnames": [
            "endpoint",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Create a View endpoint.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional parameters.",
          "name": "endpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID (automatically generated if not provided).",
          "name": "endpoint.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "endpoint.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "endpoint.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Name of the view endpoint (defaults to \"My View endpoint\").",
          "name": "endpoint.Name"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "optional": true,
          "description": "Boolean flag to enable or disable SSL (defaults to false).",
          "name": "endpoint.UseSsl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "S3 URL (defaults to \"http://localhost:8002/\").",
          "name": "endpoint.S3Url"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "S3 base URL (defaults to \"http://localhost:8002/{bucket}/{key}\").",
          "name": "endpoint.S3BaseUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "REST URL (defaults to \"http://localhost:8001/\").",
          "name": "endpoint.RestUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Bucket name (defaults to \"data\").",
          "name": "endpoint.BucketName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Region (defaults to \"us-west-1\").",
          "name": "endpoint.Region"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Access key.",
          "name": "endpoint.AccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Secret key.",
          "name": "endpoint.SecretKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "API key.",
          "name": "endpoint.ApiKey"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "optional": true,
          "description": "Created date (defaults to current UTC time).",
          "name": "endpoint.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<ViewEndpoint>"
            ]
          },
          "description": "- View endpoint."
        }
      ],
      "name": "createViewEndpoint",
      "longname": "module:base/ViewConfigurationSdk#createViewEndpoint",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Check if a View endpoint exists.\r\n   * @param {string} guid - GUID.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<boolean>} - True if exists.\r\n   */",
      "meta": {
        "range": [
          119195,
          119482
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2283,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026495",
          "name": "existsViewEndpoint",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Check if a View endpoint exists.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<boolean>"
            ]
          },
          "description": "- True if exists."
        }
      ],
      "name": "existsViewEndpoint",
      "longname": "module:base/ViewConfigurationSdk#existsViewEndpoint",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read a View endpoint.\r\n   * @param {string} guid - GUID.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<ViewEndpoint>} - View endpoint.\r\n   */",
      "meta": {
        "range": [
          119721,
          120026
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2297,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026535",
          "name": "retrieveViewEndpoint",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read a View endpoint.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<ViewEndpoint>"
            ]
          },
          "description": "- View endpoint."
        }
      ],
      "name": "retrieveViewEndpoint",
      "longname": "module:base/ViewConfigurationSdk#retrieveViewEndpoint",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Read View endpoints.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<ViewEndpoint[]>} - View endpoints.\r\n   */",
      "meta": {
        "range": [
          120232,
          120436
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2310,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026576",
          "name": "retrieveViewEndpoints",
          "type": "MethodDefinition",
          "paramnames": [
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Read View endpoints.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<Array.<ViewEndpoint>>"
            ]
          },
          "description": "- View endpoints."
        }
      ],
      "name": "retrieveViewEndpoints",
      "longname": "module:base/ViewConfigurationSdk#retrieveViewEndpoints",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Update a View endpoint.\r\n   * @param {Object} [endpoint] - Optional parameters.\r\n   * @param {string} [endpoint.GUID] - GUID (automatically generated if not provided).\r\n   * @param {string} [endpoint.TenantGUID] - Tenant GUID (automatically generated if not provided).\r\n   * @param {string} [endpoint.OwnerGUID] - Owner GUID (automatically generated if not provided).\r\n   * @param {string} [endpoint.Name] - Name of the view endpoint (defaults to \"My View endpoint\").\r\n   * @param {boolean} [endpoint.UseSsl] - Boolean flag to enable or disable SSL (defaults to false).\r\n   * @param {string} [endpoint.S3Url] - S3 URL (defaults to \"http://localhost:8002/\").\r\n   * @param {string} [endpoint.S3BaseUrl] - S3 base URL (defaults to \"http://localhost:8002/{bucket}/{key}\").\r\n   * @param {string} [endpoint.RestUrl] - REST URL (defaults to \"http://localhost:8001/\").\r\n   * @param {string} [endpoint.BucketName] - Bucket name (defaults to \"data\").\r\n   * @param {string} [endpoint.Region] - Region (defaults to \"us-west-1\").\r\n   * @param {string} [endpoint.AccessKey] - Access key.\r\n   * @param {string} [endpoint.SecretKey] - Secret key.\r\n   * @param {string} [endpoint.ApiKey] - API key.\r\n   * @param {Date} [endpoint.CreatedUtc] - Created date (defaults to current UTC time).\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<ViewEndpoint>} - View endpoint.\r\n   */",
      "meta": {
        "range": [
          121889,
          122221
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2335,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026604",
          "name": "updateViewEndpoint",
          "type": "MethodDefinition",
          "paramnames": [
            "endpoint",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Update a View endpoint.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional parameters.",
          "name": "endpoint"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "GUID (automatically generated if not provided).",
          "name": "endpoint.GUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Tenant GUID (automatically generated if not provided).",
          "name": "endpoint.TenantGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Owner GUID (automatically generated if not provided).",
          "name": "endpoint.OwnerGUID"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Name of the view endpoint (defaults to \"My View endpoint\").",
          "name": "endpoint.Name"
        },
        {
          "type": {
            "names": [
              "boolean"
            ]
          },
          "optional": true,
          "description": "Boolean flag to enable or disable SSL (defaults to false).",
          "name": "endpoint.UseSsl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "S3 URL (defaults to \"http://localhost:8002/\").",
          "name": "endpoint.S3Url"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "S3 base URL (defaults to \"http://localhost:8002/{bucket}/{key}\").",
          "name": "endpoint.S3BaseUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "REST URL (defaults to \"http://localhost:8001/\").",
          "name": "endpoint.RestUrl"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Bucket name (defaults to \"data\").",
          "name": "endpoint.BucketName"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Region (defaults to \"us-west-1\").",
          "name": "endpoint.Region"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Access key.",
          "name": "endpoint.AccessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Secret key.",
          "name": "endpoint.SecretKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "API key.",
          "name": "endpoint.ApiKey"
        },
        {
          "type": {
            "names": [
              "Date"
            ]
          },
          "optional": true,
          "description": "Created date (defaults to current UTC time).",
          "name": "endpoint.CreatedUtc"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<ViewEndpoint>"
            ]
          },
          "description": "- View endpoint."
        }
      ],
      "name": "updateViewEndpoint",
      "longname": "module:base/ViewConfigurationSdk#updateViewEndpoint",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Delete a View endpoint.\r\n   * @param {string} guid - GUID.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<void>}\r\n   */",
      "meta": {
        "range": [
          122437,
          122738
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2349,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026648",
          "name": "deleteViewEndpoint",
          "type": "MethodDefinition",
          "paramnames": [
            "guid",
            "cancelToken"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Delete a View endpoint.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "GUID.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<void>"
            ]
          }
        }
      ],
      "name": "deleteViewEndpoint",
      "longname": "module:base/ViewConfigurationSdk#deleteViewEndpoint",
      "kind": "function",
      "scope": "instance",
      "memberof": "module:base/ViewConfigurationSdk",
      "async": true
    },
    {
      "comment": "/**\r\n   * Enumerate BLOBs.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<EnumerationResult|null|ApiErrorResponse>} A promise resolving to the created Trigger object or null if creation fails.\r\n   * @throws {Error} If the trigger is null or invalid.\r\n   */",
      "meta": {
        "range": [
          123101,
          123293
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2365,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026689",
          "name": "enumerateBlobs",
          "type": "ClassProperty"
        }
      },
      "description": "Enumerate BLOBs.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(EnumerationResult|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Trigger object or null if creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the trigger is null or invalid."
        }
      ],
      "name": "enumerateBlobs",
      "longname": "module:base/ViewConfigurationSdk#enumerateBlobs",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a list of blobs.\r\n   *\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Array<Blob>|ApiErrorResponse>} A promise resolving to an array of Blob objects.\r\n   */",
      "meta": {
        "range": [
          123555,
          123742
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2376,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026715",
          "name": "retrieveBlobs",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a list of blobs.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<Blob>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of Blob objects."
        }
      ],
      "name": "retrieveBlobs",
      "longname": "module:base/ViewConfigurationSdk#retrieveBlobs",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a blob by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the blob to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Blob|null|ApiErrorResponse>} A promise resolving to the Blob object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          124132,
          124420
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2389,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026742",
          "name": "retrieveBlob",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a blob by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the blob to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Blob|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the Blob object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveBlob",
      "longname": "module:base/ViewConfigurationSdk#retrieveBlob",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve a blob with data by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the blob to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Blob|null|ApiErrorResponse>} A promise resolving to the Blob object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          124820,
          125133
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2405,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026782",
          "name": "retrieveBlobIncludeData",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve a blob with data by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the blob to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Blob|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the Blob object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "retrieveBlobIncludeData",
      "longname": "module:base/ViewConfigurationSdk#retrieveBlobIncludeData",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Write BLOB data.\r\n   * @param {Object} blob Information about the blob.\r\n   * @param {string} blob.ContentType - Content type of the BLOB.\r\n   * @param {string} blob.Name - Name of the BLOB.\r\n   * @param {string} blob.Description - Description of the BLOB.\r\n   * @param {string} blob.RefObjType - Object type to which this BLOB refers.\r\n   * @param {string} blob.RefObjGUID - Globally-unique identifier of the object to which this BLOB refers.\r\n   * @param {Uint8Array} blob.Data - BLOB data.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Node|null|ApiErrorResponse>} A promise resolving to the created Node object or null if the creation fails.\r\n   * @throws {Error} If the node is null or empty.\r\n   */",
      "meta": {
        "range": [
          125935,
          126216
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2426,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026824",
          "name": "writeBlob",
          "type": "ClassProperty"
        }
      },
      "description": "Write BLOB data.",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Information about the blob.",
          "name": "blob"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Content type of the BLOB.",
          "name": "blob.ContentType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Name of the BLOB.",
          "name": "blob.Name"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Description of the BLOB.",
          "name": "blob.Description"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Object type to which this BLOB refers.",
          "name": "blob.RefObjType"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "Globally-unique identifier of the object to which this BLOB refers.",
          "name": "blob.RefObjGUID"
        },
        {
          "type": {
            "names": [
              "Uint8Array"
            ]
          },
          "description": "BLOB data.",
          "name": "blob.Data"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Node|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the created Node object or null if the creation fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the node is null or empty."
        }
      ],
      "name": "writeBlob",
      "longname": "module:base/ViewConfigurationSdk#writeBlob",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete a BLOB.\r\n   *\r\n   * @param {string} guid - The GUID of the BLOB to delete.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Blob|null|ApiErrorResponse>} A promise resolving to the Blob object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          126590,
          126871
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2442,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026863",
          "name": "deleteBlob",
          "type": "ClassProperty"
        }
      },
      "description": "Delete a BLOB.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the BLOB to delete.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Blob|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the Blob object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "deleteBlob",
      "longname": "module:base/ViewConfigurationSdk#deleteBlob",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if a BLOB exists by its GUID.\r\n   *\r\n   * @param {string} guid - The GUID of the BLOB to retrieve.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<Blob|null|ApiErrorResponse>} A promise resolving to the Blob object or null if not found.\r\n   * @throws {Error} If the guid is null or empty.\r\n   */",
      "meta": {
        "range": [
          127268,
          127546
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2458,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026902",
          "name": "existsBlob",
          "type": "ClassProperty"
        }
      },
      "description": "Check if a BLOB exists by its GUID.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the BLOB to retrieve.",
          "name": "guid"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Blob|null|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to the Blob object or null if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the guid is null or empty."
        }
      ],
      "name": "existsBlob",
      "longname": "module:base/ViewConfigurationSdk#existsBlob",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve tenants for email.\r\n   *\r\n   * @param {object} hedars - Headers for custom authentication.\r\n   * @param {object} hedars.email - email to get tenants\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<TenantMetadata[]|ApiErrorResponse>} A promise resolving to an array of TenantMetadata objects or an error response if not found.\r\n   * @throws {Error} If the email is null or empty.\r\n   */",
      "meta": {
        "range": [
          128063,
          128365
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2476,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026941",
          "name": "retrieveTenantsForEmail",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve tenants for email.",
      "params": [
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "description": "Headers for custom authentication.",
          "name": "hedars"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "description": "email to get tenants",
          "name": "hedars.email"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(Array.<TenantMetadata>|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an array of TenantMetadata objects or an error response if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the email is null or empty."
        }
      ],
      "name": "retrieveTenantsForEmail",
      "longname": "module:base/ViewConfigurationSdk#retrieveTenantsForEmail",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Generate authentication token (using password)\r\n   *\r\n   * @param {Object} headers - Headers for custom authentication.\r\n   * @param {string} headers.email - The email address used to authenticate the tenant.\r\n   * @param {string} headers.password - The password for the tenant's account.\r\n   * @param {string} headers.tenantGUID - The GUID of the tenant for which the token is being generated.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<{ TimestampUtc: string, ExpirationUtc: string, IsExpired: boolean, Token: string, Valid: boolean }|ApiErrorResponse>} A promise resolving to an object containing token details or an error response if not found.\r\n   * @throws {Error} If the email is null or empty or if the password is null or empty or if the tenantGUID is null or empty.\r\n   */",
      "meta": {
        "range": [
          129246,
          129854
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2494,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100026976",
          "name": "generateAuthenticationTokenByPassword",
          "type": "ClassProperty"
        }
      },
      "description": "Generate authentication token (using password)",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Headers for custom authentication.",
          "name": "headers"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The email address used to authenticate the tenant.",
          "name": "headers.email"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The password for the tenant's account.",
          "name": "headers.password"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tenant for which the token is being generated.",
          "name": "headers.tenantGUID"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<({TimestampUtc: string, ExpirationUtc: string, IsExpired: boolean, Token: string, Valid: boolean}|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an object containing token details or an error response if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the email is null or empty or if the password is null or empty or if the tenantGUID is null or empty."
        }
      ],
      "name": "generateAuthenticationTokenByPassword",
      "longname": "module:base/ViewConfigurationSdk#generateAuthenticationTokenByPassword",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Generate authentication token (using password SHA-256)\r\n   *\r\n   * @param {Object} headers - Headers for custom authentication.\r\n   * @param {string} headers.email - The email address used to authenticate the tenant.\r\n   * @param {string} headers.passwordSHA256 - The passwordSHA256 for the tenant's account.\r\n   * @param {string} headers.tenantGUID - The GUID of the tenant for which the token is being generated.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<{ TimestampUtc: string, ExpirationUtc: string, IsExpired: boolean, Token: string, Valid: boolean }|ApiErrorResponse>} A promise resolving to an object containing token details or an error response if not found.\r\n   * @throws {Error} If the email is null or empty.\r\n   */",
      "meta": {
        "range": [
          130681,
          131318
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2522,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100027041",
          "name": "generateAuthenticationTokenBySHA256",
          "type": "ClassProperty"
        }
      },
      "description": "Generate authentication token (using password SHA-256)",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Headers for custom authentication.",
          "name": "headers"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The email address used to authenticate the tenant.",
          "name": "headers.email"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The passwordSHA256 for the tenant's account.",
          "name": "headers.passwordSHA256"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The GUID of the tenant for which the token is being generated.",
          "name": "headers.tenantGUID"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<({TimestampUtc: string, ExpirationUtc: string, IsExpired: boolean, Token: string, Valid: boolean}|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an object containing token details or an error response if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the email is null or empty."
        }
      ],
      "name": "generateAuthenticationTokenBySHA256",
      "longname": "module:base/ViewConfigurationSdk#generateAuthenticationTokenBySHA256",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Generate administrator token (using password)\r\n   *\r\n   * @param {Object} headers - Headers for custom authentication.\r\n   * @param {string} headers.email - The email address used to authenticate the administrator.\r\n   * @param {string} headers.password - The password for the administrator account.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n    @returns {Promise<{ TimestampUtc: string, ExpirationUtc: string, IsExpired: boolean, Token: string, Valid: boolean }|ApiErrorResponse>} A promise resolving to an object containing token details or an error response if not found.\r\n   * @throws {Error} If the email is null or empty or if the password is null or empty.\r\n   */",
      "meta": {
        "range": [
          132065,
          132490
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2549,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100027106",
          "name": "generateAdministratorToken",
          "type": "ClassProperty"
        }
      },
      "description": "Generate administrator token (using password)",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Headers for custom authentication.",
          "name": "headers"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The email address used to authenticate the administrator.",
          "name": "headers.email"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The password for the administrator account.",
          "name": "headers.password"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<({TimestampUtc: string, ExpirationUtc: string, IsExpired: boolean, Token: string, Valid: boolean}|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an object containing token details or an error response if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the email is null or empty or if the password is null or empty."
        }
      ],
      "name": "generateAdministratorToken",
      "longname": "module:base/ViewConfigurationSdk#generateAdministratorToken",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Generate administrator token (using password SHA-256)\r\n   *\r\n   * @param {Object} headers - Headers for custom authentication.\r\n   * @param {string} headers.email - The admin email address used to authenticate the administrator.\r\n   * @param {string} headers.passwordSHA256 - The admin passwordSHA256 for the administrator account.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<{ TimestampUtc: string, ExpirationUtc: string, IsExpired: boolean, Token: string, Valid: boolean }|ApiErrorResponse>} A promise resolving to an object containing token details or an error response if not found.\r\n   * @throws {Error} If the email is null or empty or if the passwordSHA256 is null or empty.\r\n   */",
      "meta": {
        "range": [
          133276,
          133740
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2569,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100027157",
          "name": "generateAdministratorTokenBySHA256",
          "type": "ClassProperty"
        }
      },
      "description": "Generate administrator token (using password SHA-256)",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Headers for custom authentication.",
          "name": "headers"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The admin email address used to authenticate the administrator.",
          "name": "headers.email"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The admin passwordSHA256 for the administrator account.",
          "name": "headers.passwordSHA256"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<({TimestampUtc: string, ExpirationUtc: string, IsExpired: boolean, Token: string, Valid: boolean}|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an object containing token details or an error response if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the email is null or empty or if the passwordSHA256 is null or empty."
        }
      ],
      "name": "generateAdministratorTokenBySHA256",
      "longname": "module:base/ViewConfigurationSdk#generateAdministratorTokenBySHA256",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Validate authentication token\r\n   *\r\n   * @param {Object} headers - Headers for custom authentication.\r\n   * @param {string} headers.token - The token to get validate the token.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<{ TimestampUtc: string, ExpirationUtc: string, IsExpired: boolean, Token: string, Valid: boolean }|ApiErrorResponse>} A promise resolving to an object containing token details or an error response if not found.\r\n   * @throws {Error} If the token is null or empty.\r\n   */",
      "meta": {
        "range": [
          134330,
          134631
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2588,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100027208",
          "name": "validateAuthenticationToken",
          "type": "ClassProperty"
        }
      },
      "description": "Validate authentication token",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Headers for custom authentication.",
          "name": "headers"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The token to get validate the token.",
          "name": "headers.token"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<({TimestampUtc: string, ExpirationUtc: string, IsExpired: boolean, Token: string, Valid: boolean}|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an object containing token details or an error response if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the token is null or empty."
        }
      ],
      "name": "validateAuthenticationToken",
      "longname": "module:base/ViewConfigurationSdk#validateAuthenticationToken",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve token details\r\n   *\r\n   * @param {Object} headers - Headers for custom authentication.\r\n   * @param {string} headers.token - The token to get validate the token.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<{ TimestampUtc: string, ExpirationUtc: string, IsExpired: boolean, Token: string, Valid: boolean }|ApiErrorResponse>} A promise resolving to an object containing token details or an error response if not found.\r\n   * @throws {Error} If the token is null or empty.\r\n   */",
      "meta": {
        "range": [
          135214,
          135507
        ],
        "filename": "ViewConfigurationSdk.js",
        "lineno": 2604,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100027245",
          "name": "retrieveTokenDetails",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve token details",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "description": "Headers for custom authentication.",
          "name": "headers"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The token to get validate the token.",
          "name": "headers.token"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<({TimestampUtc: string, ExpirationUtc: string, IsExpired: boolean, Token: string, Valid: boolean}|ApiErrorResponse)>"
            ]
          },
          "description": "A promise resolving to an object containing token details or an error response if not found."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the token is null or empty."
        }
      ],
      "name": "retrieveTokenDetails",
      "longname": "module:base/ViewConfigurationSdk#retrieveTokenDetails",
      "kind": "member",
      "memberof": "module:base/ViewConfigurationSdk",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n * ViewSdk Base service.\r\n * @module base/ViewSdkBase\r\n * @version 0.1.0\r\n */",
      "meta": {
        "filename": "ViewSDKBase.js",
        "lineno": 8,
        "columnno": 0,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {}
      },
      "description": "ViewSdk Base service.",
      "kind": "module",
      "name": "base/ViewSdkBase",
      "version": "0.1.0",
      "longname": "module:base/ViewSdkBase"
    },
    {
      "comment": "/**\r\n   * @constructor\r\n   * @param {string} tenantGuid\r\n   * @param {string} accessKey\r\n   * @param {string} endpoint\r\n   */",
      "meta": {
        "range": [
          617,
          1710
        ],
        "filename": "ViewSDKBase.js",
        "lineno": 21,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100027314",
          "name": "module.exports",
          "type": "MethodDefinition",
          "paramnames": [
            "tenantGuid",
            "accessKey",
            "endpoint"
          ]
        },
        "vars": {
          "": null
        }
      },
      "kind": "class",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "tenantGuid"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "accessKey"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "name": "endpoint"
        }
      ],
      "name": "module:base/ViewSdkBase",
      "longname": "module:base/ViewSdkBase"
    },
    {
      "comment": "/**\r\n     * The base URL against which to resolve every API call's (relative) path.\r\n     * @type {String}\r\n     * @default http://localhost\r\n     */",
      "meta": {
        "range": [
          994,
          1038
        ],
        "filename": "ViewSDKBase.js",
        "lineno": 33,
        "columnno": 4,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100027344",
          "name": "this.endpoint",
          "type": "CallExpression",
          "value": "",
          "paramnames": []
        }
      },
      "description": "The base URL against which to resolve every API call's (relative) path.",
      "type": {
        "names": [
          "String"
        ]
      },
      "defaultvalue": "http://localhost",
      "name": "endpoint",
      "longname": "module:base/ViewSdkBase#endpoint",
      "kind": "member",
      "memberof": "module:base/ViewSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n     * The default HTTP headers to be included for all API calls.\r\n     * @type {Array.<String>}\r\n     * @default {}\r\n     */",
      "meta": {
        "range": [
          1183,
          1325
        ],
        "filename": "ViewSDKBase.js",
        "lineno": 40,
        "columnno": 4,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100027355",
          "name": "this.defaultHeaders",
          "type": "ObjectExpression",
          "value": "{\"Authorization\":\"\"}",
          "paramnames": []
        }
      },
      "description": "The default HTTP headers to be included for all API calls.",
      "type": {
        "names": [
          "Array.<String>"
        ]
      },
      "defaultvalue": "{}",
      "name": "defaultHeaders",
      "longname": "module:base/ViewSdkBase#defaultHeaders",
      "kind": "member",
      "memberof": "module:base/ViewSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n     * The default HTTP timeout for all API calls.\r\n     * @type {Number}\r\n     * @default 60000\r\n     */",
      "meta": {
        "range": [
          1450,
          1470
        ],
        "filename": "ViewSDKBase.js",
        "lineno": 50,
        "columnno": 4,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100027368",
          "name": "this.timeout",
          "type": "Literal",
          "value": 60000,
          "paramnames": []
        }
      },
      "description": "The default HTTP timeout for all API calls.",
      "type": {
        "names": [
          "Number"
        ]
      },
      "defaultvalue": "60000",
      "name": "timeout",
      "longname": "module:base/ViewSdkBase#timeout",
      "kind": "member",
      "memberof": "module:base/ViewSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create an object via PUT request to the specified URL.\r\n   *\r\n   * @template T\r\n   * @param {string} url - The URL to send the PUT request to.\r\n   * @param {T} obj - The object to send in the request body.\r\n   * @param {Class} Model - Modal to deserialize on\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<T|null|ApiErrorResponse>} The created object as the response or null if the request fails.\r\n   * @throws {Error} If the URL or object is null or empty.\r\n   */",
      "meta": {
        "range": [
          2271,
          5058
        ],
        "filename": "ViewSDKBase.js",
        "lineno": 72,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100027388",
          "name": "create",
          "type": "ClassProperty"
        }
      },
      "description": "Create an object via PUT request to the specified URL.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to send the PUT request to.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "T"
            ]
          },
          "description": "The object to send in the request body.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "Class"
            ]
          },
          "description": "Modal to deserialize on",
          "name": "Model"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(T|null|ApiErrorResponse)>"
            ]
          },
          "description": "The created object as the response or null if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the URL or object is null or empty."
        }
      ],
      "name": "create",
      "longname": "module:base/ViewSdkBase#create",
      "kind": "member",
      "memberof": "module:base/ViewSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Check if data exists from the given URL with optional cancellation support using superagent's abort method.\r\n   *\r\n   * @template T\r\n   * @param {string} url - The URL to request data from.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<T|null|ApiErrorResponse>} The parsed JSON data from the response or null if the request fails.\r\n   * @throws {Error} If the URL is null or empty.\r\n   */",
      "meta": {
        "range": [
          5544,
          7998
        ],
        "filename": "ViewSDKBase.js",
        "lineno": 154,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100027654",
          "name": "exists",
          "type": "ClassProperty"
        }
      },
      "description": "Check if data exists from the given URL with optional cancellation support using superagent's abort method.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to request data from.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(T|null|ApiErrorResponse)>"
            ]
          },
          "description": "The parsed JSON data from the response or null if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the URL is null or empty."
        }
      ],
      "name": "exists",
      "longname": "module:base/ViewSdkBase#exists",
      "kind": "member",
      "memberof": "module:base/ViewSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Update an object via PUT request to the specified URL.\r\n   *\r\n   * @template T\r\n   * @param {string} url - The URL to send the PUT request to.\r\n   * @param {T} obj - The object to send in the request body.\r\n   * @param {Class} Model - Modal to deserialize on\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<T|null|ApiErrorResponse>} The created object as the response or null if the request fails.\r\n   * @throws {Error} If the URL or object is null or empty.\r\n   */",
      "meta": {
        "range": [
          8559,
          11395
        ],
        "filename": "ViewSDKBase.js",
        "lineno": 232,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100027885",
          "name": "update",
          "type": "ClassProperty"
        }
      },
      "description": "Update an object via PUT request to the specified URL.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to send the PUT request to.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "T"
            ]
          },
          "description": "The object to send in the request body.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "Class"
            ]
          },
          "description": "Modal to deserialize on",
          "name": "Model"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(T|null|ApiErrorResponse)>"
            ]
          },
          "description": "The created object as the response or null if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the URL or object is null or empty."
        }
      ],
      "name": "update",
      "longname": "module:base/ViewSdkBase#update",
      "kind": "member",
      "memberof": "module:base/ViewSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve single data from the given URL with optional cancellation support using superagent's abort method.\r\n   *\r\n   * @template T\r\n   * @param {string} url - The URL to request data from.\r\n   * @param {Class} Model - Modal to deserialize on\r\n   * @param {Object} [headers] - Additional headers for the request.\r\n   * @param {string} [headers.token] - headers token for authorization.\r\n   * @param {string} [headers.Range] - headers range for the request.\r\n   * @param {string} [headers.email] - headers email for the request.\r\n   * @param {{}} [cancelToken] - Optional headers with an `abort` method to cancel the request.\r\n   * @returns {Promise<T|null|ApiErrorResponse>} The parsed JSON data from the response or null if the request fails.\r\n   * @throws {Error} If the URL is null or empty.\r\n   */",
      "meta": {
        "range": [
          12216,
          14728
        ],
        "filename": "ViewSDKBase.js",
        "lineno": 324,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100028162",
          "name": "retrieve",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve single data from the given URL with optional cancellation support using superagent's abort method.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to request data from.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "Class"
            ]
          },
          "description": "Modal to deserialize on",
          "name": "Model"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Additional headers for the request.",
          "name": "headers"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "headers token for authorization.",
          "name": "headers.token"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "headers range for the request.",
          "name": "headers.Range"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "headers email for the request.",
          "name": "headers.email"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional headers with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(T|null|ApiErrorResponse)>"
            ]
          },
          "description": "The parsed JSON data from the response or null if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the URL is null or empty."
        }
      ],
      "name": "retrieve",
      "longname": "module:base/ViewSdkBase#retrieve",
      "kind": "member",
      "memberof": "module:base/ViewSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Retrieve all data from the given URL with optional cancellation support using superagent's abort method.\r\n   *\r\n   * @template T\r\n   * @param {string} url - The URL to request data from.\r\n   * @param {Class} Model - Modal to deserialize on\r\n   * @param {{}} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<T|null|ApiErrorResponse>} The parsed JSON data from the response or null if the request fails.\r\n   * @throws {Error} If the URL is null or empty.\r\n   */",
      "meta": {
        "range": [
          17593,
          20276
        ],
        "filename": "ViewSDKBase.js",
        "lineno": 466,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100028652",
          "name": "retrieveMany",
          "type": "ClassProperty"
        }
      },
      "description": "Retrieve all data from the given URL with optional cancellation support using superagent's abort method.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to request data from.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "Class"
            ]
          },
          "description": "Modal to deserialize on",
          "name": "Model"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(T|null|ApiErrorResponse)>"
            ]
          },
          "description": "The parsed JSON data from the response or null if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the URL is null or empty."
        }
      ],
      "name": "retrieveMany",
      "longname": "module:base/ViewSdkBase#retrieveMany",
      "kind": "member",
      "memberof": "module:base/ViewSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete single data from the given URL with optional cancellation support using superagent's abort method.\r\n   *\r\n   * @template T\r\n   * @param {string} url - The URL to delete data from.\r\n   * @param {Class} Model - Modal to deserialize on\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<T|null|ApiErrorResponse>} The parsed JSON data from the response or null if the request fails.\r\n   * @throws {Error} If the URL is null or empty.\r\n   */",
      "meta": {
        "range": [
          23952,
          26383
        ],
        "filename": "ViewSDKBase.js",
        "lineno": 628,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100028945",
          "name": "delete",
          "type": "ClassProperty"
        }
      },
      "description": "Delete single data from the given URL with optional cancellation support using superagent's abort method.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to delete data from.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "Class"
            ]
          },
          "description": "Modal to deserialize on",
          "name": "Model"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(T|null|ApiErrorResponse)>"
            ]
          },
          "description": "The parsed JSON data from the response or null if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the URL is null or empty."
        }
      ],
      "name": "delete",
      "longname": "module:base/ViewSdkBase#delete",
      "kind": "member",
      "memberof": "module:base/ViewSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete single data from the given URL with optional cancellation support using superagent's abort method.\r\n   *\r\n   * @template T\r\n   * @param {string} url - The URL to delete data from.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @param {string} [token] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<T|null|ApiErrorResponse>} The parsed JSON data from the response or null if the request fails.\r\n   * @throws {Error} If the URL is null or empty.\r\n   */",
      "meta": {
        "range": [
          26958,
          29426
        ],
        "filename": "ViewSDKBase.js",
        "lineno": 702,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100029183",
          "name": "deleteRaw",
          "type": "ClassProperty"
        }
      },
      "description": "Delete single data from the given URL with optional cancellation support using superagent's abort method.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to delete data from.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "token"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(T|null|ApiErrorResponse)>"
            ]
          },
          "description": "The parsed JSON data from the response or null if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the URL is null or empty."
        }
      ],
      "name": "deleteRaw",
      "longname": "module:base/ViewSdkBase#deleteRaw",
      "kind": "member",
      "memberof": "module:base/ViewSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Delete single data from the given URL with optional cancellation support using superagent's abort method.\r\n   *\r\n   * @template T\r\n   * @param {string} url - The URL to delete data from.\r\n   * @param {T} obj - The object to send in the request body.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<T|null|ApiErrorResponse>} The parsed JSON data from the response or null if the request fails.\r\n   * @throws {Error} If the URL is null or empty.\r\n   */",
      "meta": {
        "range": [
          29970,
          32124
        ],
        "filename": "ViewSDKBase.js",
        "lineno": 779,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100029426",
          "name": "deleteWithPayload",
          "type": "ClassProperty"
        }
      },
      "description": "Delete single data from the given URL with optional cancellation support using superagent's abort method.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to delete data from.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "T"
            ]
          },
          "description": "The object to send in the request body.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(T|null|ApiErrorResponse)>"
            ]
          },
          "description": "The parsed JSON data from the response or null if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the URL is null or empty."
        }
      ],
      "name": "deleteWithPayload",
      "longname": "module:base/ViewSdkBase#deleteWithPayload",
      "kind": "member",
      "memberof": "module:base/ViewSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create an object via POST request to the specified URL.\r\n   *\r\n   * @template T\r\n   * @param {string} url - The URL to send the PUT request to.\r\n   * @param {T} obj - The object to send in the request body.\r\n   * @param {Class} Model - Modal to deserialize on\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<T|null|ApiErrorResponse>} The created object as the response or null if the request fails.\r\n   * @throws {Error} If the URL or object is null or empty.\r\n   */",
      "meta": {
        "range": [
          32686,
          35472
        ],
        "filename": "ViewSDKBase.js",
        "lineno": 848,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100029654",
          "name": "post",
          "type": "ClassProperty"
        }
      },
      "description": "Create an object via POST request to the specified URL.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to send the PUT request to.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "T"
            ]
          },
          "description": "The object to send in the request body.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "Class"
            ]
          },
          "description": "Modal to deserialize on",
          "name": "Model"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(T|null|ApiErrorResponse)>"
            ]
          },
          "description": "The created object as the response or null if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the URL or object is null or empty."
        }
      ],
      "name": "post",
      "longname": "module:base/ViewSdkBase#post",
      "kind": "member",
      "memberof": "module:base/ViewSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create an object via POST request to the specified URL.\r\n   *\r\n   * @template T\r\n   * @param {string} url - The URL to send the POST request to.\r\n   * @param {T} obj - The object to send in the request body.\r\n   * @param {Class} Model - Class to deserialize the response body into.\r\n   * @param {string} contentType - The content type of the request (e.g., 'application/json').\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<T|null|ApiErrorResponse>} The created object as the response or an `ApiErrorResponse` if the request fails.\r\n   * @throws {Error} If the URL or object is null or empty.\r\n   */",
      "meta": {
        "range": [
          36169,
          38860
        ],
        "filename": "ViewSDKBase.js",
        "lineno": 933,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100029920",
          "name": "postContentType",
          "type": "ClassProperty"
        }
      },
      "description": "Create an object via POST request to the specified URL.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to send the POST request to.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "T"
            ]
          },
          "description": "The object to send in the request body.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "Class"
            ]
          },
          "description": "Class to deserialize the response body into.",
          "name": "Model"
        },
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The content type of the request (e.g., 'application/json').",
          "name": "contentType"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(T|null|ApiErrorResponse)>"
            ]
          },
          "description": "The created object as the response or an `ApiErrorResponse` if the request fails."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the URL or object is null or empty."
        }
      ],
      "name": "postContentType",
      "longname": "module:base/ViewSdkBase#postContentType",
      "kind": "member",
      "memberof": "module:base/ViewSdkBase",
      "scope": "instance"
    },
    {
      "comment": "/**\r\n   * Create an object via POST request to the specified URL.\r\n   *\r\n   * @template T\r\n   * @param {string} url - The URL to send the POST request to.\r\n   * @param {T} obj - The object to send in the request body.\r\n   * @param {object} [cancelToken] - Optional object with an `abort` method to cancel the request.\r\n   * @returns {Promise<object|null|ApiErrorResponse>} The raw response data from the API or an error response.\r\n   * @throws {Error} If the URL or object is null or empty.\r\n   */",
      "meta": {
        "range": [
          39367,
          42062
        ],
        "filename": "ViewSDKBase.js",
        "lineno": 1015,
        "columnno": 2,
        "path": "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base",
        "code": {
          "id": "astnode100030187",
          "name": "createRaw",
          "type": "ClassProperty"
        }
      },
      "description": "Create an object via POST request to the specified URL.",
      "params": [
        {
          "type": {
            "names": [
              "string"
            ]
          },
          "description": "The URL to send the POST request to.",
          "name": "url"
        },
        {
          "type": {
            "names": [
              "T"
            ]
          },
          "description": "The object to send in the request body.",
          "name": "obj"
        },
        {
          "type": {
            "names": [
              "object"
            ]
          },
          "optional": true,
          "description": "Optional object with an `abort` method to cancel the request.",
          "name": "cancelToken"
        }
      ],
      "returns": [
        {
          "type": {
            "names": [
              "Promise.<(object|null|ApiErrorResponse)>"
            ]
          },
          "description": "The raw response data from the API or an error response."
        }
      ],
      "exceptions": [
        {
          "type": {
            "names": [
              "Error"
            ]
          },
          "description": "If the URL or object is null or empty."
        }
      ],
      "name": "createRaw",
      "longname": "module:base/ViewSdkBase#createRaw",
      "kind": "member",
      "memberof": "module:base/ViewSdkBase",
      "scope": "instance"
    },
    {
      "kind": "package",
      "longname": "package:undefined",
      "files": [
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Assistant\\ViewAssistantSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Crawler\\ViewCrawlerSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Director\\ViewDirectorSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Embeddings\\EmbeddingsSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Graph\\GraphSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\HealthCheck\\ViewHealthcheckSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Lexi\\ViewLexiSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Orchestrator\\ViewOrchestratorSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor\\ViewCleanupSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor\\ViewLexiEmbeddingsSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor\\ViewProcessorSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor\\ViewTypeDetectorSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Processor\\ViewUdrGeneratorSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Semantic\\ViewSemanticCellSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Storage\\ViewStorageSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector\\EmbeddingsSdkBase.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector\\ViewEmbeddingsSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector\\ViewLcproxySdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector\\ViewOllamaSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector\\ViewOpenAiSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector\\ViewVectorProxySdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\Vector\\ViewVoyageAiSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\ViewConfigurationSdk.js",
        "D:\\Projects\\ViewIo\\repo\\js_sdk_viewio\\src\\base\\ViewSDKBase.js"
      ]
    }
  ]
}